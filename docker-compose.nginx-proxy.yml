version: "3.8"

services:
  # Application Laravel + Nuxt (image unique)
  app:
    image: ${IMAGE_NAME:-olegrand1976/activibe-app:latest}
    container_name: activibe-app
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST:-bookyourcoach.com,www.bookyourcoach.com}
      - VIRTUAL_PORT=3001
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST:-bookyourcoach.com,www.bookyourcoach.com}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-admin@bookyourcoach.com}
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - APP_URL=${APP_URL}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - CACHE_DRIVER=${CACHE_DRIVER}
      - SESSION_DRIVER=${SESSION_DRIVER}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION}
    ports:
      - "3001:3001"  # Frontend Nuxt
      - "80:80"      # Backend Laravel (nginx interne)
      - "9000:9000"  # PHP-FPM
    volumes:
      - app_storage:/var/www/storage
      - app_bootstrap_cache:/var/www/bootstrap/cache
      - ssl_certs:/etc/ssl/certs
    depends_on:
      - redis
      - neo4j
    networks:
      - nginx-proxy
      - app-network

  # Base de données MySQL hébergée sur OVH (pas de container local)

  # phpMyAdmin pour administrer la base de données OVH
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: activibe-phpmyadmin
    restart: unless-stopped
    ports:
      - "8082:80"
    environment:
      - PMA_HOST=${DB_HOST}
      - PMA_PORT=${DB_PORT}
      - PMA_USER=${DB_USERNAME}
      - PMA_PASSWORD=${DB_PASSWORD}
      - UPLOAD_LIMIT=256M
      - MEMORY_LIMIT=512M
    networks:
      - app-network
    depends_on:
      - redis

  # Redis pour cache et sessions
  redis:
    image: redis:7-alpine
    container_name: activibe-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  # Neo4j pour analyses graphiques
  neo4j:
    image: neo4j:5.15-community
    container_name: activibe-neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"  # Interface web
      - "7687:7687"  # Bolt protocol
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_dbms_connector_http_listen_address=0.0.0.0:7474
      - NEO4J_dbms_connector_https_listen_address=0.0.0.0:7473
      - NEO4J_dbms_connector_bolt_listen_address=0.0.0.0:7687
      - NEO4J_dbms_default_listen_address=0.0.0.0
      - NEO4J_dbms_memory_pagecache_size=512M
      - NEO4J_dbms_memory_heap_max_size=1G
      - NEO4J_dbms_memory_heap_initial_size=512M
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - app-network

  # nginx-proxy pour reverse proxy automatique
  nginx-proxy:
    image: nginxproxy/nginx-proxy:latest
    container_name: activibe-nginx-proxy
    restart: unless-stopped
    ports:
      - "8081:80"   # HTTP via nginx-proxy
      - "8444:443"  # HTTPS via nginx-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx_certs:/etc/nginx/certs
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - nginx_dhparam:/etc/nginx/dhparam
    environment:
      - TRUST_DOWNSTREAM_PROXY=false
    networks:
      - nginx-proxy
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"

  # Container infiswap-front (préservé sur port 80)
  infiswap-front:
    image: nginx:alpine
    container_name: infiswap-front
    restart: unless-stopped
    ports:
      - "80:80"  # Port 80 préservé pour infiswap-front
    volumes:
      - ./infiswap-static:/usr/share/nginx/html:ro
    networks:
      - nginx-proxy

volumes:
  redis_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  app_storage:
    driver: local
  app_bootstrap_cache:
    driver: local
  ssl_certs:
    driver: local
  nginx_certs:
    driver: local
  nginx_vhost:
    driver: local
  nginx_html:
    driver: local
  nginx_dhparam:
    driver: local

networks:
  nginx-proxy:
    driver: bridge
  app-network:
    driver: bridge
    internal: true
