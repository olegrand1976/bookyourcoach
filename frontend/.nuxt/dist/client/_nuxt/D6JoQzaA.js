import{B,h as r,x as E,s as I,c as y,a as s,k as N,t as i,m as t,j as P,l as _,v as C,E as T,H as b,o as A}from"./C0TLcctm.js";const R={class:"min-h-screen bg-gray-100 flex items-center justify-center"},S={class:"max-w-md w-full bg-white p-8 rounded-lg shadow-md"},M={class:"space-y-4"},U={class:"p-4 bg-blue-50 rounded-lg"},V={class:"text-sm text-blue-600"},L={class:"text-sm text-blue-600"},j={class:"p-4 bg-green-50 rounded-lg"},D={class:"text-sm text-green-600"},z=["disabled"],H={class:"p-4 bg-yellow-50 rounded-lg"},J=["disabled"],q={__name:"test-api",setup(O){const d=I(),{$api:f}=B(),c=r("Non testé"),p=r(!1),g=r(!1),o=r(null),u=r("admin@activibe.com"),m=r("admin123"),x=async()=>{var n;p.value=!0,c.value="Test en cours...";try{const e=await f.get("/health");c.value="Connecté ✅",o.value={success:!0,data:{message:"API accessible",response:e.data}}}catch(e){c.value="Erreur ❌",o.value={success:!1,data:{message:"Erreur API",error:e.message,config:e.config,response:(n=e.response)==null?void 0:n.data}}}finally{p.value=!1}},k=async()=>{var n,e,l,v,h,w;g.value=!0,o.value=null;try{console.log("Configuration API utilisée:",d.public.apiBase),console.log("Tentative de connexion avec:",{email:u.value,password:"***"});const a=await f.post("/auth/login",{email:u.value,password:m.value});o.value={success:!0,data:{message:"Connexion réussie !",user:a.data.user,token:((n=a.data.token)==null?void 0:n.substring(0,20))+"..."}}}catch(a){console.error("Erreur de connexion:",a),o.value={success:!1,data:{message:"Erreur de connexion",error:a.message,status:(e=a.response)==null?void 0:e.status,statusText:(l=a.response)==null?void 0:l.statusText,url:(v=a.config)==null?void 0:v.url,baseURL:(h=a.config)==null?void 0:h.baseURL,response:(w=a.response)==null?void 0:w.data}}}finally{g.value=!1}};return E(()=>{console.log("Configuration runtime chargée:",d.public),x()}),(n,e)=>(A(),y("div",R,[s("div",S,[e[5]||(e[5]=s("h1",{class:"text-2xl font-bold mb-6 text-center"},"Test de Configuration API",-1)),s("div",M,[s("div",U,[e[2]||(e[2]=s("h3",{class:"font-semibold text-blue-800"},"Configuration Runtime",-1)),s("p",V,"API Base: "+i(t(d).public.apiBase),1),s("p",L,"App Name: "+i(t(d).public.appName),1)]),s("div",j,[e[3]||(e[3]=s("h3",{class:"font-semibold text-green-800"},"État API",-1)),s("p",D,"Status: "+i(t(c)),1),s("button",{onClick:x,class:"mt-2 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700",disabled:t(p)},i(t(p)?"Test en cours...":"Tester API"),9,z)]),s("div",H,[e[4]||(e[4]=s("h3",{class:"font-semibold text-yellow-800"},"Test de Connexion",-1)),s("form",{onSubmit:P(k,["prevent"]),class:"space-y-3"},[_(s("input",{"onUpdate:modelValue":e[0]||(e[0]=l=>T(u)?u.value=l:null),type:"email",placeholder:"Email",class:"w-full p-2 border rounded"},null,512),[[C,t(u)]]),_(s("input",{"onUpdate:modelValue":e[1]||(e[1]=l=>T(m)?m.value=l:null),type:"password",placeholder:"Mot de passe",class:"w-full p-2 border rounded"},null,512),[[C,t(m)]]),s("button",{type:"submit",class:"w-full py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700",disabled:t(g)},i(t(g)?"Connexion...":"Se connecter"),9,J)],32)]),t(o)?(A(),y("div",{key:0,class:b(["p-4 rounded-lg",t(o).success?"bg-green-50":"bg-red-50"])},[s("h3",{class:b(["font-semibold",t(o).success?"text-green-800":"text-red-800"])}," Résultat du Test ",2),s("pre",{class:b(["text-xs mt-2 overflow-auto",t(o).success?"text-green-600":"text-red-600"])},i(JSON.stringify(t(o).data,null,2)),3)],2)):N("",!0)])])]))}};export{q as default};
