{"version":3,"file":"auth-SYtdBTeW.js","sources":["../../../../stores/auth.ts"],"sourcesContent":["import { defineStore } from 'pinia'\n\ninterface User {\n    id: number\n    name: string\n    email: string\n    role: 'admin' | 'teacher' | 'student'\n    is_active: boolean\n    profile?: any\n    teacher?: any\n    student?: any\n    can_act_as_teacher?: boolean\n    can_act_as_student?: boolean\n    is_admin?: boolean\n}\n\ninterface AuthState {\n    user: User | null\n    token: string | null\n    isAuthenticated: boolean\n    loading: boolean\n}\n\nexport const useAuthStore = defineStore('auth', {\n    state: (): AuthState => ({\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n    }),\n\n    getters: {\n        isAdmin: (state) => state.user?.role === 'admin',\n        isTeacher: (state) => state.user?.role === 'teacher',\n        isStudent: (state) => state.user?.role === 'student',\n        canActAsTeacher: (state) => state.user?.can_act_as_teacher || false,\n        canActAsStudent: (state) => state.user?.can_act_as_student || false,\n        userName: (state) => state.user?.name || 'Utilisateur'\n    },\n\n    actions: {\n        async login(credentials: { email: string, password: string }) {\n            console.log('üîë [LOGIN] D√©but de la connexion avec:', credentials.email)\n            this.loading = true\n            try {\n                const { $api } = useNuxtApp()\n                console.log('üîë [LOGIN] Appel API /auth/login...')\n                const response = await $api.post('/auth/login', credentials)\n                console.log('üîë [LOGIN] R√©ponse API:', response.data)\n\n                this.token = response.data.token\n                this.user = response.data.user\n                this.isAuthenticated = true\n\n                console.log('üîë [LOGIN] Utilisateur connect√©:', {\n                    id: this.user.id,\n                    email: this.user.email,\n                    role: this.user.role,\n                    name: this.user.name\n                })\n\n                // Stocker le token\n                const tokenCookie = useCookie('auth-token', {\n                    httpOnly: false,\n                    secure: false,\n                    maxAge: 60 * 60 * 24 * 7 // 7 jours\n                })\n                tokenCookie.value = this.token\n                console.log('üîë [LOGIN] Token stock√© dans cookie')\n\n                return response.data\n            } catch (error) {\n                console.error('üîë [LOGIN] Erreur de connexion:', error)\n                throw error\n            } finally {\n                this.loading = false\n            }\n        },\n\n        async register(userData: {\n            name: string\n            email: string\n            password: string\n            password_confirmation: string\n        }) {\n            this.loading = true\n            try {\n                const { $api } = useNuxtApp()\n                const response = await $api.post('/auth/register', userData)\n\n                this.token = response.data.token\n                this.user = response.data.user\n                this.isAuthenticated = true\n\n                // Stocker le token\n                const tokenCookie = useCookie('auth-token')\n                tokenCookie.value = this.token\n\n                return response.data\n            } catch (error) {\n                throw error\n            } finally {\n                this.loading = false\n            }\n        },\n\n        async logout() {\n            try {\n                const { $api } = useNuxtApp()\n                await $api.post('/auth/logout')\n            } catch (error) {\n                console.error('Erreur lors de la d√©connexion:', error)\n            } finally {\n                this.user = null\n                this.token = null\n                this.isAuthenticated = false\n\n                // Supprimer le token\n                const tokenCookie = useCookie('auth-token')\n                tokenCookie.value = null\n\n                // Nettoyer le localStorage si pr√©sent\n                if (process.client) {\n                    localStorage.removeItem('auth-token')\n                    localStorage.removeItem('user-data')\n                }\n\n                await navigateTo('/login')\n            }\n        },\n\n        async fetchUser() {\n            console.log('üîç [FETCH USER] D√©but fetchUser, token pr√©sent:', !!this.token)\n            if (!this.token) return\n\n            try {\n                const { $api } = useNuxtApp()\n                console.log('üîç [FETCH USER] Appel API /auth/user...')\n                const response = await $api.get('/auth/user')\n                console.log('üîç [FETCH USER] R√©ponse compl√®te:', JSON.stringify(response.data, null, 2))\n\n                this.user = response.data.user || response.data\n                this.isAuthenticated = true\n\n                console.log('üîç [FETCH USER] User assign√©:', {\n                    id: this.user.id,\n                    email: this.user.email,\n                    role: this.user.role,\n                    name: this.user.name\n                })\n\n                // Sauvegarder les donn√©es utilisateur localement\n                if (process.client) {\n                    const userDataToSave = JSON.stringify(this.user)\n                    localStorage.setItem('user-data', userDataToSave)\n                    console.log('üîç [FETCH USER] Donn√©es sauv√©es en localStorage:', userDataToSave)\n                }\n            } catch (error: any) {\n                console.error('üîç [FETCH USER] Erreur lors de la r√©cup√©ration de l\\'utilisateur:', error)\n\n                // Si c'est une erreur 401 (token expir√©), d√©connecter silencieusement\n                if (error.response?.status === 401) {\n                    this.user = null\n                    this.token = null\n                    this.isAuthenticated = false\n\n                    const tokenCookie = useCookie('auth-token')\n                    tokenCookie.value = null\n\n                    if (process.client) {\n                        localStorage.removeItem('auth-token')\n                        localStorage.removeItem('user-data')\n                    }\n                }\n\n                throw error\n            }\n        },\n\n        async initializeAuth() {\n            console.log('üîç [AUTH DEBUG] D√©but initializeAuth')\n            if (process.client) {\n                const tokenCookie = useCookie('auth-token')\n                console.log('üîç [AUTH DEBUG] Token cookie:', tokenCookie.value ? 'pr√©sent' : 'absent')\n\n                if (tokenCookie.value) {\n                    this.token = tokenCookie.value\n\n                    // Essayer de r√©cup√©rer les donn√©es utilisateur depuis localStorage\n                    const userData = localStorage.getItem('user-data')\n                    console.log('üîç [AUTH DEBUG] User data localStorage:', userData ? 'pr√©sent' : 'absent')\n\n                    if (userData) {\n                        try {\n                            this.user = JSON.parse(userData)\n                            this.isAuthenticated = true\n                            console.log('üîç [AUTH DEBUG] User restaur√©:', this.user.email, 'role:', this.user.role)\n                        } catch (e) {\n                            console.warn('Donn√©es utilisateur corrompues dans localStorage')\n                        }\n                    }\n\n                    // V√©rifier la validit√© du token de mani√®re synchrone\n                    try {\n                        console.log('üîç [AUTH DEBUG] D√©but v√©rification token...')\n                        const isValid = await this.verifyToken()\n                        console.log('üîç [AUTH DEBUG] Token valide:', isValid)\n\n                        if (!isValid) {\n                            console.warn('Token invalide lors de la v√©rification')\n                            // Token invalide, rediriger vers login\n                            await navigateTo('/login')\n                        } else {\n                            console.log('üîç [AUTH DEBUG] Authentification r√©ussie, user final:', this.user?.email, 'role:', this.user?.role)\n                        }\n                    } catch (error) {\n                        console.error('Erreur lors de la v√©rification du token:', error)\n                        // En cas d'erreur, rediriger vers login\n                        await navigateTo('/login')\n                    }\n                } else {\n                    console.log('üîç [AUTH DEBUG] Aucun token trouv√©')\n                }\n            }\n        },\n\n        // Nouvelle m√©thode pour forcer la v√©rification du token\n        async verifyToken() {\n            if (!this.token) {\n                return false\n            }\n\n            try {\n                await this.fetchUser()\n                return true\n            } catch (error: any) {\n                if (error.response?.status === 401) {\n                    // Nettoyer les donn√©es d'authentification\n                    this.user = null\n                    this.token = null\n                    this.isAuthenticated = false\n\n                    const tokenCookie = useCookie('auth-token')\n                    tokenCookie.value = null\n\n                    if (process.client) {\n                        localStorage.removeItem('auth-token')\n                        localStorage.removeItem('user-data')\n                    }\n                }\n                return false\n            }\n        }\n    }\n})\n"],"names":[],"mappings":"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"}