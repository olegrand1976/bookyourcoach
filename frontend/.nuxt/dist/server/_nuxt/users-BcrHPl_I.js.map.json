{"file":"users-BcrHPl_I.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAySA,UAAM,UAAU,IAAI,IAAI;AACxB,UAAM,kBAAkB,IAAI,KAAK;AACjC,UAAM,gBAAgB,IAAI,KAAK;AAC/B,UAAM,QAAQ,IAAI,CAAA,CAAE;AACpB,UAAM,cAAc,IAAI,CAAC;AACzB,UAAM,UAAU,IAAI,EAAE;AACtB,UAAM,aAAa,IAAI,CAAC;AACxB,UAAM,aAAa,IAAI,CAAC;AAGxB,UAAM,UAAU,IAAI;AAAA,MAChB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,aAAa;AAAA,IACjB,CAAC;AAGD,UAAM,WAAW,IAAI;AAAA,MACjB,IAAI;AAAA,MACJ,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,OAAO;AAAA,MACP,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,eAAe;AAAA,MACf,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,MACV,uBAAuB;AAAA,IAC3B,CAAC;AAGD,UAAM,eAAe,SAAS,MAAM;AAChC,YAAM,QAAQ,CAAA;AACd,YAAM,QAAQ,KAAK,IAAI,GAAG,YAAY,QAAQ,CAAC;AAC/C,YAAM,MAAM,KAAK,IAAI,WAAW,OAAO,YAAY,QAAQ,CAAC;AAE5D,eAAS,IAAI,OAAO,KAAK,KAAK,KAAK;AAC/B,cAAM,KAAK,CAAC;AAAA,MAChB;AACA,aAAO;AAAA,IACX,CAAC;AAGD,UAAM,eAAe,CAAC,SAAS;AAC3B,YAAM,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,SAAS;AAAA,QACT,SAAS;AAAA,QACT,MAAM;AAAA,MACd;AACI,aAAO,QAAQ,IAAI,KAAK;AAAA,IAC5B;AAEA,UAAM,eAAe,CAAC,SAAS;AAC3B,YAAM,SAAS;AAAA,QACX,OAAO;AAAA,QACP,SAAS;AAAA,QACT,SAAS;AAAA,QACT,MAAM;AAAA,MACd;AACI,aAAO,OAAO,IAAI,KAAK;AAAA,IAC3B;AAEA,UAAM,aAAa,CAAC,eAAe;AAC/B,aAAO,IAAI,KAAK,UAAU,EAAE,mBAAmB,OAAO;AAAA,IAC1D;AAEA,UAAM,YAAY,YAAY;;AAC1B,cAAQ,QAAQ;AAChB,UAAI;AACA,cAAM,EAAE,KAAI,IAAK,WAAU;AAG3B,cAAM,SAAS,IAAI,gBAAgB;AAAA,UAC/B,MAAM,YAAY;AAAA,UAClB,UAAU,QAAQ;AAAA,QAC9B,CAAS;AAGD,YAAI,QAAQ,MAAM,UAAU,QAAQ,MAAM,OAAO,QAAQ;AACrD,iBAAO,OAAO,UAAU,QAAQ,MAAM,OAAO,KAAI,CAAE;AAAA,QACvD;AACA,YAAI,QAAQ,MAAM,QAAQ,QAAQ,MAAM,KAAK,QAAQ;AACjD,iBAAO,OAAO,QAAQ,QAAQ,MAAM,KAAK,KAAI,CAAE;AAAA,QACnD;AACA,YAAI,QAAQ,MAAM,UAAU,QAAQ,MAAM,OAAO,QAAQ;AACrD,iBAAO,OAAO,UAAU,QAAQ,MAAM,OAAO,KAAI,CAAE;AAAA,QACvD;AACA,YAAI,QAAQ,MAAM,eAAe,QAAQ,MAAM,YAAY,QAAQ;AAC/D,iBAAO,OAAO,eAAe,QAAQ,MAAM,YAAY,KAAI,CAAE;AAAA,QACjE;AAEA,gBAAQ,IAAI,uBAAuB,OAAO,SAAQ,CAAE;AACpD,cAAM,WAAW,MAAM,KAAK,IAAI,gBAAgB,MAAM,EAAE;AAGxD,gBAAQ,IAAI,sBAAsB,QAAQ;AAC1C,gBAAQ,IAAI,kBAAkB,SAAS,IAAI;AAG3C,cAAM,eAAe,SAAS,QAAQ;AACtC,YAAI,aAAa,QAAQ,MAAM,QAAQ,aAAa,IAAI,GAAG;AAEvD,gBAAM,QAAQ,aAAa;AAC3B,qBAAW,QAAQ,aAAa,SAAS,aAAa,KAAK;AAC3D,qBAAW,QAAQ,aAAa,aAAa,KAAK,KAAK,WAAW,QAAQ,QAAQ,KAAK;AACvF,sBAAY,QAAQ,aAAa,gBAAgB;AACjD,kBAAQ,IAAI,8CAA8C,MAAM,MAAM,MAAM;AAAA,QAChF,WAAW,MAAM,QAAQ,YAAY,GAAG;AAEpC,gBAAM,QAAQ;AACd,qBAAW,QAAQ,aAAa;AAChC,qBAAW,QAAQ,KAAK,KAAK,WAAW,QAAQ,QAAQ,KAAK;AAC7D,kBAAQ,IAAI,0CAA0C,MAAM,MAAM,MAAM;AAAA,QAC5E,OAAO;AACH,kBAAQ,KAAK,oCAAoC,YAAY;AAC7D,gBAAM,QAAQ,CAAA;AACd,qBAAW,QAAQ;AACnB,qBAAW,QAAQ;AAAA,QACvB;AAAA,MACJ,SAAS,OAAO;AACZ,gBAAQ,MAAM,+CAA+C,KAAK;AAClE,gBAAQ,MAAM,yBAAyB,WAAM,aAAN,mBAAgB,IAAI;AAE3D,cAAM,QAAQ,CAAA;AACd,mBAAW,QAAQ;AACnB,mBAAW,QAAQ;AAAA,MACvB,UAAC;AACG,gBAAQ,QAAQ;AAAA,MACpB;AAAA,IACJ;AAwKA,UAAM,SAAS,MAAM;AACjB,kBAAY,QAAQ;AACpB,gBAAS;AAAA,IACb,GAAG,EAAE,MAAM,KAAI,CAAE;;mBA1lBRA,eAAAC,WAAA,EAAA,OAAM,0BAAyB,GAAA,MAAA,CAAA,mpBAwBAC,cAAA,SAAA,QAAA,MAAQ,MAAM,8XAIbC,sBAAA,MAAA,QAAA,QAAA,MAAQ,IAAI,IAAZC,gBAAA,QAAA,MAAQ,MAAI,EAAA,IAAZC,cAAA,QAAA,MAAQ,MAAI,EAAA,CAAA,IAAA,cAAA,kDAAZF,sBAAA,MAAA,QAAA,QAAA,MAAQ,IAAI,IAAZC,gBAAA,QAAA,MAAQ,MAAI,OAAA,IAAZC,cAAA,QAAA,MAAQ,MAAI,OAAA,CAAA,IAAA,cAAA,oDAAZF,sBAAA,MAAA,QAAA,QAAA,MAAQ,IAAI,IAAZC,gBAAA,QAAA,MAAQ,MAAI,SAAA,IAAZC,cAAA,QAAA,MAAQ,MAAI,SAAA,CAAA,IAAA,cAAA,gDAAZF,sBAAA,MAAA,QAAA,QAAA,MAAQ,IAAI,IAAZC,gBAAA,QAAA,MAAQ,MAAI,SAAA,IAAZC,cAAA,QAAA,MAAQ,MAAI,SAAA,CAAA,IAAA,cAAA,wCAAZF,sBAAA,MAAA,QAAA,QAAA,MAAQ,IAAI,IAAZC,gBAAA,QAAA,MAAQ,MAAI,MAAA,IAAZC,cAAA,QAAA,MAAQ,MAAI,MAAA,CAAA,IAAA,cAAA,2PAUZF,sBAAA,MAAA,QAAA,QAAA,MAAQ,MAAM,IAAdC,gBAAA,QAAA,MAAQ,QAAM,EAAA,IAAdC,cAAA,QAAA,MAAQ,QAAM,EAAA,CAAA,IAAA,cAAA,qDAAdF,sBAAA,MAAA,QAAA,QAAA,MAAQ,MAAM,IAAdC,gBAAA,QAAA,MAAQ,QAAM,QAAA,IAAdC,cAAA,QAAA,MAAQ,QAAM,QAAA,CAAA,IAAA,cAAA,4CAAdF,sBAAA,MAAA,QAAA,QAAA,MAAQ,MAAM,IAAdC,gBAAA,QAAA,MAAQ,QAAM,UAAA,IAAdC,cAAA,QAAA,MAAQ,QAAM,UAAA,CAAA,IAAA,cAAA,+HAQfH,cAAA,SAAA,QAAA,MAAQ,WAAW,wbAcRI,eAAA,MAAA,MAAM,MAAM;UAIpC,QAAA,OAAO;;;;AAoCaC,sBAAA,MAAA,QAAR,SAAI;mSAOYD,eAAA,KAAK,KAAK,UAAU,YAAW,CAAA,wFAKQA,eAAA,KAAK,IAAI,6CACrBA,eAAA,KAAK,KAAK,gGAK1C,aAAa,KAAK,IAAI,GAAA,+DAAA,CAAA,qBAE7B,aAAa,KAAK,IAAI,CAAA,qEAKjBE,eAAA,CAAA,KAAK,YAAS,gCAAA,2BAAA,+DAAA,CAAA,MAEnBF,eAAA,KAAK,YAAS,UAAA,SAAA,8EAIlBA,eAAA,KAAK,eAAW,GAAA,sFAGhB,WAAW,KAAK,UAAU,CAAA,qMAQbE,eAAA,KAAK,YAAS,6CAAA,wCAAA,MACnBF,eAAA,KAAK,YAAS,eAAA,SAAA;;;;kMAYlB,YAAA,SAAW,CAAA,IAAA,cAAA,mLAIXH,sBAAA,YAAA,SAAe,WAAA,KAAU,IAAA,cAAA,4UAQOG,gBAAA,YAAA,aAAmB,QAAA,QAAO,CAAA,wCACtCA,eAAA,KAAK,IAAI,oBAAc,QAAA,OAAS,WAAA,KAAU,CAAA,yDACxC,WAAA,KAAU;AAKpBC,oBAAA,aAAA,QAAR,SAAI;gCACPC,eAAA,CAAA,SAAS,YAAA,QAAW,sDAAA,2DAAA,wEAAA,CAAA,qBAEzB,IAAI;;;AAUxB,UAAA,gBAAA,SAAmB,cAAA,OAAa;4RAKxB,cAAA,QAAa,2BAAA,6BAAA,mKAMQN,cAAA,SAAA,SAAA,MAAS,SAAS,oOAIlBA,cAAA,SAAA,SAAA,MAAS,UAAU,yOAMvBA,cAAA,SAAA,SAAA,MAAS,KAAK,sOAKdA,cAAA,SAAA,SAAA,MAAS,KAAK,mOAKdA,cAAA,SAAA,SAAA,MAAS,UAAU,6UAQXA,cAAA,SAAA,SAAA,MAAS,MAAM,8OAIfA,cAAA,SAAA,SAAA,MAAS,aAAa,oTAMtBA,cAAA,SAAA,SAAA,MAAS,WAAW,oOAIpBA,cAAA,SAAA,SAAA,MAAS,IAAI,mXAIZC,sBAAA,MAAA,QAAA,SAAA,MAAS,OAAO,IAAhBC,gBAAA,SAAA,MAAS,SAAO,SAAA,IAAhBC,cAAA,SAAA,MAAS,SAAO,SAAA,CAAA,IAAA,cAAA,6CAAhBF,sBAAA,MAAA,QAAA,SAAA,MAAS,OAAO,IAAhBC,gBAAA,SAAA,MAAS,SAAO,QAAA,IAAhBC,cAAA,SAAA,MAAS,SAAO,QAAA,CAAA,IAAA,cAAA,gDAAhBF,sBAAA,MAAA,QAAA,SAAA,MAAS,OAAO,IAAhBC,gBAAA,SAAA,MAAS,SAAO,aAAA,IAAhBC,cAAA,SAAA,MAAS,SAAO,aAAA,CAAA,IAAA,cAAA,8CAAhBF,sBAAA,MAAA,QAAA,SAAA,MAAS,OAAO,IAAhBC,gBAAA,SAAA,MAAS,SAAO,SAAA,IAAhBC,cAAA,SAAA,MAAS,SAAO,SAAA,CAAA,IAAA,cAAA,kDAAhBF,sBAAA,MAAA,QAAA,SAAA,MAAS,OAAO,IAAhBC,gBAAA,SAAA,MAAS,SAAO,YAAA,IAAhBC,cAAA,SAAA,MAAS,SAAO,YAAA,CAAA,IAAA,cAAA,oDAAhBF,sBAAA,MAAA,QAAA,SAAA,MAAS,OAAO,IAAhBC,gBAAA,SAAA,MAAS,SAAO,aAAA,IAAhBC,cAAA,SAAA,MAAS,SAAO,aAAA,CAAA,IAAA,cAAA,oRAcxBF,sBAAA,MAAA,QAAA,SAAA,MAAS,IAAI,IAAbC,gBAAA,SAAA,MAAS,MAAI,SAAA,IAAbC,cAAA,SAAA,MAAS,MAAI,SAAA,CAAA,IAAA,cAAA,2CAAbF,sBAAA,MAAA,QAAA,SAAA,MAAS,IAAI,IAAbC,gBAAA,SAAA,MAAS,MAAI,SAAA,IAAbC,cAAA,SAAA,MAAS,MAAI,SAAA,CAAA,IAAA,cAAA,8CAAbF,sBAAA,MAAA,QAAA,SAAA,MAAS,IAAI,IAAbC,gBAAA,SAAA,MAAS,MAAI,OAAA,IAAbC,cAAA,SAAA,MAAS,MAAI,OAAA,CAAA,IAAA,cAAA,iDAAbF,sBAAA,MAAA,QAAA,SAAA,MAAS,IAAI,IAAbC,gBAAA,SAAA,MAAS,MAAI,MAAA,IAAbC,cAAA,SAAA,MAAS,MAAI,MAAA,CAAA,IAAA,cAAA;aAQtB,cAAA,OAAa;AAEL,gBAAA,2FAAAH,cAAA,SAAA,SAAA,MAAS,QAAQ,CAAA,oJAAA;AAAA;;;aAEzB,cAAA,OAAa;AAEL,gBAAA,wGAAAA,cAAA,SAAA,SAAA,MAAS,qBAAqB,CAAA,oJAAA;AAAA;;;qKAKvC,cAAA,QAAa,aAAA,OAAA,CAAA,0CAAA;AAAA;;;;;;;;;;;;;","names":["_ssrRenderAttrs","_mergeProps","_ssrRenderAttr","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrLooseEqual","_ssrInterpolate","_ssrRenderList","_ssrRenderClass"],"sources":["../../../../pages/admin/users.vue"],"sourcesContent":["<template>\n    <div class=\"min-h-screen bg-gray-50\">\n        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n            <!-- Header -->\n            <div class=\"mb-8\">\n                <div class=\"flex items-center justify-between\">\n                    <div>\n                        <h1 class=\"text-3xl font-bold text-gray-900 text-center\">\n                            <span class=\"mr-3 text-primary-600\">ðŸ‘¥</span>\n                            Gestion des Utilisateurs\n                        </h1>\n                        <p class=\"mt-2 text-gray-600\">GÃ©rez tous les utilisateurs de la plateforme</p>\n                    </div>\n                    <button @click=\"showCreateModal = true\" class=\"btn-primary btn-lg flex items-center\">\n                        <span class=\"mr-2\">âž•</span>\n                        Nouvel utilisateur\n                    </button>\n                </div>\n            </div>\n\n            <!-- Filters -->\n            <div class=\"bg-white rounded-lg shadow p-6 mb-6\">\n                <div class=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n                    <div>\n                        <label class=\"block text-sm font-medium text-gray-700 mb-1\">Rechercher</label>\n                        <input v-model=\"filters.search\" type=\"text\" placeholder=\"Nom ou email...\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                    </div>\n                    <div>\n                        <label class=\"block text-sm font-medium text-gray-700 mb-1\">RÃ´le</label>\n                        <select v-model=\"filters.role\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                            <option value=\"\">Tous les rÃ´les</option>\n                            <option value=\"admin\">Administrateur</option>\n                            <option value=\"teacher\">Enseignant</option>\n                            <option value=\"student\">Ã‰lÃ¨ve</option>\n                            <option value=\"club\">Club</option>\n                        </select>\n                    </div>\n                    <div>\n                        <label class=\"block text-sm font-medium text-gray-700 mb-1\">Statut</label>\n                        <select v-model=\"filters.status\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                            <option value=\"\">Tous les statuts</option>\n                            <option value=\"active\">Actif</option>\n                            <option value=\"inactive\">Inactif</option>\n                        </select>\n                    </div>\n                    <div>\n                        <label class=\"block text-sm font-medium text-gray-700 mb-1\">Code postal</label>\n                        <input v-model=\"filters.postal_code\" type=\"text\" placeholder=\"Ex: 1000\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                    </div>\n                    <div class=\"flex items-end\">\n                        <button @click=\"loadUsers\" class=\"btn-secondary btn-full\">\n                            Filtrer\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Users Table -->\n            <div class=\"bg-white rounded-lg shadow overflow-hidden\">\n                <div class=\"px-6 py-4 border-b border-gray-200\">\n                    <h2 class=\"text-lg font-semibold text-gray-900\">\n                        Liste des utilisateurs ({{ users.length }})\n                    </h2>\n                </div>\n\n                <div v-if=\"loading\" class=\"p-8 text-center\">\n                    <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto\"></div>\n                    <p class=\"mt-2 text-gray-500\">Chargement...</p>\n                </div>\n\n                <div v-else class=\"overflow-x-auto\">\n                    <table class=\"min-w-full divide-y divide-gray-200\">\n                        <thead class=\"bg-gray-50\">\n                            <tr>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Utilisateur\n                                </th>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    RÃ´le\n                                </th>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Statut\n                                </th>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Code postal\n                                </th>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Inscription\n                                </th>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Actions\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"bg-white divide-y divide-gray-200\">\n                            <tr v-for=\"user in users\" :key=\"user.id\" class=\"hover:bg-gray-50\">\n                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                    <div class=\"flex items-center\">\n                                        <div class=\"flex-shrink-0 h-10 w-10\">\n                                            <div\n                                                class=\"h-10 w-10 rounded-full bg-primary-100 flex items-center justify-center\">\n                                                <span class=\"text-sm font-medium text-primary-600\">\n                                                    {{ user.name.charAt(0).toUpperCase() }}\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"ml-4\">\n                                            <div class=\"text-sm font-medium text-gray-900\">{{ user.name }}</div>\n                                            <div class=\"text-sm text-gray-500\">{{ user.email }}</div>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                    <span :class=\"getRoleClass(user.role)\"\n                                        class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\">\n                                        {{ getRoleLabel(user.role) }}\n                                    </span>\n                                </td>\n                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                    <span\n                                        :class=\"user.is_active ? 'text-green-800 bg-green-100' : 'text-red-800 bg-red-100'\"\n                                        class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\">\n                                        {{ user.is_active ? 'Actif' : 'Inactif' }}\n                                    </span>\n                                </td>\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                    {{ user.postal_code || '-' }}\n                                </td>\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                    {{ formatDate(user.created_at) }}\n                                </td>\n                                <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                                    <div class=\"flex space-x-2\">\n                                        <button @click=\"editUser(user)\" class=\"table-action-btn table-action-btn-edit\">\n                                            Modifier\n                                        </button>\n                                        <button @click=\"toggleUserStatus(user)\"\n                                            :class=\"user.is_active ? 'table-action-btn table-action-btn-delete' : 'table-action-btn table-action-btn-view'\">\n                                            {{ user.is_active ? 'DÃ©sactiver' : 'Activer' }}\n                                        </button>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <!-- Pagination -->\n                <div class=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\n                    <div class=\"flex-1 flex justify-between sm:hidden\">\n                        <button :disabled=\"currentPage <= 1\" @click=\"changePage(currentPage - 1)\"\n                            class=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                            PrÃ©cÃ©dent\n                        </button>\n                        <button :disabled=\"currentPage >= totalPages\" @click=\"changePage(currentPage + 1)\"\n                            class=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                            Suivant\n                        </button>\n                    </div>\n                    <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n                        <div>\n                            <p class=\"text-sm text-gray-700\">\n                                Affichage de <span class=\"font-medium\">{{ (currentPage - 1) * perPage + 1 }}</span>\n                                Ã  <span class=\"font-medium\">{{ Math.min(currentPage * perPage, totalUsers) }}</span>\n                                sur <span class=\"font-medium\">{{ totalUsers }}</span> rÃ©sultats\n                            </p>\n                        </div>\n                        <div>\n                            <nav class=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\">\n                                <button v-for=\"page in visiblePages\" :key=\"page\" @click=\"changePage(page)\"\n                                    :class=\"page === currentPage ? 'bg-primary-50 border-primary-500 text-primary-600' : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50'\"\n                                    class=\"relative inline-flex items-center px-4 py-2 border text-sm font-medium\">\n                                    {{ page }}\n                                </button>\n                            </nav>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Create/Edit User Modal -->\n        <div v-if=\"showCreateModal || showEditModal\"\n            class=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n            <div class=\"relative top-10 mx-auto p-5 border w-full max-w-2xl shadow-lg rounded-md bg-white\">\n                <div class=\"mt-3\">\n                    <h3 class=\"text-lg font-medium text-gray-900 mb-4\">\n                        {{ showEditModal ? 'Modifier l\\'utilisateur' : 'CrÃ©er un nouvel utilisateur' }}\n                    </h3>\n                    <form @submit.prevent=\"showEditModal ? updateUser() : createUser()\" class=\"space-y-4\">\n                        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                                <label class=\"block text-sm font-medium text-gray-700\">Nom *</label>\n                                <input v-model=\"userForm.last_name\" type=\"text\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" required>\n                            </div>\n                            <div>\n                                <label class=\"block text-sm font-medium text-gray-700\">PrÃ©nom *</label>\n                                <input v-model=\"userForm.first_name\" type=\"text\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" required>\n                            </div>\n                        </div>\n                        \n                        <div>\n                            <label class=\"block text-sm font-medium text-gray-700\">Email *</label>\n                            <input v-model=\"userForm.email\" type=\"email\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" required>\n                        </div>\n                        \n                        <div>\n                            <label class=\"block text-sm font-medium text-gray-700\">TÃ©lÃ©phone</label>\n                            <input v-model=\"userForm.phone\" type=\"tel\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                        </div>\n                        \n                        <div>\n                            <label class=\"block text-sm font-medium text-gray-700\">Date de naissance</label>\n                            <input v-model=\"userForm.birth_date\" type=\"date\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                        </div>\n                        \n                        <div>\n                            <label class=\"block text-sm font-medium text-gray-700\">Adresse</label>\n                            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                <div>\n                                    <label class=\"block text-xs text-gray-500 mb-1\">Rue</label>\n                                    <input v-model=\"userForm.street\" type=\"text\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" placeholder=\"Nom de la rue\">\n                                </div>\n                                <div>\n                                    <label class=\"block text-xs text-gray-500 mb-1\">NumÃ©ro</label>\n                                    <input v-model=\"userForm.street_number\" type=\"text\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" placeholder=\"92, 92/A, 92B...\">\n                                </div>\n                            </div>\n                            <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\n                                <div>\n                                    <label class=\"block text-xs text-gray-500 mb-1\">Code postal</label>\n                                    <input v-model=\"userForm.postal_code\" type=\"text\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" placeholder=\"1000\">\n                                </div>\n                                <div>\n                                    <label class=\"block text-xs text-gray-500 mb-1\">Ville</label>\n                                    <input v-model=\"userForm.city\" type=\"text\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" placeholder=\"Bruxelles\">\n                                </div>\n                                <div>\n                                    <label class=\"block text-xs text-gray-500 mb-1\">Pays</label>\n                                    <select v-model=\"userForm.country\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\">\n                                        <option value=\"Belgium\">Belgique</option>\n                                        <option value=\"France\">France</option>\n                                        <option value=\"Netherlands\">Pays-Bas</option>\n                                        <option value=\"Germany\">Allemagne</option>\n                                        <option value=\"Luxembourg\">Luxembourg</option>\n                                        <option value=\"Switzerland\">Suisse</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div>\n                            <label class=\"block text-sm font-medium text-gray-700\">RÃ´le *</label>\n                            <select v-model=\"userForm.role\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" required>\n                                <option value=\"student\">Ã‰lÃ¨ve</option>\n                                <option value=\"teacher\">Enseignant</option>\n                                <option value=\"admin\">Administrateur</option>\n                                <option value=\"club\">Club</option>\n                            </select>\n                        </div>\n                        \n                        <div v-if=\"!showEditModal\">\n                            <label class=\"block text-sm font-medium text-gray-700\">Mot de passe *</label>\n                            <input v-model=\"userForm.password\" type=\"password\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" required>\n                        </div>\n                        <div v-if=\"!showEditModal\">\n                            <label class=\"block text-sm font-medium text-gray-700\">Confirmer le mot de passe *</label>\n                            <input v-model=\"userForm.password_confirmation\" type=\"password\" class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" required>\n                        </div>\n                        <div class=\"form-button-group\">\n                            <button type=\"button\" @click=\"closeModal\" class=\"btn-secondary\">Annuler</button>\n                            <button type=\"submit\" class=\"btn-primary\">\n                                {{ showEditModal ? 'Modifier' : 'CrÃ©er' }}\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed, watch } from 'vue'\n\ndefinePageMeta({\n    layout: 'admin',\n    middleware: 'admin'\n})\n\n// Reactive data\nconst loading = ref(true)\nconst showCreateModal = ref(false)\nconst showEditModal = ref(false)\nconst users = ref([])\nconst currentPage = ref(1)\nconst perPage = ref(10)\nconst totalUsers = ref(0)\nconst totalPages = ref(0)\n\n// Filters\nconst filters = ref({\n    search: '',\n    role: '',\n    status: '',\n    postal_code: ''\n})\n\n// Form\nconst userForm = ref({\n    id: null,\n    first_name: '',\n    last_name: '',\n    email: '',\n    phone: '',\n    birth_date: '',\n    street: '',\n    street_number: '',\n    postal_code: '',\n    city: '',\n    country: 'Belgium',\n    role: 'student',\n    password: '',\n    password_confirmation: ''\n})\n\n// Computed\nconst visiblePages = computed(() => {\n    const pages = []\n    const start = Math.max(1, currentPage.value - 2)\n    const end = Math.min(totalPages.value, currentPage.value + 2)\n\n    for (let i = start; i <= end; i++) {\n        pages.push(i)\n    }\n    return pages\n})\n\n// Methods\nconst getRoleClass = (role) => {\n    const classes = {\n        admin: 'bg-red-100 text-red-800',\n        teacher: 'bg-green-100 text-green-800',\n        student: 'bg-blue-100 text-blue-800',\n        club: 'bg-purple-100 text-purple-800'\n    }\n    return classes[role] || 'bg-gray-100 text-gray-800'\n}\n\nconst getRoleLabel = (role) => {\n    const labels = {\n        admin: 'Admin',\n        teacher: 'Enseignant',\n        student: 'Ã‰lÃ¨ve',\n        club: 'Club'\n    }\n    return labels[role] || role\n}\n\nconst formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('fr-FR')\n}\n\nconst loadUsers = async () => {\n    loading.value = true\n    try {\n        const { $api } = useNuxtApp()\n\n        // Construire les paramÃ¨tres en filtrant les valeurs vides\n        const params = new URLSearchParams({\n            page: currentPage.value,\n            per_page: perPage.value\n        })\n\n        // Ajouter seulement les filtres non vides\n        if (filters.value.search && filters.value.search.trim()) {\n            params.append('search', filters.value.search.trim())\n        }\n        if (filters.value.role && filters.value.role.trim()) {\n            params.append('role', filters.value.role.trim())\n        }\n        if (filters.value.status && filters.value.status.trim()) {\n            params.append('status', filters.value.status.trim())\n        }\n        if (filters.value.postal_code && filters.value.postal_code.trim()) {\n            params.append('postal_code', filters.value.postal_code.trim())\n        }\n\n        console.log('ParamÃ¨tres envoyÃ©s:', params.toString())\n        const response = await $api.get(`/admin/users?${params}`)\n\n        // Debug: afficher la rÃ©ponse complÃ¨te\n        console.log('Response complÃ¨te:', response)\n        console.log('Response.data:', response.data)\n\n        // AccÃ¨s aux donnÃ©es selon la structure de pagination Laravel\n        const responseData = response.data || response\n        if (responseData.data && Array.isArray(responseData.data)) {\n            // Structure de pagination Laravel\n            users.value = responseData.data\n            totalUsers.value = responseData.total || responseData.data.length\n            totalPages.value = responseData.last_page || Math.ceil(totalUsers.value / perPage.value)\n            currentPage.value = responseData.current_page || 1\n            console.log('Utilisateurs chargÃ©s (pagination Laravel):', users.value.length)\n        } else if (Array.isArray(responseData)) {\n            // Cas oÃ¹ la rÃ©ponse est directement un tableau\n            users.value = responseData\n            totalUsers.value = responseData.length\n            totalPages.value = Math.ceil(totalUsers.value / perPage.value)\n            console.log('Utilisateurs chargÃ©s (tableau direct):', users.value.length)\n        } else {\n            console.warn('Structure de rÃ©ponse inattendue:', responseData)\n            users.value = []\n            totalUsers.value = 0\n            totalPages.value = 0\n        }\n    } catch (error) {\n        console.error('Erreur lors du chargement des utilisateurs:', error)\n        console.error('DÃ©tails de l\\'erreur:', error.response?.data)\n        // DonnÃ©es de fallback en cas d'erreur\n        users.value = []\n        totalUsers.value = 0\n        totalPages.value = 0\n    } finally {\n        loading.value = false\n    }\n}\n\nconst changePage = (page) => {\n    if (page >= 1 && page <= totalPages.value) {\n        currentPage.value = page\n        loadUsers()\n    }\n}\n\nconst createUser = async () => {\n    try {\n        const { $api } = useNuxtApp()\n        \n        // PrÃ©parer les donnÃ©es pour l'API\n        const userData = {\n            first_name: userForm.value.first_name,\n            last_name: userForm.value.last_name,\n            email: userForm.value.email,\n            phone: userForm.value.phone,\n            birth_date: userForm.value.birth_date,\n            street: userForm.value.street,\n            street_number: userForm.value.street_number,\n            postal_code: userForm.value.postal_code,\n            city: userForm.value.city,\n            country: userForm.value.country,\n            role: userForm.value.role,\n            password: userForm.value.password,\n            password_confirmation: userForm.value.password_confirmation\n        }\n        \n        console.log('DonnÃ©es envoyÃ©es:', userData)\n        \n        const response = await $api.post('/admin/users', userData)\n        console.log('RÃ©ponse de crÃ©ation:', response)\n\n        closeModal()\n        await loadUsers()\n        alert('Utilisateur crÃ©Ã© avec succÃ¨s!')\n    } catch (error) {\n        console.error('Erreur lors de la crÃ©ation:', error)\n        console.error('DÃ©tails de l\\'erreur:', error.response?.data)\n        \n        // Afficher les erreurs de validation si disponibles\n        if (error.response?.data?.errors) {\n            const errors = error.response.data.errors\n            let errorMessage = 'Erreurs de validation:\\n'\n            for (const field in errors) {\n                errorMessage += `- ${field}: ${errors[field].join(', ')}\\n`\n            }\n            alert(errorMessage)\n        } else {\n            alert('Erreur lors de la crÃ©ation de l\\'utilisateur: ' + (error.response?.data?.message || error.message))\n        }\n    }\n}\n\nconst editUser = (user) => {\n    userForm.value = {\n        id: user.id,\n        first_name: user.first_name || '',\n        last_name: user.last_name || '',\n        email: user.email,\n        phone: user.phone || '',\n        birth_date: user.birth_date || '',\n        street: user.street || '',\n        street_number: user.street_number || '',\n        postal_code: user.postal_code || '',\n        city: user.city || '',\n        country: user.country || 'Belgium',\n        role: user.role,\n        password: '',\n        password_confirmation: ''\n    }\n    showEditModal.value = true\n}\n\nconst updateUser = async () => {\n    try {\n        const { $api } = useNuxtApp()\n        \n        // PrÃ©parer les donnÃ©es pour l'API (sans les mots de passe vides)\n        const userData = {\n            first_name: userForm.value.first_name,\n            last_name: userForm.value.last_name,\n            email: userForm.value.email,\n            phone: userForm.value.phone,\n            birth_date: userForm.value.birth_date,\n            street: userForm.value.street,\n            street_number: userForm.value.street_number,\n            postal_code: userForm.value.postal_code,\n            city: userForm.value.city,\n            country: userForm.value.country,\n            role: userForm.value.role\n        }\n        \n        // Ajouter le mot de passe seulement s'il est fourni\n        if (userForm.value.password && userForm.value.password.trim()) {\n            userData.password = userForm.value.password\n            userData.password_confirmation = userForm.value.password_confirmation\n        }\n        \n        console.log('DonnÃ©es de mise Ã  jour:', userData)\n        \n        const response = await $api.put(`/admin/users/${userForm.value.id}`, userData)\n        console.log('RÃ©ponse de mise Ã  jour:', response)\n\n        closeModal()\n        await loadUsers()\n        alert('Utilisateur modifiÃ© avec succÃ¨s!')\n    } catch (error) {\n        console.error('Erreur lors de la modification:', error)\n        console.error('DÃ©tails de l\\'erreur:', error.response?.data)\n        \n        // Afficher les erreurs de validation si disponibles\n        if (error.response?.data?.errors) {\n            const errors = error.response.data.errors\n            let errorMessage = 'Erreurs de validation:\\n'\n            for (const field in errors) {\n                errorMessage += `- ${field}: ${errors[field].join(', ')}\\n`\n            }\n            alert(errorMessage)\n        } else {\n            alert('Erreur lors de la modification de l\\'utilisateur: ' + (error.response?.data?.message || error.message))\n        }\n    }\n}\n\nconst toggleUserStatus = async (user) => {\n    try {\n        const { $api } = useNuxtApp()\n        const response = await $api.patch(`/admin/users/${user.id}/toggle-status`)\n        console.log('RÃ©ponse du changement de statut:', response)\n\n        // Mettre Ã  jour l'utilisateur local avec la rÃ©ponse du serveur\n        const updatedUser = response.data || response\n        user.is_active = updatedUser.is_active\n        user.status = updatedUser.status\n        \n        alert(`Utilisateur ${user.is_active ? 'activÃ©' : 'dÃ©sactivÃ©'} avec succÃ¨s!`)\n    } catch (error) {\n        console.error('Erreur lors du changement de statut:', error)\n        console.error('DÃ©tails de l\\'erreur:', error.response?.data)\n        alert('Erreur lors du changement de statut: ' + (error.response?.data?.message || error.message))\n    }\n}\n\nconst closeModal = () => {\n    showCreateModal.value = false\n    showEditModal.value = false\n    userForm.value = {\n        id: null,\n        first_name: '',\n        last_name: '',\n        email: '',\n        phone: '',\n        birth_date: '',\n        street: '',\n        street_number: '',\n        postal_code: '',\n        city: '',\n        country: 'Belgium',\n        role: 'student',\n        password: '',\n        password_confirmation: ''\n    }\n}\n\n// Watch filters to reload data\nwatch(filters, () => {\n    currentPage.value = 1\n    loadUsers()\n}, { deep: true })\n\n// Lifecycle\nonMounted(() => {\n    loadUsers()\n})\n</script>\n"],"version":3}