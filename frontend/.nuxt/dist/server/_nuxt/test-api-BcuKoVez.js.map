{"version":3,"file":"test-api-BcuKoVez.js","sources":["../../../../pages/test-api.vue"],"sourcesContent":["<template>\n    <div class=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n        <div class=\"max-w-md w-full bg-white p-8 rounded-lg shadow-md\">\n            <h1 class=\"text-2xl font-bold mb-6 text-center\">Test de Configuration API</h1>\n\n            <div class=\"space-y-4\">\n                <div class=\"p-4 bg-blue-50 rounded-lg\">\n                    <h3 class=\"font-semibold text-blue-800\">Configuration Runtime</h3>\n                    <p class=\"text-sm text-blue-600\">API Base: {{ config.public.apiBase }}</p>\n                    <p class=\"text-sm text-blue-600\">App Name: {{ config.public.appName }}</p>\n                </div>\n\n                <div class=\"p-4 bg-green-50 rounded-lg\">\n                    <h3 class=\"font-semibold text-green-800\">État API</h3>\n                    <p class=\"text-sm text-green-600\">Status: {{ apiStatus }}</p>\n                    <button @click=\"testApi\" class=\"mt-2 px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\n                        :disabled=\"testing\">\n                        {{ testing ? 'Test en cours...' : 'Tester API' }}\n                    </button>\n                </div>\n\n                <div class=\"p-4 bg-yellow-50 rounded-lg\">\n                    <h3 class=\"font-semibold text-yellow-800\">Test de Connexion</h3>\n                    <form @submit.prevent=\"testLogin\" class=\"space-y-3\">\n                        <input v-model=\"email\" type=\"email\" placeholder=\"Email\" class=\"w-full p-2 border rounded\">\n                        <input v-model=\"password\" type=\"password\" placeholder=\"Mot de passe\"\n                            class=\"w-full p-2 border rounded\">\n                        <button type=\"submit\" class=\"w-full py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700\"\n                            :disabled=\"loginTesting\">\n                            {{ loginTesting ? 'Connexion...' : 'Se connecter' }}\n                        </button>\n                    </form>\n                </div>\n\n                <div v-if=\"result\" class=\"p-4 rounded-lg\" :class=\"result.success ? 'bg-green-50' : 'bg-red-50'\">\n                    <h3 class=\"font-semibold\" :class=\"result.success ? 'text-green-800' : 'text-red-800'\">\n                        Résultat du Test\n                    </h3>\n                    <pre class=\"text-xs mt-2 overflow-auto\"\n                        :class=\"result.success ? 'text-green-600' : 'text-red-600'\">{{ JSON.stringify(result.data, null, 2) }}</pre>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\nconst config = useRuntimeConfig()\nconst { $api } = useNuxtApp()\n\nconst apiStatus = ref('Non testé')\nconst testing = ref(false)\nconst loginTesting = ref(false)\nconst result = ref(null)\nconst email = ref('admin@activibe.com')\nconst password = ref('admin123')\n\nconst testApi = async () => {\n    testing.value = true\n    apiStatus.value = 'Test en cours...'\n\n    try {\n        const response = await $api.get('/health')\n        apiStatus.value = 'Connecté ✅'\n        result.value = {\n            success: true,\n            data: { message: 'API accessible', response: response.data }\n        }\n    } catch (error) {\n        apiStatus.value = 'Erreur ❌'\n        result.value = {\n            success: false,\n            data: {\n                message: 'Erreur API',\n                error: error.message,\n                config: error.config,\n                response: error.response?.data\n            }\n        }\n    } finally {\n        testing.value = false\n    }\n}\n\nconst testLogin = async () => {\n    loginTesting.value = true\n    result.value = null\n\n    try {\n        console.log('Configuration API utilisée:', config.public.apiBase)\n        console.log('Tentative de connexion avec:', { email: email.value, password: '***' })\n\n        const response = await $api.post('/auth/login', {\n            email: email.value,\n            password: password.value\n        })\n\n        result.value = {\n            success: true,\n            data: {\n                message: 'Connexion réussie !',\n                user: response.data.user,\n                token: response.data.token?.substring(0, 20) + '...'\n            }\n        }\n    } catch (error) {\n        console.error('Erreur de connexion:', error)\n        result.value = {\n            success: false,\n            data: {\n                message: 'Erreur de connexion',\n                error: error.message,\n                status: error.response?.status,\n                statusText: error.response?.statusText,\n                url: error.config?.url,\n                baseURL: error.config?.baseURL,\n                response: error.response?.data\n            }\n        }\n    } finally {\n        loginTesting.value = false\n    }\n}\n\n// Test automatique au chargement\nonMounted(() => {\n    console.log('Configuration runtime chargée:', config.public)\n    testApi()\n})\n</script>\n"],"names":["_ssrRenderAttrs","_mergeProps","_unref","_ssrRenderClass","_ssrInterpolate"],"mappings":";;;;;;;;;;;;;;;;;;;;;AA+CA,UAAM,SAAS,iBAAgB;AAC/B,UAAM,EAAE,KAAI,IAAK,WAAU;AAE3B,UAAM,YAAY,IAAI,WAAW;AACjC,UAAM,UAAU,IAAI,KAAK;AACzB,UAAM,eAAe,IAAI,KAAK;AAC9B,UAAM,SAAS,IAAI,IAAI;AACvB,UAAM,QAAQ,IAAI,oBAAoB;AACtC,UAAM,WAAW,IAAI,UAAU;;mBAtDtBA,eAAAC,WAAA,EAAA,OAAM,4DAA2D,GAAA,MAAA,CAAA,4UAORC,MAAA,MAAA,EAAO,OAAO,OAAO,kEACrBA,MAAA,MAAA,EAAO,OAAO,OAAO,qKAKtBA,MAAA,SAAA,CAAS,+GAEvCA,MAAA,OAAA,CAAO,IAAA,cAAA,qBACfA,MAAA,OAAA,IAAO,qBAAA,YAAA,iLAOMA,MAAA,KAAA,CAAK,qGACLA,MAAA,QAAA,CAAQ,sMAGTA,MAAA,YAAA,CAAY,IAAA,cAAA,qBACpBA,MAAA,YAAA,IAAY,iBAAA,cAAA;UAKhBA,MAAA,MAAA,GAAM;6BAAiCC,eAAA,CAAAD,MAAA,MAAA,EAAO,UAAO,gBAAA,aAAA,gBAAA,CAAA,iBAC1BC,eAAA,CAAAD,MAAA,MAAA,EAAO,UAAO,mBAAA,gBAAA,eAAA,CAAA,yCAIpCC,eAAA,CAAAD,MAAA,MAAA,EAAO,UAAO,mBAAA,gBAAA,4BAAA,CAAA,MAAyCE,eAAA,KAAK,UAAUF,MAAA,MAAA,EAAO,MAAI,MAAA,CAAA,CAAA;;;;;;;;;;;;;;"}