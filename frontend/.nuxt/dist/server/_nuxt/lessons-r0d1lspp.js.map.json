{"file":"lessons-r0d1lspp.js","mappings":";;;;;;;;AAoNA,UAAMA,WAAU,IAAW,EAAE;AAC7B,UAAM,cAAc,IAAW,EAAE;AACjC,UAAM,UAAU,IAAI,KAAK;AACzB,UAAM,QAAQ,IAAmB,IAAI;AAErC,UAAM,UAAU,IAAI;AAAA,MAClB,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,MAAM;AAAA,IAAA,CACP;AAGD,UAAM,sBAAsB,SAAS,MAAM;AACzC,UAAI,CAAC,QAAQ,MAAM,mBAAmB,CAAA;AACtC,YAAM,aAAa,YAAY,MAAM,KAAK,CAAA,MAAK,EAAE,OAAO,SAAS,QAAQ,MAAM,UAAU,CAAC;AAC1F,cAAO,yCAAY,iBAAgB,CAAA;AAAA,IACrC,CAAC;AAED,UAAM,kBAAkB,SAAS,MAAM;AACrC,UAAI,WAAWA,SAAQ;AAEvB,UAAI,QAAQ,MAAM,YAAY;AAC5B,mBAAW,SAAS;AAAA,UAAO;;AACzB,iCAAO,gBAAP,mBAAoB,mBAAkB,SAAS,QAAQ,MAAM,UAAU;AAAA;AAAA,QAAA;AAAA,MAE3E;AAEA,UAAI,QAAQ,MAAM,YAAY;AAC5B,mBAAW,SAAS;AAAA,UAAO;;AACzB,iCAAO,gBAAP,mBAAoB,QAAO,SAAS,QAAQ,MAAM,UAAU;AAAA;AAAA,QAAA;AAAA,MAEhE;AAEA,UAAI,QAAQ,MAAM,QAAQ;AACxB,mBAAW,SAAS,OAAO,CAAA,WAAU;;AACnC,cAAI,QAAQ,MAAM,WAAW,cAAc;AACzC,qBAAO,YAAO,gBAAP,mBAAoB,mBAAkB;AAAA,UAC/C,WAAW,QAAQ,MAAM,WAAW,SAAS;AAC3C,qBAAO,YAAO,gBAAP,mBAAoB,mBAAkB;AAAA,UAC/C;AACA,iBAAO;AAAA,QACT,CAAC;AAAA,MACH;AAEA,UAAI,QAAQ,MAAM,MAAM;AACtB,cAAM,aAAa,IAAI,KAAK,QAAQ,MAAM,IAAI;AAC9C,mBAAW,SAAS,OAAO,CAAA,WAAU;AACnC,gBAAM,aAAa,IAAI,KAAK,OAAO,UAAU;AAC7C,iBAAO,WAAW,mBAAmB,WAAW,aAAA;AAAA,QAClD,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT,CAAC;AAuED,UAAM,iBAAiB,CAAC,WAAmB;AACzC,cAAQ,QAAA;AAAA,QACN,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT;AACE,iBAAO;AAAA,MAAA;AAAA,IAEb;AAEA,UAAM,gBAAgB,CAAC,WAAmB;AACxC,cAAQ,QAAA;AAAA,QACN,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AACH,iBAAO;AAAA,QACT;AACE,iBAAO;AAAA,MAAA;AAAA,IAEb;AAEA,UAAM,iBAAiB,CAAC,eAAuB;AAC7C,YAAM,OAAO,IAAI,KAAK,UAAU;AAChC,aAAO,KAAK,mBAAmB,SAAS;AAAA,QACtC,SAAS;AAAA,QACT,KAAK;AAAA,QACL,OAAO;AAAA,QACP,MAAM;AAAA,QACN,QAAQ;AAAA,MAAA,CACT;AAAA,IACH;;mBA3XOC,eAAAC,WAAA,EAAA,OAAM,eAAA,GAAc,MAAA,CAAA,syBAmBJC,sBAAA,MAAA,QAAA,QAAA,MAAQ,UAAU,IAAlBC,gBAAA,QAAA,MAAQ,YAAU,EAAA,IAAlBC,cAAA,QAAA,MAAQ,YAAU,EAAA,CAAA,IAAA,cAAA;AAIEC,oBAAA,YAAA,QAAd,eAAU;sCAAuC,SAAO,WAAW,EAAE,oBAJ3EH,sBAAA,MAAA,QAAA,QAAA,MAAQ,UAAU,IAAlBC,gBAAA,QAAA,MAAQ,YAIsD,WAAW,EAAE,IAJ3EC,cAAA,QAAA,MAAQ,YAIsD,WAAW,EAAE,CAAA,IAAA,cAAA,MAC/EE,eAAA,WAAW,IAAI;;AAQX,YAAA,uTAAAJ,sBAAA,MAAA,QAAA,QAAA,MAAQ,UAAU,IAAlBC,gBAAA,QAAA,MAAQ,YAAU,EAAA,IAAlBC,cAAA,QAAA,MAAQ,YAAU,EAAA,CAAA,IAAA,cAAA,EAAA,kCAAA;AAIEC,oBAAA,oBAAA,QAAd,eAAU;sCAA+C,SAAO,WAAW,EAAE,oBAJnFH,sBAAA,MAAA,QAAA,QAAA,MAAQ,UAAU,IAAlBC,gBAAA,QAAA,MAAQ,YAI8D,WAAW,EAAE,IAJnFC,cAAA,QAAA,MAAQ,YAI8D,WAAW,EAAE,CAAA,IAAA,cAAA,MACvFE,eAAA,WAAW,IAAI;;4TAQXJ,sBAAA,MAAA,QAAA,QAAA,MAAQ,MAAM,IAAdC,gBAAA,QAAA,MAAQ,QAAM,EAAA,IAAdC,cAAA,QAAA,MAAQ,QAAM,EAAA,CAAA,IAAA,cAAA,yEAAdF,sBAAA,MAAA,QAAA,QAAA,MAAQ,MAAM,IAAdC,gBAAA,QAAA,MAAQ,QAAM,YAAA,IAAdC,cAAA,QAAA,MAAQ,QAAM,YAAA,CAAA,IAAA,cAAA,8DAAdF,sBAAA,MAAA,QAAA,QAAA,MAAQ,MAAM,IAAdC,gBAAA,QAAA,MAAQ,QAAM,OAAA,IAAdC,cAAA,QAAA,MAAQ,QAAM,OAAA,CAAA,IAAA,cAAA,0JAYdG,cAAA,SAAA,QAAA,MAAQ,IAAI;UAkBlB,QAAA,OAAO;;iBAKF,MAAA,OAAK;mvBAS2B,MAAA,KAAK,CAAA,0BAAA;AAAA;;AAQhCF,sBAAA,gBAAA,QAAV,WAAM;;qUASFC,eAAA,OAAO,SAAK,OAAA,2EAGZ,YAAO,gBAAP,mBAAoB,SAAI,mBAAA;;YAI+D,eAAe,OAAO,MAAM;AAAA,UAAA,sCAKrH,cAAc,OAAO,MAAM,CAAA,8kBAezBA,iBAAA,kBAAO,YAAP,mBAAgB,SAAhB,mBAAsB,SAAI,YAAA,ucAY5B,eAAe,OAAO,UAAU,CAAA,6fAQhC,YAAO,aAAP,mBAAiB,SAAI,mBAAA,iaAOrBA,eAAA,OAAO,QAAK,GAAM,OAAO,KAAK,MAAA,mBAAA;AAK5B,cAAA,OAAO,aAAW;AACtB,kBAAA,sEAAAA,eAAA,OAAO,WAAW,CAAA,MAAA;AAAA;;;;AAMb,cAAA,OAAO,WAAM,aAAA;;;;;;;;;AAkBjB,UAAA,CAAA,QAAA,SAAO,CAAK,MAAA,SAAS,gBAAA,MAAgB,WAAM,GAAA;;;;;;;;;;;;;;;;","names":["lessons","_ssrRenderAttrs","_mergeProps","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrLooseEqual","_ssrRenderList","_ssrInterpolate","_ssrRenderAttr"],"sources":["../../../../pages/student/lessons.vue"],"sourcesContent":["<template>\n  <div class=\"lessons-page\">\n    <div class=\"container mx-auto px-4 py-8\">\n      <!-- Header -->\n      <div class=\"mb-8\">\n        <h1 class=\"text-3xl font-bold text-gray-900 mb-2\">\n          Leçons Disponibles\n        </h1>\n        <p class=\"text-gray-600\">\n          Découvrez et réservez les cours qui vous intéressent\n        </p>\n      </div>\n\n      <!-- Filters -->\n      <div class=\"bg-white rounded-lg shadow-md p-6 mb-8\">\n        <h2 class=\"text-lg font-semibold text-gray-900 mb-4\">Filtres</h2>\n        <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Discipline</label>\n            <select \n              v-model=\"filters.discipline\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"\">Toutes les disciplines</option>\n              <option v-for=\"discipline in disciplines\" :key=\"discipline.id\" :value=\"discipline.id\">\n                {{ discipline.name }}\n              </option>\n            </select>\n          </div>\n          \n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Type de cours</label>\n            <select \n              v-model=\"filters.courseType\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"\">Tous les types</option>\n              <option v-for=\"courseType in filteredCourseTypes\" :key=\"courseType.id\" :value=\"courseType.id\">\n                {{ courseType.name }}\n              </option>\n            </select>\n          </div>\n\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Format</label>\n            <select \n              v-model=\"filters.format\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"\">Tous les formats</option>\n              <option value=\"individual\">Individuel</option>\n              <option value=\"group\">Collectif</option>\n            </select>\n          </div>\n\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Date</label>\n            <input \n              v-model=\"filters.date\" \n              type=\"date\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n        </div>\n        \n        <div class=\"mt-4 flex justify-end\">\n          <button \n            @click=\"applyFilters\"\n            class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            Appliquer les filtres\n          </button>\n        </div>\n      </div>\n\n      <!-- Loading State -->\n      <div v-if=\"loading\" class=\"flex justify-center items-center py-12\">\n        <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n\n      <!-- Error State -->\n      <div v-else-if=\"error\" class=\"bg-red-50 border border-red-200 rounded-lg p-6 mb-6\">\n        <div class=\"flex items-center\">\n          <div class=\"flex-shrink-0\">\n            <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n          <div class=\"ml-3\">\n            <h3 class=\"text-sm font-medium text-red-800\">Erreur</h3>\n            <div class=\"mt-2 text-sm text-red-700\">{{ error }}</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Lessons Grid -->\n      <div v-else class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        <div \n          v-for=\"lesson in filteredLessons\" \n          :key=\"lesson.id\"\n          class=\"bg-white rounded-lg shadow-md border border-gray-200 hover:shadow-lg transition-shadow\"\n        >\n          <div class=\"p-6\">\n            <!-- Lesson Header -->\n            <div class=\"flex items-start justify-between mb-4\">\n              <div>\n                <h3 class=\"text-lg font-semibold text-gray-900 mb-1\">\n                  {{ lesson.title || 'Leçon' }}\n                </h3>\n                <p class=\"text-sm text-gray-600\">\n                  {{ lesson.course_type?.name || 'Type non spécifié' }}\n                </p>\n              </div>\n              <span \n                :class=\"[\n                  'px-2 py-1 text-xs font-medium rounded-full',\n                  getStatusClass(lesson.status)\n                ]\"\n              >\n                {{ getStatusText(lesson.status) }}\n              </span>\n            </div>\n\n            <!-- Teacher Info -->\n            <div class=\"flex items-center mb-4\">\n              <div class=\"flex-shrink-0\">\n                <div class=\"w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center\">\n                  <svg class=\"w-4 h-4 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                </div>\n              </div>\n              <div class=\"ml-3\">\n                <p class=\"text-sm font-medium text-gray-900\">\n                  {{ lesson.teacher?.user?.name || 'Enseignant' }}\n                </p>\n                <p class=\"text-xs text-gray-500\">Enseignant</p>\n              </div>\n            </div>\n\n            <!-- Lesson Details -->\n            <div class=\"space-y-2 mb-4\">\n              <div class=\"flex items-center text-sm text-gray-600\">\n                <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                {{ formatDateTime(lesson.start_time) }}\n              </div>\n              \n              <div class=\"flex items-center text-sm text-gray-600\">\n                <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                </svg>\n                {{ lesson.location?.name || 'Lieu non spécifié' }}\n              </div>\n\n              <div class=\"flex items-center text-sm text-gray-600\">\n                <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                </svg>\n                {{ lesson.price ? `${lesson.price}€` : 'Prix non spécifié' }}\n              </div>\n            </div>\n\n            <!-- Description -->\n            <p v-if=\"lesson.description\" class=\"text-sm text-gray-600 mb-4 line-clamp-2\">\n              {{ lesson.description }}\n            </p>\n\n            <!-- Actions -->\n            <div class=\"flex space-x-2\">\n              <button \n                v-if=\"lesson.status === 'available'\"\n                @click=\"bookLesson(lesson.id)\"\n                class=\"flex-1 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors text-sm font-medium\"\n              >\n                Réserver\n              </button>\n              <button \n                @click=\"viewLessonDetails(lesson.id)\"\n                class=\"flex-1 bg-gray-100 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-200 transition-colors text-sm font-medium\"\n              >\n                Détails\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Empty State -->\n      <div v-if=\"!loading && !error && filteredLessons.length === 0\" class=\"text-center py-12\">\n        <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n        </svg>\n        <h3 class=\"mt-2 text-sm font-medium text-gray-900\">Aucune leçon trouvée</h3>\n        <p class=\"mt-1 text-sm text-gray-500\">Essayez de modifier vos filtres de recherche.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\n\n// Meta\ndefinePageMeta({\n  middleware: ['auth', 'student'],\n  layout: 'student'\n})\n\n// State\nconst lessons = ref<any[]>([])\nconst disciplines = ref<any[]>([])\nconst loading = ref(false)\nconst error = ref<string | null>(null)\n\nconst filters = ref({\n  discipline: '',\n  courseType: '',\n  format: '',\n  date: ''\n})\n\n// Computed\nconst filteredCourseTypes = computed(() => {\n  if (!filters.value.discipline) return []\n  const discipline = disciplines.value.find(d => d.id === parseInt(filters.value.discipline))\n  return discipline?.course_types || []\n})\n\nconst filteredLessons = computed(() => {\n  let filtered = lessons.value\n\n  if (filters.value.discipline) {\n    filtered = filtered.filter(lesson => \n      lesson.course_type?.discipline_id === parseInt(filters.value.discipline)\n    )\n  }\n\n  if (filters.value.courseType) {\n    filtered = filtered.filter(lesson => \n      lesson.course_type?.id === parseInt(filters.value.courseType)\n    )\n  }\n\n  if (filters.value.format) {\n    filtered = filtered.filter(lesson => {\n      if (filters.value.format === 'individual') {\n        return lesson.course_type?.is_individual === true\n      } else if (filters.value.format === 'group') {\n        return lesson.course_type?.is_individual === false\n      }\n      return true\n    })\n  }\n\n  if (filters.value.date) {\n    const filterDate = new Date(filters.value.date)\n    filtered = filtered.filter(lesson => {\n      const lessonDate = new Date(lesson.start_time)\n      return lessonDate.toDateString() === filterDate.toDateString()\n    })\n  }\n\n  return filtered\n})\n\n// Methods\nconst loadLessons = async () => {\n  try {\n    loading.value = true\n    error.value = null\n    \n    const { $api } = useNuxtApp()\n    const response = await $api.get('/student/available-lessons')\n    \n    if (response.data.success) {\n      lessons.value = response.data.data\n    } else {\n      throw new Error('Erreur lors du chargement des leçons')\n    }\n  } catch (err: any) {\n    error.value = err.message || 'Erreur lors du chargement des leçons'\n    console.error('Error loading lessons:', err)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst loadDisciplines = async () => {\n  try {\n    const { $api } = useNuxtApp()\n    const response = await $api.get('/student/disciplines')\n    \n    if (response.data.success) {\n      disciplines.value = response.data.data\n    }\n  } catch (err) {\n    console.error('Error loading disciplines:', err)\n  }\n}\n\nconst applyFilters = () => {\n  // Les filtres sont appliqués automatiquement via computed\n  console.log('Filters applied:', filters.value)\n}\n\nconst bookLesson = async (lessonId: number) => {\n  try {\n    const { $api } = useNuxtApp()\n    const response = await $api.post('/student/bookings', {\n      lesson_id: lessonId\n    })\n    \n    if (response.data.success) {\n      // Recharger les leçons pour mettre à jour le statut\n      await loadLessons()\n      \n      // Afficher un message de succès\n      const { $toast } = useNuxtApp()\n      $toast.success('Leçon réservée avec succès!')\n    } else {\n      throw new Error(response.data.message || 'Erreur lors de la réservation')\n    }\n  } catch (err: any) {\n    const { $toast } = useNuxtApp()\n    $toast.error(err.message || 'Erreur lors de la réservation')\n    console.error('Error booking lesson:', err)\n  }\n}\n\nconst viewLessonDetails = (lessonId: number) => {\n  // Navigation vers la page de détails (à implémenter)\n  console.log('View lesson details:', lessonId)\n}\n\nconst getStatusClass = (status: string) => {\n  switch (status) {\n    case 'available':\n      return 'bg-green-100 text-green-800'\n    case 'pending':\n      return 'bg-yellow-100 text-yellow-800'\n    case 'confirmed':\n      return 'bg-blue-100 text-blue-800'\n    case 'completed':\n      return 'bg-gray-100 text-gray-800'\n    case 'cancelled':\n      return 'bg-red-100 text-red-800'\n    default:\n      return 'bg-gray-100 text-gray-800'\n  }\n}\n\nconst getStatusText = (status: string) => {\n  switch (status) {\n    case 'available':\n      return 'Disponible'\n    case 'pending':\n      return 'En attente'\n    case 'confirmed':\n      return 'Confirmé'\n    case 'completed':\n      return 'Terminé'\n    case 'cancelled':\n      return 'Annulé'\n    default:\n      return status\n  }\n}\n\nconst formatDateTime = (dateString: string) => {\n  const date = new Date(dateString)\n  return date.toLocaleDateString('fr-FR', {\n    weekday: 'short',\n    day: 'numeric',\n    month: 'short',\n    hour: '2-digit',\n    minute: '2-digit'\n  })\n}\n\n// Lifecycle\nonMounted(() => {\n  loadLessons()\n  loadDisciplines()\n})\n</script>\n\n<style scoped>\n.lessons-page {\n  min-height: 100vh;\n  background-color: #f9fafb;\n}\n\n.line-clamp-2 {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n</style>\n"],"version":3}