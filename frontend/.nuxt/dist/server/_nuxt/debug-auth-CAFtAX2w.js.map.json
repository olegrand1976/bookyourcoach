{"file":"debug-auth-CAFtAX2w.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAyEA,UAAM,YAAY,aAAA;AAClB,UAAM,EAAE,KAAA,IAAS,WAAA;AAEjB,UAAM,OAAO,IAAI,EAAE;;;mBA3EVA,eAAAC,WAAA,EAAA,OAAM,wBAAA,GAAuB,MAAA,CAAA,2SAQeC,WAAA,SAAA,EAAU,SAAVA,mBAAgB,SAAI,cAAA,wDAG1BA,WAAA,SAAA,EAAU,SAAVA,mBAAgB,UAAK,KAAA,mEAKpCA,WAAA,SAAA,EAAU,SAAVA,mBAAgB,UAAI,UAAA,6BAAA,wBAAA,uBACzBA,WAAA,SAAA,EAAU,SAAVA,mBAAgB,SAAI,KAAA,oDAIMC,eAAAD,MAAA,SAAA,EAAU,kBAAe,UAAA,OAAA,+CAGvBC,eAAAD,MAAA,SAAA,EAAU,QAAK,UAAA,OAAA,uCAGvBC,eAAAD,MAAA,SAAA,EAAU,UAAO,UAAA,OAAA;oBAiCpBA,MAAA,IAAA,GAAI,CAAnB,KAAK,UAAK;qCACfC,eAAA,IAAI,IAAI,MAAQA,eAAA,IAAI,OAAO;;;;;;;;;;;;","names":["_ssrRenderAttrs","_mergeProps","_unref","_ssrInterpolate"],"sources":["../../../../pages/debug-auth.vue"],"sourcesContent":["<template>\n    <div class=\"container mx-auto p-8\">\n        <h1 class=\"text-3xl font-bold mb-6\">üîç Debug Authentification</h1>\n\n        <!-- √âtat actuel -->\n        <div class=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6\">\n            <h2 class=\"text-xl font-semibold mb-3\">üìä √âtat actuel</h2>\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                    <strong>Utilisateur:</strong> {{ authStore.user?.name || 'Non connect√©' }}\n                </div>\n                <div>\n                    <strong>Email:</strong> {{ authStore.user?.email || 'N/A' }}\n                </div>\n                <div>\n                    <strong>R√¥le:</strong>\n                    <span\n                        :class=\"authStore.user?.role === 'admin' ? 'text-green-600 font-bold' : 'text-red-600 font-bold'\">\n                        {{ authStore.user?.role || 'N/A' }}\n                    </span>\n                </div>\n                <div>\n                    <strong>Authentifi√©:</strong> {{ authStore.isAuthenticated ? '‚úÖ Oui' : '‚ùå Non' }}\n                </div>\n                <div>\n                    <strong>Token pr√©sent:</strong> {{ authStore.token ? '‚úÖ Oui' : '‚ùå Non' }}\n                </div>\n                <div>\n                    <strong>Admin:</strong> {{ authStore.isAdmin ? '‚úÖ Oui' : '‚ùå Non' }}\n                </div>\n            </div>\n        </div>\n\n        <!-- Actions de test -->\n        <div class=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-6\">\n            <h2 class=\"text-xl font-semibold mb-3\">üß™ Tests</h2>\n            <div class=\"space-y-2\">\n                <button @click=\"doLogin\" class=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 mr-2\">\n                    üîë Se connecter\n                </button>\n                <button @click=\"refreshUser\" class=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 mr-2\">\n                    üîÑ Rafra√Æchir utilisateur\n                </button>\n                <button @click=\"checkLocalStorage\"\n                    class=\"bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600 mr-2\">\n                    üì¶ V√©rifier localStorage\n                </button>\n                <button @click=\"testDirectAPI\"\n                    class=\"bg-orange-500 text-white px-4 py-2 rounded hover:bg-orange-600 mr-2\">\n                    üéØ Test API direct\n                </button>\n                <button @click=\"simulateRefresh\" class=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\">\n                    üîÑ Simuler rafra√Æchissement\n                </button>\n            </div>\n        </div>\n\n        <!-- Logs -->\n        <div class=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n            <h2 class=\"text-xl font-semibold mb-3\">üìù Logs de debug</h2>\n            <div class=\"bg-black text-green-400 p-4 rounded font-mono text-sm max-h-96 overflow-y-auto\">\n                <div v-for=\"(log, index) in logs\" :key=\"index\" class=\"mb-1\">\n                    [{{ log.time }}] {{ log.message }}\n                </div>\n            </div>\n            <button @click=\"clearLogs\" class=\"mt-2 bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600 text-sm\">\n                üóëÔ∏è Effacer logs\n            </button>\n        </div>\n    </div>\n</template>\n\n<script setup>\nconst authStore = useAuthStore()\nconst { $api } = useNuxtApp()\n\nconst logs = ref([])\n\nfunction addLog(message) {\n    const now = new Date()\n    logs.value.push({\n        time: now.toLocaleTimeString(),\n        message\n    })\n}\n\nfunction clearLogs() {\n    logs.value = []\n}\n\nasync function doLogin() {\n    addLog('üîÑ Tentative de connexion...')\n\n    try {\n        await authStore.login({\n            email: 'admin.secours@activibe.com',\n            password: 'secours123'\n        })\n\n        addLog(`‚úÖ Connexion r√©ussie - Role: ${authStore.user?.role}`)\n    } catch (error) {\n        addLog(`‚ùå Erreur de connexion: ${error.message}`)\n    }\n}\n\nasync function refreshUser() {\n    addLog('üîÑ Rafra√Æchissement utilisateur...')\n\n    try {\n        await authStore.fetchUser()\n        addLog(`‚úÖ Utilisateur rafra√Æchi - Role: ${authStore.user?.role}`)\n    } catch (error) {\n        addLog(`‚ùå Erreur rafra√Æchissement: ${error.message}`)\n    }\n}\n\nfunction checkLocalStorage() {\n    addLog('üì¶ V√©rification localStorage...')\n\n    if (process.client) {\n        const token = localStorage.getItem('auth-token')\n        const userData = localStorage.getItem('user-data')\n\n        addLog(`üîë Token: ${token ? token.substring(0, 30) + '...' : 'ABSENT'}`)\n\n        if (userData) {\n            try {\n                const user = JSON.parse(userData)\n                addLog(`üë§ User data: ${user.name} - Role: ${user.role}`)\n            } catch (e) {\n                addLog(`‚ùå Erreur parsing user data: ${e.message}`)\n            }\n        } else {\n            addLog('üì¶ Pas de donn√©es utilisateur dans localStorage')\n        }\n    }\n}\n\nasync function testDirectAPI() {\n    addLog('üéØ Test API direct...')\n\n    try {\n        const response = await $api.get('/auth/user')\n        const user = response.data.user || response.data\n        addLog(`üì• API Response - Role: ${user.role}, Name: ${user.name}`)\n    } catch (error) {\n        addLog(`‚ùå Erreur API: ${error.message}`)\n    }\n}\n\nasync function simulateRefresh() {\n    addLog('üîÑ Simulation rafra√Æchissement de page...')\n    addLog('üì§ √âtat avant: ' + JSON.stringify({\n        role: authStore.user?.role,\n        isAuthenticated: authStore.isAuthenticated,\n        isAdmin: authStore.isAdmin\n    }))\n\n    // Simuler l'initialisation comme au rafra√Æchissement\n    await authStore.initializeAuth()\n\n    addLog('üì• √âtat apr√®s: ' + JSON.stringify({\n        role: authStore.user?.role,\n        isAuthenticated: authStore.isAuthenticated,\n        isAdmin: authStore.isAdmin\n    }))\n}\n\n// Initialisation au chargement de la page\nonMounted(() => {\n    addLog('üöÄ Page de debug charg√©e')\n    addLog('üìä √âtat initial: ' + JSON.stringify({\n        user: authStore.user?.email || 'Non connect√©',\n        role: authStore.user?.role || 'N/A',\n        isAuthenticated: authStore.isAuthenticated,\n        isAdmin: authStore.isAdmin\n    }))\n})\n</script>\n"],"version":3}