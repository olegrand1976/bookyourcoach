{"file":"login-BYB7cDTj.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAmFA,UAAM,YAAY,aAAY;AAEf,cAAS;AACxB,UAAM,EAAE,EAAC,IAAK,QAAO;AAErB,UAAM,OAAO,SAAS;AAAA,MACpB,OAAO;AAAA,MACP,UAAU;AAAA,MACV,UAAU;AAAA,IACZ,CAAC;AAED,UAAM,UAAU,IAAI,KAAK;AACzB,UAAM,QAAQ,IAAI,EAAE;AACpB,UAAM,mBAAmB,IAAI,CAAA,CAAE;AA8E/B,gBAAY,MAAM;AAChB,UAAI,UAAU,iBAAiB;AAC7B,mBAAW,YAAY;AAAA,MACzB;AAAA,IACF,CAAC;;;mBAjLMA,eAAAC,WAAA,EAAA,OAAM,sFAAqF,GAAA,MAAA,CAAA,mIAIrFC,MAAA,CAAA,EAAC,iBAAA,CAAA,0EAGDA,MAAA,CAAA,EAAC,cAAA,CAAA;;QACM,IAAG;AAAA,QAAY,OAAM;AAAA;yBAA/B,CAEW,GAAAC,QAAAC,UAAA,aAAA;;qCADNF,MAAA,CAAA,EAAC,yBAAA,CAAA,CAAA,EAAA;AAAA;;8CAADA,MAAA,CAAA,EAAC,yBAAA,CAAA,GAAA,CAAA;AAAA;;;;;2JAQkCA,MAAA,CAAA,EAAC,YAAA,CAAA,6BACZG,cAAA,SAAAH,MAAA,IAAA,EAAK,KAAK,oQAElCG,cAAA,eAAaH,MAAA,CAAA,EAAC,YAAA,CAAA,qEAGwBA,MAAA,CAAA,EAAC,eAAA,CAAA,gCACZG,cAAA,SAAAH,MAAA,IAAA,EAAK,QAAQ,qRAGxCG,cAAA,eAAaH,MAAA,CAAA,EAAC,eAAA,CAAA,sHAMgBI,sBAAA,MAAA,QAAAJ,MAAA,IAAA,EAAK,QAAQ,IAAbK,gBAAAL,MAAA,IAAA,EAAK,UAAQ,IAAA,IAAbA,MAAA,IAAA,EAAK,QAAQ,IAAA,aAAA,0MAGzCA,MAAA,CAAA,EAAC,iBAAA,CAAA,8HAMDA,MAAA,CAAA,EAAC,qBAAA,CAAA,oEAMyBA,MAAA,OAAA,CAAO,IAAA,cAAA;UAE1BA,MAAA,OAAA,GAAO;sCAAKA,MAAA,CAAA,EAAC,qBAAA,CAAA,CAAA,SAAA;AAAA;sCACTA,MAAA,CAAA,EAAC,YAAA,CAAA,CAAA,SAAA;AAAA;;AAKV,UAAAA,MAAA,gBAAA,EAAiB,SAAM,GAAA;;AAGEM,sBAAAN,MAAA,gBAAA,IAAnB,oBAAe;sCACrB,eAAe,CAAA,OAAA;AAAA;;;;;UAOfA,MAAA,KAAA,GAAK;8HAETA,MAAA,KAAA,CAAK,CAAA,cAAA;AAAA;;;;;;;;;;;;;","names":["_ssrRenderAttrs","_mergeProps","_unref","_push","_parent","_ssrRenderAttr","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrRenderList"],"sources":["../../../../pages/login.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n    <div class=\"max-w-md w-full space-y-8\">\n      <div>\n        <h2 class=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n          {{ t('loginPage.title') }}\n        </h2>\n        <p class=\"mt-2 text-center text-sm text-gray-600\">\n          {{ t('loginPage.or') }}\n          <NuxtLink to=\"/register\" class=\"font-medium text-primary-600 hover:text-primary-500\">\n            {{ t('loginPage.createAccount') }}\n          </NuxtLink>\n        </p>\n      </div>\n\n      <form class=\"mt-8 space-y-6\" @submit.prevent=\"handleLogin\">\n        <div class=\"rounded-md shadow-sm -space-y-px\">\n          <div>\n            <label for=\"email\" class=\"sr-only\">{{ t('auth.email') }}</label>\n            <input id=\"email\" v-model=\"form.email\" name=\"email\" type=\"email\" autocomplete=\"email\" required\n              class=\"relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-primary-500 focus:border-primary-500 focus:z-10 sm:text-sm\"\n              :placeholder=\"t('auth.email')\" />\n          </div>\n          <div>\n            <label for=\"password\" class=\"sr-only\">{{ t('auth.password') }}</label>\n            <input id=\"password\" v-model=\"form.password\" name=\"password\" type=\"password\" autocomplete=\"current-password\"\n              required\n              class=\"relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-primary-500 focus:border-primary-500 focus:z-10 sm:text-sm\"\n              :placeholder=\"t('auth.password')\" />\n          </div>\n        </div>\n\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex items-center\">\n            <input id=\"remember-me\" v-model=\"form.remember\" name=\"remember-me\" type=\"checkbox\"\n              class=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\" />\n            <label for=\"remember-me\" class=\"ml-2 block text-sm text-gray-900\">\n              {{ t('auth.rememberMe') }}\n            </label>\n          </div>\n\n          <div class=\"text-sm\">\n            <a href=\"#\" class=\"font-medium text-primary-600 hover:text-primary-500\">\n              {{ t('auth.forgotPassword') }}\n            </a>\n          </div>\n        </div>\n\n        <div>\n          <button type=\"submit\" :disabled=\"loading\"\n            class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\">\n            <span v-if=\"loading\">{{ t('loginPage.loggingIn') }}</span>\n            <span v-else>{{ t('auth.login') }}</span>\n          </button>\n        </div>\n\n        <!-- Messages d'erreur de validation -->\n        <div v-if=\"validationErrors.length > 0\" class=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n          <div class=\"text-sm text-yellow-700\">\n            <ul class=\"list-disc list-inside\">\n              <li v-for=\"validationError in validationErrors\" :key=\"validationError\">\n                {{ validationError }}\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <!-- Messages d'erreur -->\n        <div v-if=\"error\" class=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div class=\"text-sm text-red-600\">\n            {{ error }}\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script setup>\ndefinePageMeta({\n  layout: false\n})\n\nconst authStore = useAuthStore()\nconst toast = useToast()\nconst router = useRouter()\nconst { t } = useI18n()\n\nconst form = reactive({\n  email: '',\n  password: '',\n  remember: false\n})\n\nconst loading = ref(false)\nconst error = ref('')\nconst validationErrors = ref([])\n\n// Fonction de validation renforcée\nconst validateForm = () => {\n  const errors = []\n\n  if (!form.email) {\n    errors.push('Email requis')\n  } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(form.email)) {\n    errors.push('Format email invalide')\n  }\n\n  if (!form.password) {\n    errors.push('Mot de passe requis')\n  } else if (form.password.length < 6) {\n    errors.push('Mot de passe trop court (minimum 6 caractères)')\n  }\n\n  return errors\n}\n\nconst handleLogin = async () => {\n  loading.value = true\n  error.value = ''\n  validationErrors.value = []\n\n  // Validation côté client\n  const clientErrors = validateForm()\n  if (clientErrors.length > 0) {\n    validationErrors.value = clientErrors\n    loading.value = false\n    return\n  }\n\n  try {\n    await authStore.login({\n      email: form.email,\n      password: form.password\n    })\n\n    toast.success('Connexion réussie')\n\n    // Rediriger selon le rôle\n    if (authStore.isAdmin) {\n      await navigateTo('/admin')\n    } else if (authStore.isTeacher) {\n      await navigateTo('/teacher')\n    } else {\n      await navigateTo('/dashboard')\n    }\n  } catch (err) {\n    console.error('Erreur de connexion complète:', err)\n    console.error('Response data:', err.response?.data)\n    console.error('Response status:', err.response?.status)\n    console.error('URL de base API:', useRuntimeConfig().public.apiBase)\n\n    let errorMessage = 'Une erreur est survenue'\n\n    if (err.response?.data?.message) {\n      errorMessage = err.response.data.message\n    } else if (err.code === 'ECONNREFUSED' || err.message.includes('Network Error')) {\n      errorMessage = 'Impossible de se connecter au serveur. Vérifiez que l\\'API est accessible.'\n    } else if (err.response?.status === 422) {\n      errorMessage = 'Informations de connexion invalides'\n    } else if (err.response?.status === 401) {\n      errorMessage = 'Email ou mot de passe incorrect'\n    } else {\n      errorMessage = `Erreur: ${err.message || 'Erreur inconnue'}`\n    }\n\n    error.value = errorMessage\n    toast.error('Erreur de connexion')\n  } finally {\n    loading.value = false\n  }\n}\n\n// Rediriger si déjà connecté\nwatchEffect(() => {\n  if (authStore.isAuthenticated) {\n    navigateTo('/dashboard')\n  }\n})\n</script>\n"],"version":3}