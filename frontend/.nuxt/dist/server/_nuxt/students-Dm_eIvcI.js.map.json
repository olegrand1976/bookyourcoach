{"file":"students-Dm_eIvcI.js","mappings":"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","names":["_ssrRenderAttrs","_mergeProps","_ssrRenderList","_ssrInterpolate","_ssrIncludeBooleanAttr"],"sources":["../../../../components/AddStudentAdvancedModal.vue","../../../../pages/club/students.vue"],"sourcesContent":["<template>\n  <div v-if=\"isOpen\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n    <div class=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n      <!-- Header -->\n      <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\n        <h3 class=\"text-xl font-semibold text-gray-900\">\n          Ajouter un étudiant existant\n        </h3>\n        <button\n          @click=\"closeModal\"\n          class=\"text-gray-400 hover:text-gray-600 transition-colors\"\n        >\n          <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n\n      <!-- Content -->\n      <div class=\"p-6\">\n        <!-- Mode Selection -->\n        <div class=\"mb-6\">\n          <div class=\"flex space-x-4\">\n            <button\n              @click=\"mode = 'qr'\"\n              :class=\"[\n                'flex-1 py-3 px-4 rounded-lg border-2 transition-all',\n                mode === 'qr' \n                  ? 'border-blue-500 bg-blue-50 text-blue-700' \n                  : 'border-gray-200 text-gray-600 hover:border-gray-300'\n              ]\"\n            >\n              <div class=\"flex items-center justify-center space-x-2\">\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\" />\n                </svg>\n                <span>Scanner QR Code</span>\n              </div>\n            </button>\n            <button\n              @click=\"mode = 'search'\"\n              :class=\"[\n                'flex-1 py-3 px-4 rounded-lg border-2 transition-all',\n                mode === 'search' \n                  ? 'border-blue-500 bg-blue-50 text-blue-700' \n                  : 'border-gray-200 text-gray-600 hover:border-gray-300'\n              ]\"\n            >\n              <div class=\"flex items-center justify-center space-x-2\">\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                </svg>\n                <span>Recherche manuelle</span>\n              </div>\n            </button>\n          </div>\n        </div>\n\n        <!-- QR Code Scanner -->\n        <div v-if=\"mode === 'qr'\" class=\"space-y-4\">\n          <div class=\"text-center\">\n            <h4 class=\"text-lg font-medium text-gray-900 mb-2\">Scanner le QR Code de l'étudiant</h4>\n            <p class=\"text-gray-600 text-sm\">Demandez à l'étudiant d'afficher son QR Code sur son écran</p>\n          </div>\n          \n          <div class=\"bg-gray-50 rounded-lg p-6 text-center\">\n            <div class=\"mb-4\">\n              <svg class=\"w-16 h-16 mx-auto text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\" />\n              </svg>\n            </div>\n            <p class=\"text-gray-600 mb-4\">Fonctionnalité de scan QR Code à implémenter</p>\n            <button\n              @click=\"simulateQrScan\"\n              class=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              Simuler le scan (Test)\n            </button>\n          </div>\n        </div>\n\n        <!-- Manual Search -->\n        <div v-if=\"mode === 'search'\" class=\"space-y-4\">\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n              Rechercher un étudiant\n            </label>\n            <div class=\"relative\">\n              <input\n                v-model=\"searchQuery\"\n                @input=\"searchUsers\"\n                type=\"text\"\n                placeholder=\"Nom, email ou téléphone...\"\n                class=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n              <div v-if=\"isSearching\" class=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                <div class=\"animate-spin rounded-full h-5 w-5 border-b-2 border-blue-600\"></div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Search Results -->\n          <div v-if=\"searchResults.length > 0\" class=\"space-y-2\">\n            <h4 class=\"text-sm font-medium text-gray-700\">Résultats de recherche :</h4>\n            <div class=\"max-h-60 overflow-y-auto space-y-2\">\n              <div\n                v-for=\"user in searchResults\"\n                :key=\"user.id\"\n                @click=\"selectUser(user)\"\n                class=\"p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors\"\n              >\n                <div class=\"flex items-center justify-between\">\n                  <div>\n                    <p class=\"font-medium text-gray-900\">{{ user.name }}</p>\n                    <p class=\"text-sm text-gray-600\">{{ user.email }}</p>\n                    <p v-if=\"user.phone\" class=\"text-sm text-gray-500\">{{ user.phone }}</p>\n                  </div>\n                  <div class=\"text-sm text-gray-500\">\n                    {{ user.role === 'student' ? 'Étudiant' : user.role }}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"searchQuery && !isSearching && searchResults.length === 0\" class=\"text-center py-4\">\n            <p class=\"text-gray-500\">Aucun étudiant trouvé</p>\n          </div>\n        </div>\n\n        <!-- Selected User Info -->\n        <div v-if=\"selectedUser\" class=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n          <h4 class=\"font-medium text-blue-900 mb-2\">Étudiant sélectionné :</h4>\n          <div class=\"flex items-center justify-between\">\n            <div>\n              <p class=\"font-medium text-blue-900\">{{ selectedUser.name }}</p>\n              <p class=\"text-sm text-blue-700\">{{ selectedUser.email }}</p>\n            </div>\n            <button\n              @click=\"selectedUser = null\"\n              class=\"text-blue-600 hover:text-blue-800\"\n            >\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Footer -->\n      <div class=\"flex items-center justify-end space-x-3 p-6 border-t border-gray-200\">\n        <button\n          @click=\"closeModal\"\n          class=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\n        >\n          Annuler\n        </button>\n        <button\n          @click=\"addStudentToClub\"\n          :disabled=\"!selectedUser || isAdding\"\n          :class=\"[\n            'px-6 py-2 rounded-lg font-medium transition-colors',\n            selectedUser && !isAdding\n              ? 'bg-blue-600 text-white hover:bg-blue-700'\n              : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n          ]\"\n        >\n          <span v-if=\"isAdding\" class=\"flex items-center space-x-2\">\n            <div class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n            <span>Ajout en cours...</span>\n          </span>\n          <span v-else>Ajouter au club</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\nimport { useToast } from '@/composables/useToast'\n\nconst props = defineProps({\n  isOpen: {\n    type: Boolean,\n    default: false\n  },\n  clubId: {\n    type: Number,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['close', 'success'])\n\nconst { showToast } = useToast()\n\n// State\nconst mode = ref('qr')\nconst searchQuery = ref('')\nconst searchResults = ref([])\nconst selectedUser = ref(null)\nconst isSearching = ref(false)\nconst isAdding = ref(false)\n\n// Methods\nconst closeModal = () => {\n  emit('close')\n  resetForm()\n}\n\nconst resetForm = () => {\n  mode.value = 'qr'\n  searchQuery.value = ''\n  searchResults.value = []\n  selectedUser.value = null\n  isSearching.value = false\n  isAdding.value = false\n}\n\nconst simulateQrScan = async () => {\n  // Simulation d'un scan QR Code pour les tests\n  try {\n    const testUser = {\n      id: 1,\n      name: 'Étudiant Test',\n      email: 'student@test.com',\n      role: 'student',\n      phone: '0123456789'\n    }\n    selectedUser.value = testUser\n    showToast('QR Code scanné avec succès', 'success')\n  } catch (error) {\n    showToast('Erreur lors du scan du QR Code', 'error')\n  }\n}\n\nconst searchUsers = async () => {\n  if (searchQuery.value.length < 2) {\n    searchResults.value = []\n    return\n  }\n\n  isSearching.value = true\n  \n  try {\n    // Simulation de recherche pour les tests\n    // En production, utiliser l'API réelle\n    await new Promise(resolve => setTimeout(resolve, 500))\n    \n    const mockResults = [\n      {\n        id: 1,\n        name: 'Étudiant Test 1',\n        email: 'student1@test.com',\n        role: 'student',\n        phone: '0123456789'\n      },\n      {\n        id: 2,\n        name: 'Étudiant Test 2',\n        email: 'student2@test.com',\n        role: 'student',\n        phone: '0987654321'\n      }\n    ].filter(user => \n      user.name.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\n      user.email.toLowerCase().includes(searchQuery.value.toLowerCase())\n    )\n    \n    searchResults.value = mockResults\n  } catch (error) {\n    showToast('Erreur lors de la recherche', 'error')\n    searchResults.value = []\n  } finally {\n    isSearching.value = false\n  }\n}\n\nconst selectUser = (user) => {\n  selectedUser.value = user\n  searchQuery.value = ''\n  searchResults.value = []\n}\n\nconst addStudentToClub = async () => {\n  if (!selectedUser.value) return\n\n  isAdding.value = true\n\n  try {\n    // Simulation de l'ajout pour les tests\n    // En production, utiliser l'API réelle\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    \n    showToast('Étudiant ajouté au club avec succès', 'success')\n    emit('success')\n    closeModal()\n  } catch (error) {\n    showToast('Erreur lors de l\\'ajout de l\\'étudiant', 'error')\n  } finally {\n    isAdding.value = false\n  }\n}\n\n// Watch for search query changes\nwatch(searchQuery, () => {\n  if (searchQuery.value.length >= 2) {\n    searchUsers()\n  } else {\n    searchResults.value = []\n  }\n})\n</script>\n","<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <!-- Header avec actions -->\n      <div class=\"mb-8\">\n        <div class=\"flex items-center justify-between\">\n          <div>\n            <h1 class=\"text-3xl font-bold text-gray-900\">Élèves</h1>\n            <p class=\"mt-2 text-gray-600\">\n              Gérez vos élèves et leurs informations\n            </p>\n          </div>\n          <div class=\"flex space-x-3\">\n            <button \n              @click=\"showAddStudentModal = true\"\n              class=\"bg-gradient-to-r from-emerald-500 to-teal-600 text-white px-6 py-3 rounded-lg hover:from-emerald-600 hover:to-teal-700 transition-all duration-200 font-medium flex items-center space-x-2\"\n            >\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\n              </svg>\n              <span>Nouvel élève</span>\n            </button>\n            <button \n              @click=\"showAddExistingStudentModal = true\"\n              class=\"bg-gradient-to-r from-blue-500 to-indigo-600 text-white px-6 py-3 rounded-lg hover:from-blue-600 hover:to-indigo-700 transition-all duration-200 font-medium flex items-center space-x-2\"\n            >\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n              </svg>\n              <span>Élève existant</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Stats rapides -->\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n        <div class=\"bg-white rounded-xl shadow p-6\">\n          <div class=\"flex items-center\">\n            <div class=\"p-3 bg-emerald-100 rounded-lg\">\n              <svg class=\"w-6 h-6 text-emerald-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\"></path>\n              </svg>\n            </div>\n            <div class=\"ml-4\">\n              <p class=\"text-sm font-medium text-gray-600\">Total</p>\n              <p class=\"text-2xl font-semibold text-gray-900\">{{ students.length }}</p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bg-white rounded-xl shadow p-6\">\n          <div class=\"flex items-center\">\n            <div class=\"p-3 bg-blue-100 rounded-lg\">\n              <svg class=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n              </svg>\n            </div>\n            <div class=\"ml-4\">\n              <p class=\"text-sm font-medium text-gray-600\">Actifs</p>\n              <p class=\"text-2xl font-semibold text-gray-900\">{{ activeStudents }}</p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bg-white rounded-xl shadow p-6\">\n          <div class=\"flex items-center\">\n            <div class=\"p-3 bg-yellow-100 rounded-lg\">\n              <svg class=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\"></path>\n              </svg>\n            </div>\n            <div class=\"ml-4\">\n              <p class=\"text-sm font-medium text-gray-600\">Débutants</p>\n              <p class=\"text-2xl font-semibold text-gray-900\">{{ beginnerStudents }}</p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bg-white rounded-xl shadow p-6\">\n          <div class=\"flex items-center\">\n            <div class=\"p-3 bg-purple-100 rounded-lg\">\n              <svg class=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n              </svg>\n            </div>\n            <div class=\"ml-4\">\n              <p class=\"text-sm font-medium text-gray-600\">Documents</p>\n              <p class=\"text-2xl font-semibold text-gray-900\">{{ studentsWithDocuments }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Filtres et recherche -->\n      <div class=\"bg-white rounded-xl shadow p-6 mb-8\">\n        <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Rechercher</label>\n            <div class=\"relative\">\n              <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n                </svg>\n              </div>\n              <input \n                v-model=\"searchQuery\" \n                type=\"text\" \n                placeholder=\"Nom, email...\"\n                class=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500\"\n              >\n            </div>\n          </div>\n          \n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Niveau</label>\n            <select \n              v-model=\"selectedLevel\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500\"\n            >\n              <option value=\"\">Tous les niveaux</option>\n              <option value=\"debutant\">🌱 Débutant</option>\n              <option value=\"intermediaire\">📈 Intermédiaire</option>\n              <option value=\"avance\">⭐ Avancé</option>\n              <option value=\"expert\">🏆 Expert</option>\n            </select>\n          </div>\n          \n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Spécialité</label>\n            <select \n              v-model=\"selectedDiscipline\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500\"\n            >\n              <option value=\"\">Toutes les spécialités</option>\n              <option v-for=\"discipline in availableDisciplines\" :key=\"discipline.id\" :value=\"discipline.id\">\n                {{ getActivityIcon(discipline.activity_type_id) }} {{ discipline.name }}\n              </option>\n            </select>\n          </div>\n          \n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Tri</label>\n            <select \n              v-model=\"sortBy\" \n              class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500\"\n            >\n              <option value=\"name\">Nom (A-Z)</option>\n              <option value=\"name_desc\">Nom (Z-A)</option>\n              <option value=\"level\">Niveau (croissant)</option>\n              <option value=\"level_desc\">Niveau (décroissant)</option>\n              <option value=\"created\">Date d'inscription</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <!-- Liste des élèves -->\n      <div class=\"bg-white rounded-xl shadow overflow-hidden\">\n        <div class=\"px-6 py-4 border-b border-gray-200\">\n          <h3 class=\"text-lg font-medium text-gray-900\">\n            Liste des élèves ({{ filteredStudents.length }})\n          </h3>\n        </div>\n        \n        <div v-if=\"filteredStudents.length === 0\" class=\"text-center py-12\">\n          <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\"></path>\n          </svg>\n          <h3 class=\"mt-2 text-sm font-medium text-gray-900\">Aucun élève</h3>\n          <p class=\"mt-1 text-sm text-gray-500\">Commencez par ajouter votre premier élève.</p>\n          <div class=\"mt-6\">\n            <button \n              @click=\"showAddStudentModal = true\"\n              class=\"bg-emerald-600 text-white px-4 py-2 rounded-lg hover:bg-emerald-700 transition-colors\"\n            >\n              Ajouter un élève\n            </button>\n          </div>\n        </div>\n        \n        <div v-else class=\"divide-y divide-gray-200\">\n          <div \n            v-for=\"student in filteredStudents\" \n            :key=\"student.id\" \n            class=\"p-6 hover:bg-gray-50 transition-colors\"\n          >\n            <div class=\"flex items-center justify-between\">\n              <div class=\"flex items-center space-x-4\">\n                <div class=\"bg-emerald-100 p-3 rounded-full\">\n                  <svg class=\"w-6 h-6 text-emerald-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\n                  </svg>\n                </div>\n                \n                <div class=\"flex-1\">\n                  <div class=\"flex items-center space-x-3\">\n                    <h4 class=\"text-lg font-medium text-gray-900\">{{ student.name }}</h4>\n                    <span class=\"px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full\">\n                      Actif\n                    </span>\n                    <span v-if=\"student.level\" class=\"px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded-full\">\n                      {{ getLevelLabel(student.level) }}\n                    </span>\n                  </div>\n                  \n                  <div class=\"mt-1 flex items-center space-x-4 text-sm text-gray-600\">\n                    <span class=\"flex items-center\">\n                      <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path>\n                      </svg>\n                      {{ student.email }}\n                    </span>\n                    \n                    <span v-if=\"student.phone\" class=\"flex items-center\">\n                      <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"></path>\n                      </svg>\n                      {{ student.phone }}\n                    </span>\n                  </div>\n                  \n                  <div v-if=\"student.disciplines && student.disciplines.length > 0\" class=\"mt-2\">\n                    <div class=\"flex flex-wrap gap-2\">\n                      <span \n                        v-for=\"discipline in student.disciplines\" \n                        :key=\"discipline.id\" \n                        class=\"px-2 py-1 text-xs font-medium bg-gray-100 text-gray-800 rounded-full\"\n                      >\n                        {{ getActivityIcon(discipline.activity_type_id) }} {{ discipline.name }}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  <div v-if=\"student.goals\" class=\"mt-2 text-sm text-gray-600\">\n                    <span class=\"font-medium\">Objectifs:</span> {{ student.goals.substring(0, 100) }}{{ student.goals.length > 100 ? '...' : '' }}\n                  </div>\n                  \n                  <div v-if=\"student.medical_info\" class=\"mt-1 text-sm text-amber-600\">\n                    <span class=\"font-medium\">⚠️ Infos médicales:</span> {{ student.medical_info.substring(0, 80) }}{{ student.medical_info.length > 80 ? '...' : '' }}\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"flex items-center space-x-2\">\n                <button \n                  @click=\"viewStudent(student)\"\n                  class=\"text-blue-600 hover:text-blue-800 p-2 hover:bg-blue-50 rounded-lg transition-colors\"\n                >\n                  <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path>\n                  </svg>\n                </button>\n                \n                <button \n                  @click=\"editStudent(student)\"\n                  class=\"text-emerald-600 hover:text-emerald-800 p-2 hover:bg-emerald-50 rounded-lg transition-colors\"\n                >\n                  <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\n                  </svg>\n                </button>\n                \n                <button \n                  @click=\"deleteStudent(student)\"\n                  class=\"text-red-600 hover:text-red-800 p-2 hover:bg-red-50 rounded-lg transition-colors\"\n                >\n                  <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Modal d'ajout d'élève -->\n    <AddStudentModal \n      v-if=\"showAddStudentModal\" \n      @close=\"showAddStudentModal = false\" \n      @success=\"loadStudents\" \n    />\n\n    <!-- Modal d'ajout d'élève existant -->\n    <AddStudentAdvancedModal \n      v-if=\"showAddExistingStudentModal\" \n      :club-id=\"1\"\n      @close=\"showAddExistingStudentModal = false\" \n      @success=\"loadStudents\" \n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\n\ndefinePageMeta({\n  middleware: ['auth']\n})\n\nconst students = ref([])\nconst availableDisciplines = ref([])\nconst showAddStudentModal = ref(false)\nconst showAddExistingStudentModal = ref(false)\nconst searchQuery = ref('')\nconst selectedLevel = ref('')\nconst selectedDiscipline = ref('')\nconst sortBy = ref('name')\n\n// Computed properties pour les statistiques\nconst activeStudents = computed(() => students.value.length)\nconst beginnerStudents = computed(() => \n  students.value.filter(student => student.level === 'debutant').length\n)\nconst studentsWithDocuments = computed(() => \n  students.value.filter(student => student.medical_documents && student.medical_documents.length > 0).length\n)\n\n// Filtrage et tri des élèves\nconst filteredStudents = computed(() => {\n  let filtered = students.value\n\n  // Filtrage par recherche\n  if (searchQuery.value) {\n    const query = searchQuery.value.toLowerCase()\n    filtered = filtered.filter(student => \n      student.name.toLowerCase().includes(query) ||\n      student.email.toLowerCase().includes(query)\n    )\n  }\n\n  // Filtrage par niveau\n  if (selectedLevel.value) {\n    filtered = filtered.filter(student => student.level === selectedLevel.value)\n  }\n\n  // Filtrage par spécialité\n  if (selectedDiscipline.value) {\n    filtered = filtered.filter(student => \n      student.disciplines && student.disciplines.some(d => d.id == selectedDiscipline.value)\n    )\n  }\n\n  // Tri\n  filtered.sort((a, b) => {\n    switch (sortBy.value) {\n      case 'name':\n        return a.name.localeCompare(b.name)\n      case 'name_desc':\n        return b.name.localeCompare(a.name)\n      case 'level':\n        const levelOrder = { 'debutant': 1, 'intermediaire': 2, 'avance': 3, 'expert': 4 }\n        return (levelOrder[a.level] || 0) - (levelOrder[b.level] || 0)\n      case 'level_desc':\n        const levelOrderDesc = { 'debutant': 1, 'intermediaire': 2, 'avance': 3, 'expert': 4 }\n        return (levelOrderDesc[b.level] || 0) - (levelOrderDesc[a.level] || 0)\n      case 'created':\n        return new Date(b.created_at) - new Date(a.created_at)\n      default:\n        return 0\n    }\n  })\n\n  return filtered\n})\n\n// Obtenir le label d'un niveau\nconst getLevelLabel = (level) => {\n  const labels = {\n    debutant: '🌱 Débutant',\n    intermediaire: '📈 Intermédiaire',\n    avance: '⭐ Avancé',\n    expert: '🏆 Expert'\n  }\n  return labels[level] || level\n}\n\n// Obtenir l'icône de l'activité\nconst getActivityIcon = (activityTypeId) => {\n  const icons = {\n    1: '🏇', // Équitation\n    2: '🏊‍♀️', // Natation\n    3: '💪', // Salle de sport\n    4: '🏃‍♂️' // Coaching sportif\n  }\n  return icons[activityTypeId] || '🎯'\n}\n\n// Charger les élèves et spécialités\nconst loadStudents = async () => {\n  try {\n    const config = useRuntimeConfig()\n    const tokenCookie = useCookie('auth-token')\n    \n    const response = await $fetch(`${config.public.apiBase}/club/dashboard-test`)\n    \n    if (response.success && response.data) {\n      students.value = response.data.recentStudents || []\n      \n      // Charger aussi les spécialités disponibles\n      if (response.data.club && response.data.club.disciplines) {\n        availableDisciplines.value = response.data.club.disciplines\n      }\n    }\n  } catch (error) {\n    console.error('❌ Erreur lors du chargement des élèves:', error)\n  }\n}\n\n// Actions sur les élèves\nconst viewStudent = (student) => {\n  console.log('Voir élève:', student)\n  // TODO: Implémenter la vue détaillée\n}\n\nconst editStudent = (student) => {\n  console.log('Modifier élève:', student)\n  // TODO: Implémenter l'édition\n}\n\nconst deleteStudent = (student) => {\n  if (confirm(`Êtes-vous sûr de vouloir supprimer l'élève ${student.name} ?`)) {\n    console.log('Supprimer élève:', student)\n    // TODO: Implémenter la suppression\n  }\n}\n\nonMounted(() => {\n  loadStudents()\n})\n</script>\n"],"version":3}