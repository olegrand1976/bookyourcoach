{"version":3,"file":"graph-analysis-DqM1Ei7Y.js","sources":["../../../../components/GraphVisualizationSimple.vue","../../../../pages/admin/graph-analysis.vue"],"sourcesContent":["<template>\n  <div class=\"graph-visualization\">\n    <!-- Contr√¥les de filtrage -->\n    <div class=\"graph-controls mb-6 p-4 bg-white rounded-lg shadow\">\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <!-- S√©lection d'entit√© -->\n        <div>\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Entit√© de d√©part\n          </label>\n          <select \n            v-model=\"selectedEntity\" \n            @change=\"onEntityChange\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"\">S√©lectionner une entit√©</option>\n            <option value=\"club\">Club</option>\n            <option value=\"teacher\">Enseignant</option>\n            <option value=\"user\">Utilisateur</option>\n            <option value=\"contract\">Contrat</option>\n          </select>\n        </div>\n\n        <!-- S√©lection d'√©l√©ment -->\n        <div>\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n            {{ entityLabel }}\n          </label>\n          <select \n            v-model=\"selectedItem\" \n            @change=\"onItemChange\"\n            :disabled=\"!selectedEntity || isLoading\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:bg-gray-100\"\n          >\n            <option value=\"\">\n              {{ isLoading ? 'Chargement...' : `S√©lectionner ${entityLabel.toLowerCase()}` }}\n            </option>\n            <option \n              v-for=\"item in entityItems\" \n              :key=\"item.id\" \n              :value=\"item.id\"\n              :disabled=\"item.id === 'error'\"\n            >\n              {{ item.name }}\n            </option>\n          </select>\n          <div v-if=\"entityItems.length === 0 && selectedEntity && !isLoading\" class=\"text-sm text-red-600 mt-1\">\n            Aucun {{ entityLabel.toLowerCase() }} trouv√©\n          </div>\n        </div>\n\n        <!-- Profondeur de recherche -->\n        <div>\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n            Profondeur\n          </label>\n          <select \n            v-model=\"searchDepth\" \n            @change=\"loadGraphData\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"1\">1 niveau</option>\n            <option value=\"2\">2 niveaux</option>\n            <option value=\"3\">3 niveaux</option>\n          </select>\n        </div>\n\n        <!-- Actions -->\n        <div class=\"flex items-end\">\n          <button \n            @click=\"loadGraphData\"\n            :disabled=\"!selectedItem\"\n            class=\"w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n          >\n            üîç Analyser\n          </button>\n        </div>\n      </div>\n\n      <!-- Filtres avanc√©s -->\n      <div class=\"mt-4 pt-4 border-t border-gray-200\">\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n              Filtrer par statut\n            </label>\n            <select \n              v-model=\"statusFilter\" \n              @change=\"loadGraphData\"\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"\">Tous les statuts</option>\n              <option value=\"active\">Actif</option>\n              <option value=\"inactive\">Inactif</option>\n              <option value=\"pending\">En attente</option>\n            </select>\n          </div>\n\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">\n              Filtrer par ville\n            </label>\n            <select \n              v-model=\"cityFilter\" \n              @change=\"loadGraphData\"\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"\">Toutes les villes</option>\n              <option \n                v-for=\"city in cities\" \n                :key=\"city\" \n                :value=\"city\"\n              >\n                {{ city }}\n              </option>\n            </select>\n          </div>\n\n          <div class=\"flex items-end\">\n            <button \n              @click=\"resetFilters\"\n              class=\"w-full px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\n            >\n              üîÑ R√©initialiser\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Statistiques -->\n    <div v-if=\"graphStats\" class=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n      <h3 class=\"text-lg font-semibold text-blue-900 mb-2\">üìä Statistiques du graphe</h3>\n      <div class=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n        <div>\n          <span class=\"font-medium\">N≈ìuds:</span> {{ graphStats.nodes }}\n        </div>\n        <div>\n          <span class=\"font-medium\">Relations:</span> {{ graphStats.edges }}\n        </div>\n        <div>\n          <span class=\"font-medium\">Clubs:</span> {{ graphStats.clubs }}\n        </div>\n        <div>\n          <span class=\"font-medium\">Enseignants:</span> {{ graphStats.teachers }}\n        </div>\n      </div>\n    </div>\n\n    <!-- Conteneur du graphe -->\n    <div class=\"graph-container\">\n      <div \n        ref=\"cyContainer\" \n        class=\"w-full h-96 border border-gray-300 rounded-lg bg-gray-50\"\n        :class=\"{ 'loading': isLoading }\"\n      >\n        <div v-if=\"isLoading\" class=\"flex items-center justify-center h-full\">\n          <div class=\"text-center\">\n            <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n            <p class=\"text-gray-600\">Chargement du graphe...</p>\n          </div>\n        </div>\n        <div v-else-if=\"!graphData\" class=\"flex items-center justify-center h-full\">\n          <div class=\"text-center text-gray-500\">\n            <div class=\"text-6xl mb-4\">üîç</div>\n            <p>S√©lectionnez une entit√© pour visualiser ses relations</p>\n          </div>\n        </div>\n        <div v-else-if=\"graphData && !cytoscapeLoaded\" class=\"flex items-center justify-center h-full\">\n          <div class=\"text-center text-gray-500\">\n            <div class=\"text-6xl mb-4\">‚è≥</div>\n            <p>Chargement de la biblioth√®que de visualisation...</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- L√©gende -->\n    <div class=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n      <h4 class=\"font-semibold text-gray-800 mb-2\">üé® L√©gende</h4>\n      <div class=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n        <div class=\"flex items-center\">\n          <div class=\"w-4 h-4 bg-blue-500 rounded-full mr-2\"></div>\n          <span>Clubs</span>\n        </div>\n        <div class=\"flex items-center\">\n          <div class=\"w-4 h-4 bg-green-500 rounded-full mr-2\"></div>\n          <span>Enseignants</span>\n        </div>\n        <div class=\"flex items-center\">\n          <div class=\"w-4 h-4 bg-purple-500 rounded-full mr-2\"></div>\n          <span>Utilisateurs</span>\n        </div>\n        <div class=\"flex items-center\">\n          <div class=\"w-4 h-4 bg-orange-500 rounded-full mr-2\"></div>\n          <span>Contrats</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, nextTick, computed } from 'vue'\n\n// Props\nconst props = defineProps({\n  initialEntity: {\n    type: String,\n    default: ''\n  },\n  initialItem: {\n    type: [String, Number],\n    default: ''\n  }\n})\n\n// √âtat r√©actif\nconst cyContainer = ref(null)\nconst cy = ref(null)\nconst isLoading = ref(false)\nconst graphData = ref(null)\nconst graphStats = ref(null)\nconst cytoscapeLoaded = ref(false)\n\n// Filtres\nconst selectedEntity = ref(props.initialEntity)\nconst selectedItem = ref(props.initialItem)\nconst searchDepth = ref(2)\nconst statusFilter = ref('')\nconst cityFilter = ref('')\n\n// Donn√©es\nconst entityItems = ref([])\nconst cities = ref([])\n\n// Labels des entit√©s\nconst entityLabels = {\n  club: 'Club',\n  teacher: 'Enseignant', \n  user: 'Utilisateur',\n  contract: 'Contrat'\n}\n\nconst entityLabel = computed(() => entityLabels[selectedEntity.value] || '√âl√©ment')\n\n// Charger les √©l√©ments selon l'entit√© s√©lectionn√©e\nconst onEntityChange = async () => {\n  selectedItem.value = ''\n  entityItems.value = []\n  \n  if (!selectedEntity.value) return\n  \n  try {\n    isLoading.value = true\n    console.log('Chargement des √©l√©ments pour:', selectedEntity.value)\n    \n    // Utiliser le bon endpoint selon l'entit√©\n    const endpoint = `/api/admin/${selectedEntity.value}s`\n    console.log('Endpoint:', endpoint)\n    \n    const response = await $fetch(endpoint)\n    console.log('R√©ponse API:', response)\n    \n    if (response.success) {\n      entityItems.value = response.data.map(item => ({\n        id: item.id,\n        name: item.name || `${item.first_name || ''} ${item.last_name || ''}`.trim() || item.email || `√âl√©ment #${item.id}`\n      }))\n      console.log('√âl√©ments charg√©s:', entityItems.value)\n    } else {\n      console.error('Erreur dans la r√©ponse API:', response)\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement des √©l√©ments:', error)\n    // Afficher un message d'erreur √† l'utilisateur\n    entityItems.value = [{\n      id: 'error',\n      name: 'Erreur de chargement - V√©rifiez la connexion'\n    }]\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Charger les donn√©es du graphe\nconst onItemChange = () => {\n  if (selectedItem.value) {\n    loadGraphData()\n  }\n}\n\n// Charger les donn√©es du graphe depuis Neo4j\nconst loadGraphData = async () => {\n  if (!selectedItem.value || !selectedEntity.value) return\n  \n  try {\n    isLoading.value = true\n    \n    const params = new URLSearchParams({\n      entity: selectedEntity.value,\n      id: selectedItem.value,\n      depth: searchDepth.value,\n      status: statusFilter.value,\n      city: cityFilter.value\n    })\n    \n    const response = await $fetch(`/api/neo4j/graph-visualization?${params}`)\n    \n    if (response.success) {\n      graphData.value = response.data\n      graphStats.value = response.stats\n      \n      await nextTick()\n      await renderGraph()\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement du graphe:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Rendre le graphe avec Cytoscape\nconst renderGraph = async () => {\n  if (!graphData.value || !cyContainer.value) return\n  \n  try {\n    // Charger Cytoscape dynamiquement\n    const cytoscapeModule = await import('cytoscape')\n    const cytoscape = cytoscapeModule.default\n    \n    // Charger l'extension cose-bilkent\n    const coseBilkentModule = await import('cytoscape-cose-bilkent')\n    const coseBilkent = coseBilkentModule.default\n    \n    // Enregistrer l'extension\n    cytoscape.use(coseBilkent)\n    \n    cytoscapeLoaded.value = true\n    \n    // D√©truire l'instance pr√©c√©dente\n    if (cy.value) {\n      cy.value.destroy()\n    }\n    \n    // Configuration du style\n    const style = [\n      {\n        selector: 'node',\n        style: {\n          'background-color': 'data(color)',\n          'label': 'data(label)',\n          'text-valign': 'center',\n          'text-halign': 'center',\n          'font-size': '12px',\n          'font-weight': 'bold',\n          'color': '#fff',\n          'text-outline-width': 2,\n          'text-outline-color': '#000',\n          'width': 'data(size)',\n          'height': 'data(size)',\n          'border-width': 2,\n          'border-color': '#fff'\n        }\n      },\n      {\n        selector: 'edge',\n        style: {\n          'width': 3,\n          'line-color': 'data(color)',\n          'target-arrow-color': 'data(color)',\n          'target-arrow-shape': 'triangle',\n          'curve-style': 'bezier',\n          'label': 'data(label)',\n          'font-size': '10px',\n          'text-rotation': 'autorotate',\n          'text-margin-y': -10\n        }\n      },\n      {\n        selector: 'node:selected',\n        style: {\n          'border-width': 4,\n          'border-color': '#ff6b6b'\n        }\n      },\n      {\n        selector: 'edge:selected',\n        style: {\n          'line-color': '#ff6b6b',\n          'target-arrow-color': '#ff6b6b'\n        }\n      }\n    ]\n    \n    // Configuration du layout\n    const layout = {\n      name: 'cose-bilkent',\n      idealEdgeLength: 100,\n      nodeRepulsion: 4500,\n      edgeElasticity: 0.45,\n      nestingFactor: 0.1,\n      gravity: 0.25,\n      numIter: 2500,\n      tile: true,\n      animate: true,\n      animationDuration: 1000,\n      tilingPaddingVertical: 10,\n      tilingPaddingHorizontal: 10\n    }\n    \n    // Cr√©er l'instance Cytoscape\n    cy.value = cytoscape({\n      container: cyContainer.value,\n      elements: graphData.value,\n      style: style,\n      layout: layout,\n      minZoom: 0.1,\n      maxZoom: 3,\n      wheelSensitivity: 0.1\n    })\n    \n    // Ajouter les √©v√©nements\n    cy.value.on('tap', 'node', (event) => {\n      const node = event.target\n      console.log('N≈ìud s√©lectionn√©:', node.data())\n    })\n    \n    cy.value.on('tap', 'edge', (event) => {\n      const edge = event.target\n      console.log('Relation s√©lectionn√©e:', edge.data())\n    })\n    \n    // Ajuster la vue\n    cy.value.fit()\n    \n  } catch (error) {\n    console.error('Erreur lors du chargement de Cytoscape:', error)\n    // Fallback: afficher les donn√©es sous forme de liste\n    showFallbackVisualization()\n  }\n}\n\n// Visualisation de fallback si Cytoscape ne charge pas\nconst showFallbackVisualization = () => {\n  console.log('Utilisation de la visualisation de fallback')\n  // Ici on pourrait afficher les donn√©es sous forme de liste ou de tableau\n}\n\n// R√©initialiser les filtres\nconst resetFilters = () => {\n  selectedEntity.value = ''\n  selectedItem.value = ''\n  searchDepth.value = 2\n  statusFilter.value = ''\n  cityFilter.value = ''\n  entityItems.value = []\n  graphData.value = null\n  graphStats.value = null\n  cytoscapeLoaded.value = false\n  \n  if (cy.value) {\n    cy.value.destroy()\n    cy.value = null\n  }\n}\n\n// Charger les villes\nconst loadCities = async () => {\n  try {\n    const response = await $fetch('/api/admin/clubs')\n    if (response.success) {\n      cities.value = [...new Set(response.data.map(club => club.city).filter(Boolean))]\n      console.log('Villes charg√©es:', cities.value)\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement des villes:', error)\n  }\n}\n\n// Initialisation\nonMounted(() => {\n  loadCities()\n  \n  if (props.initialEntity && props.initialItem) {\n    onEntityChange()\n  }\n})\n</script>\n\n<style scoped>\n.graph-visualization {\n  @apply p-6;\n}\n\n.graph-container {\n  position: relative;\n}\n\n.loading {\n  @apply opacity-50 pointer-events-none;\n}\n\n/* Styles pour Cytoscape */\n:deep(.cytoscape-container) {\n  @apply rounded-lg;\n}\n\n:deep(.cy-node) {\n  cursor: pointer;\n}\n\n:deep(.cy-edge) {\n  cursor: pointer;\n}\n</style>\n","<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <!-- Header -->\n      <div class=\"mb-8\">\n        <div class=\"flex items-center justify-between\">\n          <div>\n            <h1 class=\"text-3xl font-bold text-gray-900 text-center\">\n              <span class=\"mr-3 text-primary-600\">üìä</span>\n              Analyse Graphique\n            </h1>\n            <p class=\"mt-2 text-gray-600\">Visualisez et analysez les relations entre les entit√©s de votre plateforme</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Navigation par onglets -->\n      <div class=\"mb-8\">\n        <nav class=\"flex space-x-8\">\n          <button \n            @click=\"activeTab = 'visualization'\"\n            :class=\"activeTab === 'visualization' ? 'border-blue-500 text-blue-600' : 'border-transparent text-gray-500 hover:text-gray-700'\"\n            class=\"whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm\"\n          >\n            Visualisation Interactive\n          </button>\n          <button \n            @click=\"activeTab = 'analytics'\"\n            :class=\"activeTab === 'analytics' ? 'border-blue-500 text-blue-600' : 'border-transparent text-gray-500 hover:text-gray-700'\"\n            class=\"whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm\"\n          >\n            Analyses Pr√©d√©finies\n          </button>\n          <button \n            @click=\"activeTab = 'sync'\"\n            :class=\"activeTab === 'sync' ? 'border-blue-500 text-blue-600' : 'border-transparent text-gray-500 hover:text-gray-700'\"\n            class=\"whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm\"\n          >\n            Synchronisation\n          </button>\n        </nav>\n      </div>\n\n      <!-- Contenu des onglets -->\n      <div v-if=\"isLoading\" class=\"text-center py-8\">\n        <div class=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        <p class=\"mt-2 text-gray-600\">Chargement...</p>\n      </div>\n\n      <!-- Onglet Visualisation Interactive -->\n      <div v-if=\"activeTab === 'visualization'\" class=\"bg-white rounded-lg shadow\">\n        <div class=\"p-6\">\n          <h2 class=\"text-xl font-semibold text-gray-900 mb-4\">Visualisation Interactive du Graphe</h2>\n          <p class=\"text-gray-600 mb-6\">S√©lectionnez une entit√© pour visualiser ses relations dans le graphe</p>\n          \n          <GraphVisualizationSimple \n            :initial-entity=\"selectedEntity\"\n            :initial-item=\"selectedItem\"\n          />\n        </div>\n      </div>\n\n      <!-- Onglet Analyses Pr√©d√©finies -->\n      <div v-if=\"activeTab === 'analytics'\" class=\"bg-white rounded-lg shadow\">\n        <div class=\"p-6\">\n          <h2 class=\"text-xl font-semibold text-gray-900 mb-4\">Analyses Pr√©d√©finies</h2>\n          <p class=\"text-gray-600 mb-6\">Consultez des analyses pr√©d√©finies sur les donn√©es de votre plateforme</p>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <!-- M√©triques Globales -->\n            <div class=\"bg-gray-50 rounded-lg p-4\">\n              <h3 class=\"font-semibold text-gray-900 mb-2\">üìà M√©triques Globales</h3>\n              <div v-if=\"globalMetrics\" class=\"space-y-2 mb-3\">\n                <div class=\"flex justify-between text-sm\">\n                  <span>Utilisateurs:</span>\n                  <span class=\"font-medium\">{{ globalMetrics.total_users }}</span>\n                </div>\n                <div class=\"flex justify-between text-sm\">\n                  <span>Clubs:</span>\n                  <span class=\"font-medium\">{{ globalMetrics.total_clubs }}</span>\n                </div>\n                <div class=\"flex justify-between text-sm\">\n                  <span>Enseignants:</span>\n                  <span class=\"font-medium\">{{ globalMetrics.total_teachers }}</span>\n                </div>\n                <div class=\"flex justify-between text-sm\">\n                  <span>Contrats:</span>\n                  <span class=\"font-medium\">{{ globalMetrics.total_contracts }}</span>\n                </div>\n              </div>\n              <button \n                @click=\"loadGlobalMetrics\"\n                class=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700\"\n              >\n                üîÑ Actualiser\n              </button>\n            </div>\n\n            <!-- Relations Utilisateurs-Clubs -->\n            <div class=\"bg-gray-50 rounded-lg p-4\">\n              <h3 class=\"font-semibold text-gray-900 mb-2\">üë• Relations Utilisateurs-Clubs</h3>\n              <div v-if=\"userClubRelations.length > 0\" class=\"space-y-2 max-h-32 overflow-y-auto mb-3\">\n                <div \n                  v-for=\"relation in userClubRelations.slice(0, 3)\" \n                  :key=\"relation.club_name\"\n                  class=\"text-sm\"\n                >\n                  <div class=\"font-medium\">{{ relation.club_name }}</div>\n                  <div class=\"text-gray-600\">{{ relation.member_count }} membres</div>\n                </div>\n              </div>\n              <button \n                @click=\"loadUserClubRelations\"\n                class=\"w-full px-4 py-2 bg-green-600 text-white rounded-lg font-medium hover:bg-green-700\"\n              >\n                üìà Analyser\n              </button>\n            </div>\n\n            <!-- Enseignants par Sp√©cialit√© -->\n            <div class=\"bg-gray-50 rounded-lg p-4\">\n              <h3 class=\"font-semibold text-gray-900 mb-2\">üéØ Enseignants par Sp√©cialit√©</h3>\n              <div v-if=\"teachersBySpecialty.length > 0\" class=\"space-y-2 max-h-32 overflow-y-auto mb-3\">\n                <div \n                  v-for=\"specialty in teachersBySpecialty.slice(0, 3)\" \n                  :key=\"specialty.specialty\"\n                  class=\"text-sm\"\n                >\n                  <div class=\"font-medium\">{{ specialty.specialty }}</div>\n                  <div class=\"text-gray-600\">{{ specialty.teacher_count }} enseignants</div>\n                </div>\n              </div>\n              <button \n                @click=\"loadTeachersBySpecialty\"\n                class=\"w-full px-4 py-2 bg-purple-600 text-white rounded-lg font-medium hover:bg-purple-700\"\n              >\n                üéØ Analyser\n              </button>\n            </div>\n\n            <!-- R√©partition G√©ographique -->\n            <div class=\"bg-gray-50 rounded-lg p-4\">\n              <h3 class=\"font-semibold text-gray-900 mb-2\">üåç R√©partition G√©ographique</h3>\n              <div v-if=\"geographicDistribution.length > 0\" class=\"space-y-2 max-h-32 overflow-y-auto mb-3\">\n                <div \n                  v-for=\"location in geographicDistribution.slice(0, 3)\" \n                  :key=\"location.club_city\"\n                  class=\"text-sm\"\n                >\n                  <div class=\"font-medium\">{{ location.club_city }}</div>\n                  <div class=\"text-gray-600\">{{ location.clubs_count }} clubs</div>\n                </div>\n              </div>\n              <button \n                @click=\"loadGeographicDistribution\"\n                class=\"w-full px-4 py-2 bg-orange-600 text-white rounded-lg font-medium hover:bg-orange-700\"\n              >\n                üåç Analyser\n              </button>\n            </div>\n\n            <!-- Performance des Clubs -->\n            <div class=\"bg-gray-50 rounded-lg p-4\">\n              <h3 class=\"font-semibold text-gray-900 mb-2\">üèÜ Performance des Clubs</h3>\n              <div v-if=\"clubPerformance.length > 0\" class=\"space-y-2 max-h-32 overflow-y-auto mb-3\">\n                <div \n                  v-for=\"club in clubPerformance.slice(0, 3)\" \n                  :key=\"club.club_name\"\n                  class=\"text-sm\"\n                >\n                  <div class=\"font-medium\">{{ club.club_name }}</div>\n                  <div class=\"text-gray-600\">{{ club.members_count }} membres, {{ club.teachers_count }} enseignants</div>\n                </div>\n              </div>\n              <button \n                @click=\"loadClubPerformance\"\n                class=\"w-full px-4 py-2 bg-red-600 text-white rounded-lg font-medium hover:bg-red-700\"\n              >\n                üèÜ Analyser\n              </button>\n            </div>\n\n            <!-- Sp√©cialit√©s Populaires -->\n            <div class=\"bg-gray-50 rounded-lg p-4\">\n              <h3 class=\"font-semibold text-gray-900 mb-2\">üî• Sp√©cialit√©s Populaires</h3>\n              <div v-if=\"mostDemandedSpecialties.length > 0\" class=\"space-y-2 max-h-32 overflow-y-auto mb-3\">\n                <div \n                  v-for=\"specialty in mostDemandedSpecialties.slice(0, 3)\" \n                  :key=\"specialty.specialty\"\n                  class=\"text-sm\"\n                >\n                  <div class=\"font-medium\">{{ specialty.specialty }}</div>\n                  <div class=\"text-gray-600\">{{ specialty.contracts_count }} contrats</div>\n                </div>\n              </div>\n              <button \n                @click=\"loadMostDemandedSpecialties\"\n                class=\"w-full px-4 py-2 bg-indigo-600 text-white rounded-lg font-medium hover:bg-indigo-700\"\n              >\n                üî• Analyser\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Onglet Synchronisation -->\n      <div v-if=\"activeTab === 'sync'\" class=\"bg-white rounded-lg shadow\">\n        <div class=\"p-6\">\n          <h2 class=\"text-xl font-semibold text-gray-900 mb-4\">Synchronisation Neo4j</h2>\n          <p class=\"text-gray-600 mb-6\">G√©rez la synchronisation des donn√©es MySQL vers Neo4j</p>\n          \n          <!-- Statut de synchronisation -->\n          <div v-if=\"syncStats\" class=\"mb-6\">\n            <h3 class=\"font-medium text-gray-900 mb-3\">Statut de synchronisation</h3>\n            <div class=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div \n                v-for=\"(status, entity) in syncStats.sync_status\" \n                :key=\"entity\"\n                class=\"text-center p-3 rounded-lg\"\n                :class=\"status.synced ? 'bg-green-50' : 'bg-red-50'\"\n              >\n                <div class=\"font-medium capitalize\">{{ entity }}</div>\n                <div class=\"text-sm text-gray-600\">\n                  {{ status.neo4j_count }} / {{ status.mysql_count }}\n                </div>\n                <div class=\"text-xs\" :class=\"status.synced ? 'text-green-600' : 'text-red-600'\">\n                  {{ status.percentage }}%\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Actions de synchronisation -->\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n            <button \n              @click=\"syncAll\"\n              :disabled=\"isSyncing\"\n              class=\"px-4 py-2 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 disabled:bg-gray-400\"\n            >\n              {{ isSyncing ? '‚è≥ Synchronisation...' : 'üîÑ Synchronisation compl√®te' }}\n            </button>\n            \n            <button \n              @click=\"loadSyncStats\"\n              class=\"px-4 py-2 bg-gray-600 text-white rounded-lg font-medium hover:bg-gray-700\"\n            >\n              üìä Actualiser le statut\n            </button>\n          </div>\n\n          <!-- Logs de synchronisation -->\n          <div v-if=\"syncLogs.length > 0\">\n            <h3 class=\"font-medium text-gray-900 mb-3\">Logs de synchronisation</h3>\n            <div class=\"bg-gray-50 p-4 rounded-lg max-h-64 overflow-y-auto\">\n              <div \n                v-for=\"log in syncLogs\" \n                :key=\"log.id\"\n                class=\"text-sm font-mono\"\n                :class=\"log.type === 'error' ? 'text-red-600' : 'text-gray-700'\"\n              >\n                [{{ log.timestamp }}] {{ log.message }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport GraphVisualizationSimple from '~/components/GraphVisualizationSimple.vue'\n\n// Configuration de la page\ndefinePageMeta({\n  layout: 'admin',\n  middleware: 'admin'\n})\n\n// √âtat r√©actif\nconst activeTab = ref('visualization')\nconst isLoading = ref(false)\nconst isSyncing = ref(false)\n\n// Donn√©es\nconst globalMetrics = ref(null)\nconst userClubRelations = ref([])\nconst teachersBySpecialty = ref([])\nconst geographicDistribution = ref([])\nconst clubPerformance = ref([])\nconst mostDemandedSpecialties = ref([])\nconst syncStats = ref(null)\nconst syncLogs = ref([])\n\n// Configuration des onglets\nconst tabs = [\n  { id: 'visualization', label: 'üîó Visualisation Interactive' },\n  { id: 'analytics', label: 'üìä Analyses Pr√©d√©finies' },\n  { id: 'sync', label: 'üîÑ Synchronisation' }\n]\n\n// Charger les m√©triques globales\nconst loadGlobalMetrics = async () => {\n  try {\n    isLoading.value = true\n    const response = await $fetch('/api/neo4j/metrics')\n    if (response.success) {\n      globalMetrics.value = response.data\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement des m√©triques:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Charger les relations utilisateurs-clubs\nconst loadUserClubRelations = async () => {\n  try {\n    isLoading.value = true\n    const response = await $fetch('/api/neo4j/user-club-relations')\n    if (response.success) {\n      userClubRelations.value = response.data\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement des relations:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Charger les enseignants par sp√©cialit√©\nconst loadTeachersBySpecialty = async () => {\n  try {\n    isLoading.value = true\n    const response = await $fetch('/api/neo4j/teachers-by-specialty')\n    if (response.success) {\n      teachersBySpecialty.value = response.data\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement des sp√©cialit√©s:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Charger la r√©partition g√©ographique\nconst loadGeographicDistribution = async () => {\n  try {\n    isLoading.value = true\n    const response = await $fetch('/api/neo4j/geographic-distribution')\n    if (response.success) {\n      geographicDistribution.value = response.data\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement de la r√©partition:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Charger la performance des clubs\nconst loadClubPerformance = async () => {\n  try {\n    isLoading.value = true\n    const response = await $fetch('/api/neo4j/club-performance')\n    if (response.success) {\n      clubPerformance.value = response.data\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement de la performance:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Charger les sp√©cialit√©s les plus demand√©es\nconst loadMostDemandedSpecialties = async () => {\n  try {\n    isLoading.value = true\n    const response = await $fetch('/api/neo4j/most-demanded-specialties')\n    if (response.success) {\n      mostDemandedSpecialties.value = response.data\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement des sp√©cialit√©s:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Charger les statistiques de synchronisation\nconst loadSyncStats = async () => {\n  try {\n    const response = await $fetch('/api/neo4j/sync-stats')\n    if (response.success) {\n      syncStats.value = response.data\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement des stats:', error)\n  }\n}\n\n// Synchronisation compl√®te\nconst syncAll = async () => {\n  try {\n    isSyncing.value = true\n    syncLogs.value = []\n    \n    // Simuler la synchronisation (en r√©alit√©, ce serait un appel √† une commande Artisan)\n    syncLogs.value.push({\n      id: Date.now(),\n      timestamp: new Date().toLocaleTimeString(),\n      message: 'D√©but de la synchronisation...',\n      type: 'info'\n    })\n    \n    // Ici, vous pourriez appeler une API qui lance la commande Artisan\n    // await $fetch('/api/neo4j/sync', { method: 'POST' })\n    \n    syncLogs.value.push({\n      id: Date.now() + 1,\n      timestamp: new Date().toLocaleTimeString(),\n      message: 'Synchronisation termin√©e avec succ√®s',\n      type: 'success'\n    })\n    \n    // Recharger les statistiques\n    await loadSyncStats()\n    \n  } catch (error) {\n    syncLogs.value.push({\n      id: Date.now(),\n      timestamp: new Date().toLocaleTimeString(),\n      message: `Erreur: ${error.message}`,\n      type: 'error'\n    })\n  } finally {\n    isSyncing.value = false\n  }\n}\n\n// Initialisation\nonMounted(() => {\n  loadGlobalMetrics()\n  loadSyncStats()\n})\n</script>\n\n<style scoped>\n/* Styles sp√©cifiques √† la page d'analyse graphique */\n</style>\n"],"names":["_ssrRenderAttrs","_mergeProps","_ssrIncludeBooleanAttr","_ssrRenderList","_ssrInterpolate","_ssrRenderAttr","_ssrLooseContain","_ssrLooseEqual","selectedEntity","selectedItem","_ssrRenderClass"],"mappings":"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"}