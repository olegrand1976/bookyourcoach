{"file":"settings-HYM4LFhB.js","mappings":";;;;;;;;;;;;;;;;;;AAyFA,YAAQ;AAAA,MACJ,OAAO;AAAA,IAAA,CACV;AAGD,UAAM,UAAU,IAAI,KAAK;AACzB,UAAM,WAAW,IAAI;AAAA,MACjB,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,UAAU;AAAA,MACV,iBAAiB;AAAA,MACjB,UAAU;AAAA,IAAA,CACb;AAED,UAAM,QAAQ,IAAI;AAAA,MACd,OAAO;AAAA,MACP,UAAU;AAAA,MACV,UAAU;AAAA,IAAA,CACb;;mBA3GQA,eAAAC,WAAA,EAAA,OAAM,0BAAA,GAAyB,MAAA,CAAA,2cAYIC,cAAA,SAAAC,MAAA,QAAA,EAAS,aAAa,mHAItBD,cAAA,SAAAC,MAAA,QAAA,EAAS,aAAa,oIAItBD,cAAA,SAAAC,MAAA,QAAA,EAAS,aAAa,wGAItBD,cAAA,SAAAC,MAAA,QAAA,EAAS,QAAQ,sKAIdC,eAAAD,MAAA,QAAA,EAAS,eAAe,qPAUvBD,cAAA,SAAAC,MAAA,QAAA,EAAS,QAAQ;AAM1B,UAAAA,MAAA,QAAA,EAAS,UAAQ;sLAGd,OAAKA,MAAA,QAAA,EAAS,QAAQ,CAAA,yDAAA;AAAA;;;6HAOaA,MAAA,OAAA,CAAO,IAAA,cAAA,qBACrDA,MAAA,OAAA,IAAO,kBAAA,aAAA,oRAWmCC,eAAAD,MAAA,KAAA,EAAM,SAAK,CAAA,+JAIVC,eAAAD,MAAA,KAAA,EAAM,YAAQ,CAAA,0JAIbC,eAAAD,MAAA,KAAA,EAAM,YAAQ,CAAA;;;;;;;;;;","names":["_ssrRenderAttrs","_mergeProps","_ssrRenderAttr","_unref","_ssrInterpolate"],"sources":["../../../../pages/admin/settings.vue"],"sourcesContent":["<template>\n    <div class=\"min-h-screen bg-gray-50\">\n        <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n            <h1 class=\"text-3xl font-bold text-gray-900 mb-2\">Paramètres Système</h1>\n            <p class=\"mb-6 text-gray-600\">Configuration générale de la plateforme</p>\n\n            <!-- Paramètres généraux -->\n            <div class=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n                <h2 class=\"text-xl font-semibold mb-4\">Paramètres généraux</h2>\n                <form @submit.prevent=\"saveGeneralSettings\">\n                    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div>\n                            <label class=\"block text-gray-700 mb-1\">Nom de la plateforme</label>\n                            <input v-model=\"settings.platform_name\" class=\"input-field\" required />\n                        </div>\n                        <div>\n                            <label class=\"block text-gray-700 mb-1\">Email de contact</label>\n                            <input v-model=\"settings.contact_email\" class=\"input-field\" required type=\"email\" />\n                        </div>\n                        <div>\n                            <label class=\"block text-gray-700 mb-1\">Téléphone de contact</label>\n                            <input v-model=\"settings.contact_phone\" class=\"input-field\" />\n                        </div>\n                        <div>\n                            <label class=\"block text-gray-700 mb-1\">Fuseau horaire</label>\n                            <input v-model=\"settings.timezone\" class=\"input-field\" />\n                        </div>\n                        <div class=\"md:col-span-2\">\n                            <label class=\"block text-gray-700 mb-1\">Adresse de la société</label>\n                            <textarea v-model=\"settings.company_address\" class=\"input-field\" rows=\"3\"></textarea>\n                        </div>\n                    </div>\n\n                    <!-- Gestion du logo -->\n                    <div class=\"mt-6 border-t pt-6\">\n                        <h3 class=\"text-lg font-semibold mb-4\">Logo de la plateforme</h3>\n                        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                            <div>\n                                <label class=\"block text-gray-700 mb-1\">URL du logo</label>\n                                <input v-model=\"settings.logo_url\" class=\"input-field\" placeholder=\"https://...\" />\n                                <div class=\"mt-2\">\n                                    <label class=\"block text-gray-700 mb-1\">Uploader un logo</label>\n                                    <input type=\"file\" accept=\"image/*\" @change=\"onLogoUpload\" class=\"input-field\" />\n                                </div>\n                            </div>\n                            <div v-if=\"settings.logo_url\" class=\"flex flex-col items-center\">\n                                <span class=\"text-sm text-gray-600 mb-2\">Aperçu actuel</span>\n                                <div class=\"border rounded-lg p-4 bg-gray-50\">\n                                    <img :src=\"settings.logo_url\" alt=\"Logo\" class=\"h-16 w-auto max-w-full\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"mt-6 flex justify-end\">\n                        <button type=\"submit\" class=\"btn-primary\" :disabled=\"loading\">\n                            {{ loading ? 'Sauvegarde...' : 'Sauvegarder' }}\n                        </button>\n                    </div>\n                </form>\n            </div>\n\n            <!-- Statistiques système -->\n            <div class=\"bg-white rounded-lg shadow-lg p-6\">\n                <h2 class=\"text-xl font-semibold mb-4\">Informations système</h2>\n                <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div class=\"bg-blue-50 p-4 rounded\">\n                        <div class=\"text-2xl font-bold text-blue-600\">{{ stats.users || 0 }}</div>\n                        <div class=\"text-sm text-gray-600\">Utilisateurs total</div>\n                    </div>\n                    <div class=\"bg-green-50 p-4 rounded\">\n                        <div class=\"text-2xl font-bold text-green-600\">{{ stats.teachers || 0 }}</div>\n                        <div class=\"text-sm text-gray-600\">Enseignants</div>\n                    </div>\n                    <div class=\"bg-orange-50 p-4 rounded\">\n                        <div class=\"text-2xl font-bold text-orange-600\">{{ stats.students || 0 }}</div>\n                        <div class=\"text-sm text-gray-600\">Étudiants</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\ndefinePageMeta({\n    middleware: 'auth-admin'\n})\n\nuseHead({\n    title: 'Paramètres Système'\n})\n\n// État\nconst loading = ref(false)\nconst settings = ref({\n    platform_name: 'BookYourCoach',\n    contact_email: 'contact@bookyourcoach.fr',\n    contact_phone: '+33 1 23 45 67 89',\n    timezone: 'Europe/Brussels',\n    company_address: 'BookYourCoach\\nBelgique',\n    logo_url: '/logo.svg'\n})\n\nconst stats = ref({\n    users: 0,\n    teachers: 0,\n    students: 0\n})\n\n// Charger les paramètres\nconst loadSettings = async () => {\n    try {\n        const { $api } = useNuxtApp()\n        const response = await $api.get('/admin/settings')\n        if (response.data && response.data.settings) {\n            Object.assign(settings.value, response.data.settings)\n        }\n    } catch (error) {\n        console.error('Erreur lors du chargement des paramètres:', error)\n    }\n}\n\n// Charger les statistiques\nconst loadStats = async () => {\n    try {\n        const { $api } = useNuxtApp()\n        const response = await $api.get('/admin/stats')\n        if (response.data) {\n            stats.value = response.data\n        }\n    } catch (error) {\n        console.error('Erreur lors du chargement des statistiques:', error)\n    }\n}\n\n// Sauvegarder les paramètres généraux\nconst saveGeneralSettings = async () => {\n    loading.value = true\n    try {\n        const { $api } = useNuxtApp()\n        await $api.post('/admin/settings', {\n            type: 'general',\n            settings: settings.value\n        })\n\n        // Notification de succès (si vous avez un système de toast)\n        console.log('Paramètres sauvegardés avec succès')\n    } catch (error) {\n        console.error('Erreur lors de la sauvegarde:', error)\n    } finally {\n        loading.value = false\n    }\n}\n\n// Upload du logo\nconst onLogoUpload = async (event: Event) => {\n    const target = event.target as HTMLInputElement\n    const files = target.files\n    if (!files || files.length === 0) return\n\n    const file = files[0]\n    const formData = new FormData()\n    formData.append('logo', file)\n\n    try {\n        loading.value = true\n        const { $api } = useNuxtApp()\n        const response = await $api.post('/admin/upload-logo', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n\n        if (response.data && response.data.url) {\n            settings.value.logo_url = response.data.url\n            console.log('Logo uploadé avec succès')\n        }\n    } catch (error) {\n        console.error('Erreur lors de l\\'upload du logo:', error)\n    } finally {\n        loading.value = false\n    }\n}\n\n// Charger les données au montage\nonMounted(() => {\n    loadSettings()\n    loadStats()\n})\n</script>"],"version":3}