{"version":3,"file":"qr-code-HcbtHKdT.js","sources":["../../../../pages/teacher/qr-code.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <!-- Header -->\n      <div class=\"mb-8\">\n        <h1 class=\"text-3xl font-bold text-gray-900\">Mon QR Code</h1>\n        <p class=\"mt-2 text-gray-600\">\n          Présentez ce QR code aux clubs pour vous ajouter rapidement\n        </p>\n      </div>\n\n      <!-- QR Code Card -->\n      <div class=\"bg-white rounded-xl shadow-lg overflow-hidden\">\n        <div class=\"px-6 py-4 border-b border-gray-200 bg-gradient-to-r from-blue-50 to-indigo-50\">\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex items-center space-x-3\">\n              <div class=\"bg-blue-100 p-2 rounded-lg\">\n                <svg class=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\"></path>\n                </svg>\n              </div>\n              <div>\n                <h3 class=\"text-lg font-semibold text-gray-900\">Code QR Personnel</h3>\n                <p class=\"text-sm text-gray-600\">{{ user?.name }} - {{ user?.email }}</p>\n              </div>\n            </div>\n            <button \n              @click=\"generateNewQrCode\"\n              :disabled=\"loading\"\n              class=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 transition-colors text-sm font-medium\"\n            >\n              {{ loading ? 'Génération...' : 'Régénérer' }}\n            </button>\n          </div>\n        </div>\n        \n        <div class=\"p-8\">\n          <div v-if=\"qrData\" class=\"text-center\">\n            <!-- QR Code SVG -->\n            <div class=\"inline-block p-4 bg-white border-2 border-gray-200 rounded-lg shadow-sm\">\n              <div v-html=\"qrData.qr_svg\" class=\"mx-auto\"></div>\n            </div>\n            \n            <!-- Informations -->\n            <div class=\"mt-6 space-y-2\">\n              <p class=\"text-sm text-gray-600\">Code QR:</p>\n              <p class=\"font-mono text-sm bg-gray-100 px-3 py-2 rounded-lg inline-block\">{{ qrData.qr_code }}</p>\n            </div>\n            \n            <div class=\"mt-4 text-xs text-gray-500\">\n              Généré le {{ formatDate(qrData.generated_at) }}\n            </div>\n          </div>\n          \n          <div v-else class=\"text-center py-12\">\n            <svg class=\"mx-auto h-12 w-12 text-gray-400 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\"></path>\n            </svg>\n            <p class=\"text-gray-500\">Chargement du QR code...</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Instructions -->\n      <div class=\"mt-8 bg-blue-50 rounded-xl p-6\">\n        <div class=\"flex items-start space-x-3\">\n          <div class=\"bg-blue-100 p-2 rounded-lg\">\n            <svg class=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n          </div>\n          <div>\n            <h4 class=\"text-lg font-semibold text-gray-900 mb-2\">Comment utiliser votre QR code</h4>\n            <div class=\"space-y-2 text-sm text-gray-700\">\n              <p>1. <strong>Présentez votre QR code</strong> aux clubs qui souhaitent vous ajouter</p>\n              <p>2. <strong>Ils peuvent le scanner</strong> avec leur application ou saisir le code manuellement</p>\n              <p>3. <strong>Vous serez ajouté</strong> automatiquement à leur liste d'enseignants</p>\n              <p>4. <strong>Vous pourrez enseigner</strong> dans plusieurs clubs simultanément</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Clubs actuels -->\n      <div v-if=\"userClubs.length > 0\" class=\"mt-8 bg-white rounded-xl shadow-lg overflow-hidden\">\n        <div class=\"px-6 py-4 border-b border-gray-200 bg-gradient-to-r from-emerald-50 to-teal-50\">\n          <h3 class=\"text-lg font-semibold text-gray-900\">Clubs où vous enseignez</h3>\n        </div>\n        <div class=\"p-6\">\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div \n              v-for=\"club in userClubs\" \n              :key=\"club.id\" \n              class=\"border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors\"\n            >\n              <div class=\"flex items-center justify-between\">\n                <div>\n                  <h4 class=\"font-medium text-gray-900\">{{ club.name }}</h4>\n                  <p class=\"text-sm text-gray-600\">{{ club.email }}</p>\n                  <p class=\"text-xs text-emerald-600\">Membre depuis {{ formatDate(club.pivot.joined_at) }}</p>\n                </div>\n                <span class=\"px-2 py-1 text-xs font-medium bg-emerald-100 text-emerald-800 rounded-full\">\n                  Actif\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\n\ndefinePageMeta({\n  middleware: ['auth']\n})\n\nconst user = ref(null)\nconst qrData = ref(null)\nconst userClubs = ref([])\nconst loading = ref(false)\n\n// Charger les données utilisateur et QR code\nconst loadUserData = async () => {\n  try {\n    const config = useRuntimeConfig()\n    const tokenCookie = useCookie('auth-token')\n    \n    // Charger les données utilisateur\n    const userResponse = await $fetch(`${config.public.apiBase}/auth/user`)\n    user.value = userResponse.user\n    \n    // Charger le QR code\n    if (user.value) {\n      const qrResponse = await $fetch(`${config.public.apiBase}/qr-code/${user.value.id}`)\n      if (qrResponse.success) {\n        qrData.value = qrResponse.data\n      }\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement des données:', error)\n  }\n}\n\n// Charger les clubs de l'utilisateur\nconst loadUserClubs = async () => {\n  try {\n    const config = useRuntimeConfig()\n    const tokenCookie = useCookie('auth-token')\n    \n    // Pour les enseignants, charger les clubs où ils enseignent\n    if (user.value?.role === 'teacher') {\n      const response = await $fetch(`${config.public.apiBase}/teacher/clubs`)\n      if (response.success) {\n        userClubs.value = response.data\n      }\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement des clubs:', error)\n  }\n}\n\n// Générer un nouveau QR code\nconst generateNewQrCode = async () => {\n  loading.value = true\n  try {\n    const config = useRuntimeConfig()\n    const tokenCookie = useCookie('auth-token')\n    \n    const response = await $fetch(`${config.public.apiBase}/qr-code/${user.value.id}`)\n    if (response.success) {\n      qrData.value = response.data\n      \n      const { showToast } = useToast()\n      showToast('Nouveau QR code généré !', 'success')\n    }\n  } catch (error) {\n    console.error('Erreur lors de la génération du QR code:', error)\n    \n    const { showToast } = useToast()\n    showToast('Erreur lors de la génération du QR code', 'error')\n  } finally {\n    loading.value = false\n  }\n}\n\n// Formater une date\nconst formatDate = (dateString) => {\n  const date = new Date(dateString)\n  return date.toLocaleDateString('fr-FR', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  })\n}\n\nonMounted(() => {\n  loadUserData()\n  loadUserClubs()\n})\n</script>\n"],"names":["_ssrRenderAttrs","_mergeProps","_ssrInterpolate","_ssrRenderList"],"mappings":";;;;;;;;AAwHA,UAAM,OAAO,IAAI,IAAI;AACrB,UAAM,SAAS,IAAI,IAAI;AACvB,UAAM,YAAY,IAAI,CAAA,CAAE;AACxB,UAAM,UAAU,IAAI,KAAK;AAmEzB,UAAM,aAAa,CAAC,eAAe;AACjC,YAAM,OAAO,IAAI,KAAK,UAAU;AAChC,aAAO,KAAK,mBAAmB,SAAS;AAAA,QACtC,KAAK;AAAA,QACL,OAAO;AAAA,QACP,MAAM;AAAA,MACV,CAAG;AAAA,IACH;;;mBApMOA,eAAAC,WAAA,EAAA,OAAM,0BAAyB,GAAA,MAAA,CAAA,sjCAsBcC,gBAAA,UAAA,UAAA,mBAAM,IAAI,OAASA,gBAAA,UAAA,UAAA,mBAAM,KAAK,iDAKzD,QAAA,KAAO,IAAA,cAAA,qJAGf,QAAA,QAAO,kBAAA,WAAA;UAMH,OAAA,OAAM;oJAGA,OAAA,MAAO,UAAM,qKAMoDA,eAAA,OAAA,MAAO,OAAO,gFAI/E,WAAW,OAAA,MAAO,YAAY,CAAA;;;;;AAkCxC,UAAA,UAAA,MAAU,SAAM,GAAA;;AAOJC,sBAAA,UAAA,QAAR,SAAI;mMAMkCD,eAAA,KAAK,IAAI,0CACdA,eAAA,KAAK,KAAK,0DACOA,eAAA,WAAW,KAAK,MAAM,SAAS,CAAA;;;;;;;;;;;;;;;;"}