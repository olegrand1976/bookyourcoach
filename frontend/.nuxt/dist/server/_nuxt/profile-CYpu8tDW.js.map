{"version":3,"file":"profile-CYpu8tDW.js","sources":["../../../../components/AddCustomSpecialtyForm.vue","../../../../components/EditCustomSpecialtyForm.vue","../../../../pages/club/profile.vue"],"sourcesContent":["<template>\n  <div class=\"bg-white rounded-2xl shadow-lg border border-gray-200 w-full mt-4\">\n    <!-- Header -->\n    <div class=\"bg-gradient-to-r from-purple-500 to-pink-600 px-6 py-4 rounded-t-xl\">\n      <div class=\"flex items-center justify-between\">\n        <div class=\"flex items-center space-x-3\">\n          <div class=\"bg-white bg-opacity-20 p-2 rounded-lg\">\n            <svg class=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"></path>\n            </svg>\n          </div>\n          <div>\n            <h3 class=\"text-xl font-bold text-white\">Ajouter une spécialité personnalisée</h3>\n            <p class=\"text-purple-100 text-sm\">Créez une spécialité unique pour votre club</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Contenu -->\n    <form @submit.prevent=\"addCustomSpecialty\" class=\"p-6 space-y-8\">\n      \n      <!-- Section Informations de base -->\n      <div class=\"bg-gray-50 rounded-xl p-6\">\n        <div class=\"flex items-center mb-4\">\n          <div class=\"bg-purple-100 p-2 rounded-lg mr-3\">\n            <svg class=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n          </div>\n          <h4 class=\"text-lg font-semibold text-gray-900\">Informations de base</h4>\n        </div>\n        \n        <div class=\"space-y-6\">\n          <!-- Activity Selection -->\n          <div class=\"space-y-2\">\n            <label class=\"block text-sm font-medium text-gray-700\">\n              Activité <span class=\"text-red-500\">*</span>\n            </label>\n            <select\n              v-model=\"form.activity_id\"\n              required\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-colors\"\n            >\n              <option value=\"\">Sélectionnez une activité</option>\n              <option \n                v-for=\"activity in availableActivities\" \n                :key=\"activity.id\" \n                :value=\"activity.id\"\n              >\n                {{ activity.icon }} {{ activity.name }}\n              </option>\n            </select>\n          </div>\n\n          <!-- Specialty Name -->\n          <div class=\"space-y-2\">\n            <label class=\"block text-sm font-medium text-gray-700\">\n              Nom de la spécialité <span class=\"text-red-500\">*</span>\n            </label>\n            <input\n              v-model=\"form.name\"\n              type=\"text\"\n              required\n              placeholder=\"Ex: Cours particuliers, Initiation poney...\"\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-colors\"\n            />\n          </div>\n\n          <!-- Description -->\n          <div class=\"space-y-2\">\n            <label class=\"block text-sm font-medium text-gray-700\">\n              Description\n            </label>\n            <textarea\n              v-model=\"form.description\"\n              rows=\"3\"\n              placeholder=\"Décrivez cette spécialité...\"\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-colors resize-none\"\n            ></textarea>\n          </div>\n        </div>\n      </div>\n\n      <!-- Section Configuration -->\n      <div class=\"bg-gray-50 rounded-xl p-6\">\n        <div class=\"flex items-center mb-4\">\n          <div class=\"bg-pink-100 p-2 rounded-lg mr-3\">\n            <svg class=\"w-5 h-5 text-pink-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n          </div>\n          <h4 class=\"text-lg font-semibold text-gray-900\">Configuration</h4>\n        </div>\n        \n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <!-- Duration -->\n          <div class=\"space-y-2\">\n            <label class=\"block text-sm font-medium text-gray-700\">\n              Durée (minutes)\n            </label>\n            <input\n              v-model.number=\"form.duration_minutes\"\n              type=\"number\"\n              min=\"15\"\n              max=\"180\"\n              step=\"15\"\n              placeholder=\"60\"\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-colors\"\n            />\n          </div>\n          \n          <!-- Price -->\n          <div class=\"space-y-2\">\n            <label class=\"block text-sm font-medium text-gray-700\">\n              Prix de base (€)\n            </label>\n            <input\n              v-model.number=\"form.base_price\"\n              type=\"number\"\n              min=\"0\"\n              step=\"0.01\"\n              placeholder=\"25.00\"\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-colors\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <!-- Section Niveaux et Participants -->\n      <div class=\"bg-gray-50 rounded-xl p-6\">\n        <div class=\"flex items-center mb-4\">\n          <div class=\"bg-blue-100 p-2 rounded-lg mr-3\">\n            <svg class=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path>\n            </svg>\n          </div>\n          <h4 class=\"text-lg font-semibold text-gray-900\">Niveaux et Participants</h4>\n        </div>\n        \n        <div class=\"space-y-6\">\n          <!-- Skill Levels -->\n          <div class=\"space-y-3\">\n            <label class=\"block text-sm font-medium text-gray-700\">\n              Niveaux proposés\n            </label>\n            <div class=\"grid grid-cols-2 gap-3\">\n              <label v-for=\"level in skillLevels\" :key=\"level.value\" class=\"flex items-center p-3 bg-white border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors\">\n                <input\n                  v-model=\"form.skill_levels\"\n                  :value=\"level.value\"\n                  type=\"checkbox\"\n                  class=\"h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300 rounded mr-3\"\n                />\n                <span class=\"text-sm text-gray-700\">{{ level.label }}</span>\n              </label>\n            </div>\n          </div>\n\n          <!-- Participants -->\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div class=\"space-y-2\">\n              <label class=\"block text-sm font-medium text-gray-700\">\n                Participants minimum\n              </label>\n              <input\n                v-model.number=\"form.min_participants\"\n                type=\"number\"\n                min=\"1\"\n                placeholder=\"1\"\n                class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-colors\"\n              />\n            </div>\n            \n            <div class=\"space-y-2\">\n              <label class=\"block text-sm font-medium text-gray-700\">\n                Participants maximum\n              </label>\n              <input\n                v-model.number=\"form.max_participants\"\n                type=\"number\"\n                min=\"1\"\n                placeholder=\"8\"\n                class=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-colors\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Section Équipement -->\n      <div class=\"bg-gray-50 rounded-xl p-6\">\n        <div class=\"flex items-center mb-4\">\n          <div class=\"bg-green-100 p-2 rounded-lg mr-3\">\n            <svg class=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n          </div>\n          <h4 class=\"text-lg font-semibold text-gray-900\">Équipement requis</h4>\n        </div>\n        \n        <div class=\"space-y-3\">\n          <div v-for=\"(equipment, index) in form.equipment_required\" :key=\"index\" class=\"flex items-center space-x-3\">\n            <input\n              v-model=\"form.equipment_required[index]\"\n              type=\"text\"\n              placeholder=\"Ex: Casque, Bottes...\"\n              class=\"flex-1 px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-colors\"\n            />\n            <button\n              type=\"button\"\n              @click=\"removeEquipment(index)\"\n              :disabled=\"form.equipment_required.length <= 1\"\n              class=\"p-3 text-red-500 hover:text-red-700 hover:bg-red-50 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          <button\n            type=\"button\"\n            @click=\"addEquipment\"\n            class=\"flex items-center px-4 py-2 text-purple-600 hover:text-purple-800 hover:bg-purple-50 rounded-lg transition-colors text-sm\"\n          >\n            <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n            </svg>\n            Ajouter un équipement\n          </button>\n        </div>\n      </div>\n\n      <!-- Footer avec boutons -->\n      <div class=\"bg-gray-50 px-6 py-4 border-t border-gray-200 rounded-b-xl\">\n        <div class=\"flex items-center justify-end space-x-4\">\n          <button\n            type=\"button\"\n            @click=\"$emit('cancel')\"\n            :disabled=\"isSaving\"\n            class=\"px-6 py-3 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-purple-500 transition-colors disabled:opacity-50\"\n          >\n            Annuler\n          </button>\n          <button\n            type=\"submit\"\n            :disabled=\"!isFormValid || isSaving\"\n            :class=\"[\n              'px-8 py-3 rounded-lg font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-purple-500',\n              isFormValid && !isSaving\n                ? 'bg-gradient-to-r from-purple-500 to-pink-600 text-white hover:from-purple-600 hover:to-pink-700'\n                : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n            ]\"\n          >\n            <span v-if=\"isSaving\" class=\"flex items-center space-x-2\">\n              <div class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n              <span>Ajout...</span>\n            </span>\n            <span v-else>Ajouter la spécialité</span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useToast } from '@/composables/useToast'\n\n// Props\nconst props = defineProps({\n  availableActivities: {\n    type: Array,\n    default: () => []\n  }\n})\n\n// Emits\nconst emit = defineEmits(['cancel', 'success'])\n\n// Composables\nconst { showToast } = useToast()\n\n// Reactive data\nconst isSaving = ref(false)\nconst form = ref({})\n\n// Constants\nconst skillLevels = [\n  { value: 'debutant', label: '🌱 Débutant' },\n  { value: 'intermediaire', label: '📈 Intermédiaire' },\n  { value: 'avance', label: '⭐ Avancé' },\n  { value: 'expert', label: '🏆 Expert' }\n]\n\n// Computed\nconst isFormValid = computed(() => {\n  return form.value.activity_id && form.value.name\n})\n\n// Methods\nconst addEquipment = () => {\n  form.value.equipment_required.push('')\n}\n\nconst removeEquipment = (index) => {\n  if (form.value.equipment_required.length > 1) {\n    form.value.equipment_required.splice(index, 1)\n  }\n}\n\nconst addCustomSpecialty = async () => {\n  if (!isFormValid.value) {\n    showToast('Veuillez remplir tous les champs obligatoires', 'error')\n    return\n  }\n\n  isSaving.value = true\n\n  try {\n    const config = useRuntimeConfig()\n    const tokenCookie = useCookie('auth-token')\n    \n    // Clean equipment array (remove empty strings)\n    const cleanEquipment = form.value.equipment_required.filter(item => item.trim() !== '')\n    \n    const response = await $fetch(`${config.public.apiBase}/club/custom-specialty`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${tokenCookie.value}`,\n        'Content-Type': 'application/json'\n      },\n      body: {\n        activity_id: form.value.activity_id,\n        name: form.value.name,\n        description: form.value.description,\n        duration_minutes: form.value.duration_minutes,\n        base_price: form.value.base_price,\n        skill_levels: form.value.skill_levels,\n        min_participants: form.value.min_participants,\n        max_participants: form.value.max_participants,\n        equipment_required: cleanEquipment\n      }\n    })\n\n    showToast('Spécialité ajoutée avec succès !', 'success')\n    emit('success', response.data)\n    \n  } catch (error) {\n    console.error('Erreur lors de l\\'ajout de la spécialité:', error)\n    showToast('Erreur lors de l\\'ajout de la spécialité', 'error')\n  } finally {\n    isSaving.value = false\n  }\n}\n\nconst resetForm = () => {\n  form.value = {\n    activity_id: '',\n    name: '',\n    description: '',\n    duration_minutes: 60,\n    base_price: 0,\n    skill_levels: ['debutant'],\n    min_participants: 1,\n    max_participants: 8,\n    equipment_required: ['']\n  }\n}\n\nonMounted(() => {\n  resetForm()\n})\n</script>\n","<template>\n  <div class=\"bg-white rounded-2xl shadow-lg border border-gray-200 w-full mt-4\">\n    <!-- Header -->\n    <div class=\"bg-gradient-to-r from-blue-500 to-teal-600 px-6 py-4 rounded-t-xl\">\n      <div class=\"flex items-center justify-between\">\n        <div class=\"flex items-center space-x-3\">\n          <div class=\"bg-white bg-opacity-20 p-2 rounded-lg\">\n            <svg class=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path>\n            </svg>\n          </div>\n          <div>\n            <h3 class=\"text-xl font-bold text-white\">Modifier la spécialité</h3>\n            <p class=\"text-blue-100 text-sm\">Mettez à jour les informations ci-dessous</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Contenu -->\n    <form @submit.prevent=\"updateCustomSpecialty\" class=\"p-6 space-y-8\">\n      \n      <!-- Section Informations de base -->\n      <div class=\"bg-gray-50 rounded-xl p-6\">\n        <h4 class=\"text-lg font-semibold text-gray-900 mb-4\">Informations de base</h4>\n        <div class=\"space-y-6\">\n          <!-- Activity Selection (Non-editable for now) -->\n          <div class=\"space-y-2\">\n            <label class=\"block text-sm font-medium text-gray-700\">Activité</label>\n            <p class=\"w-full px-4 py-3 bg-gray-100 border border-gray-300 rounded-lg text-gray-500\">\n              {{ selectedActivityName }}\n            </p>\n          </div>\n\n          <!-- Specialty Name -->\n          <div class=\"space-y-2\">\n            <label class=\"block text-sm font-medium text-gray-700\">\n              Nom de la spécialité <span class=\"text-red-500\">*</span>\n            </label>\n            <input v-model=\"form.name\" type=\"text\" required class=\"w-full px-4 py-3 border border-gray-300 rounded-lg\"/>\n          </div>\n\n          <!-- Description -->\n          <div class=\"space-y-2\">\n            <label class=\"block text-sm font-medium text-gray-700\">Description</label>\n            <textarea v-model=\"form.description\" rows=\"3\" class=\"w-full px-4 py-3 border border-gray-300 rounded-lg\"></textarea>\n          </div>\n        </div>\n      </div>\n\n      <!-- Section Configuration -->\n      <div class=\"bg-gray-50 rounded-xl p-6\">\n        <div class=\"flex items-center mb-4\">\n          <div class=\"bg-pink-100 p-2 rounded-lg mr-3\">\n            <svg class=\"w-5 h-5 text-pink-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n          </div>\n          <h4 class=\"text-lg font-semibold text-gray-900\">Configuration</h4>\n        </div>\n        \n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <!-- Duration -->\n          <div class=\"space-y-2\">\n            <label class=\"block text-sm font-medium text-gray-700\">\n              Durée (minutes)\n            </label>\n            <input\n              v-model.number=\"form.duration_minutes\"\n              type=\"number\"\n              min=\"15\"\n              max=\"180\"\n              step=\"15\"\n              placeholder=\"60\"\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg\"\n            />\n          </div>\n          \n          <!-- Price -->\n          <div class=\"space-y-2\">\n            <label class=\"block text-sm font-medium text-gray-700\">\n              Prix de base (€)\n            </label>\n            <input\n              v-model.number=\"form.base_price\"\n              type=\"number\"\n              min=\"0\"\n              step=\"0.01\"\n              placeholder=\"25.00\"\n              class=\"w-full px-4 py-3 border border-gray-300 rounded-lg\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <!-- Section Niveaux et Participants -->\n      <div class=\"bg-gray-50 rounded-xl p-6\">\n        <div class=\"flex items-center mb-4\">\n          <div class=\"bg-blue-100 p-2 rounded-lg mr-3\">\n            <svg class=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path>\n            </svg>\n          </div>\n          <h4 class=\"text-lg font-semibold text-gray-900\">Niveaux et Participants</h4>\n        </div>\n        \n        <div class=\"space-y-6\">\n          <!-- Skill Levels -->\n          <div class=\"space-y-3\">\n            <label class=\"block text-sm font-medium text-gray-700\">\n              Niveaux proposés\n            </label>\n            <div class=\"grid grid-cols-2 gap-3\">\n              <label v-for=\"level in skillLevels\" :key=\"level.value\" class=\"flex items-center p-3 bg-white border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer\">\n                <input\n                  v-model=\"form.skill_levels\"\n                  :value=\"level.value\"\n                  type=\"checkbox\"\n                  class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 rounded mr-3\"\n                />\n                <span class=\"text-sm text-gray-700\">{{ level.label }}</span>\n              </label>\n            </div>\n          </div>\n\n          <!-- Participants -->\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div class=\"space-y-2\">\n              <label class=\"block text-sm font-medium text-gray-700\">\n                Participants minimum\n              </label>\n              <input\n                v-model.number=\"form.min_participants\"\n                type=\"number\"\n                min=\"1\"\n                placeholder=\"1\"\n                class=\"w-full px-4 py-3 border border-gray-300 rounded-lg\"\n              />\n            </div>\n            \n            <div class=\"space-y-2\">\n              <label class=\"block text-sm font-medium text-gray-700\">\n                Participants maximum\n              </label>\n              <input\n                v-model.number=\"form.max_participants\"\n                type=\"number\"\n                min=\"1\"\n                placeholder=\"8\"\n                class=\"w-full px-4 py-3 border border-gray-300 rounded-lg\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Section Équipement -->\n      <div class=\"bg-gray-50 rounded-xl p-6\">\n        <div class=\"flex items-center mb-4\">\n          <div class=\"bg-green-100 p-2 rounded-lg mr-3\">\n            <svg class=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n          </div>\n          <h4 class=\"text-lg font-semibold text-gray-900\">Équipement requis</h4>\n        </div>\n        \n        <div class=\"space-y-3\">\n          <div v-for=\"(equipment, index) in form.equipment_required\" :key=\"index\" class=\"flex items-center space-x-3\">\n            <input\n              v-model=\"form.equipment_required[index]\"\n              type=\"text\"\n              placeholder=\"Ex: Casque, Bottes...\"\n              class=\"flex-1 px-4 py-3 border border-gray-300 rounded-lg\"\n            />\n            <button\n              type=\"button\"\n              @click=\"removeEquipment(index)\"\n              :disabled=\"form.equipment_required.length <= 1\"\n              class=\"p-3 text-red-500 hover:text-red-700 rounded-lg\"\n            >\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n          <button\n            type=\"button\"\n            @click=\"addEquipment\"\n            class=\"flex items-center px-4 py-2 text-blue-600 hover:text-blue-800\"\n          >\n            <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n            </svg>\n            Ajouter un équipement\n          </button>\n        </div>\n      </div>\n\n      <!-- Footer avec boutons -->\n      <div class=\"bg-gray-50 px-6 py-4 border-t border-gray-200 rounded-b-xl\">\n        <div class=\"flex items-center justify-end space-x-4\">\n          <button type=\"button\" @click=\"$emit('cancel')\" :disabled=\"isSaving\" class=\"px-6 py-3 border border-gray-300 rounded-lg\">\n            Annuler\n          </button>\n          <button type=\"submit\" :disabled=\"!isFormValid || isSaving\" class=\"px-8 py-3 rounded-lg font-medium bg-blue-600 text-white\">\n            <span v-if=\"isSaving\">Mise à jour...</span>\n            <span v-else>Enregistrer les modifications</span>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, watch } from 'vue'\nimport { useToast } from '@/composables/useToast'\nimport _ from 'lodash';\n\n// Props\nconst props = defineProps({\n  specialty: {\n    type: Object,\n    required: true\n  },\n  availableActivities: {\n    type: Array,\n    default: () => []\n  }\n})\n\n// Emits\nconst emit = defineEmits(['cancel', 'success'])\n\n// Composables\nconst { showToast } = useToast()\n\n// Reactive data\nconst isSaving = ref(false)\nconst form = ref({})\n\n// Constants\nconst skillLevels = [\n  { value: 'debutant', label: '🌱 Débutant' },\n  { value: 'intermediaire', label: '📈 Intermédiaire' },\n  { value: 'avance', label: '⭐ Avancé' },\n  { value: 'expert', label: '🏆 Expert' }\n]\n\n// Computed\nconst isFormValid = computed(() => {\n  return form.value.name && form.value.name.trim() !== ''\n})\n\nconst selectedActivityName = computed(() => {\n  const activity = props.availableActivities.find(a => a.id === props.specialty.activity_type_id)\n  return activity ? `${activity.icon} ${activity.name}` : 'Activité inconnue'\n})\n\n\n// Methods\nconst initializeForm = () => {\n  form.value = _.cloneDeep(props.specialty)\n}\n\nconst updateCustomSpecialty = async () => {\n  if (!isFormValid.value) {\n    showToast('Veuillez remplir tous les champs obligatoires', 'error')\n    return\n  }\n  isSaving.value = true\n  try {\n    const config = useRuntimeConfig()\n    const tokenCookie = useCookie('auth-token')\n    \n    const response = await $fetch(`${config.public.apiBase}/club/custom-specialty/${props.specialty.id}`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${tokenCookie.value}`,\n        'Content-Type': 'application/json'\n      },\n      body: form.value\n    })\n\n    showToast('Spécialité mise à jour avec succès !', 'success')\n    emit('success', response.data)\n    \n  } catch (error) {\n    console.error('Erreur lors de la mise à jour de la spécialité:', error)\n    showToast('Erreur lors de la mise à jour de la spécialité', 'error')\n  } finally {\n    isSaving.value = false\n  }\n}\n\n// Watch for prop changes to re-initialize form\nwatch(() => props.specialty, () => {\n  initializeForm()\n}, { immediate: true, deep: true })\n\n</script>\n","<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <div class=\"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\n      <!-- Header -->\n      <div class=\"mb-8\">\n        <h1 class=\"text-3xl font-bold text-gray-900 flex items-center\">\n          <span class=\"text-4xl mr-3\">🏢</span>\n          Profil du Club\n        </h1>\n        <p class=\"mt-2 text-gray-600\">Gérez les informations et activités de votre club</p>\n      </div>\n\n      <!-- Profile Form -->\n      <div class=\"bg-white shadow-lg rounded-lg border border-gray-200\">\n        <form @submit.prevent=\"updateClub\" class=\"space-y-6 p-6\">\n          <!-- Informations générales -->\n          <div class=\"border-b border-gray-200 pb-6\">\n            <h2 class=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <span class=\"text-xl mr-2\">📋</span>\n              Informations générales\n            </h2>\n\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Nom du club</label>\n                <input v-model=\"form.name\" type=\"text\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Nom de votre club\" required />\n              </div>\n\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Email de contact</label>\n                <input v-model=\"form.email\" type=\"email\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"contact@votreclub.com\" required />\n              </div>\n\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Téléphone</label>\n                <input v-model=\"form.phone\" type=\"tel\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"+33 1 23 45 67 89\" />\n              </div>\n\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Site web</label>\n                <input v-model=\"form.website\" type=\"url\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"https://votreclub.com\" />\n              </div>\n            </div>\n\n            <div class=\"mt-6\">\n              <label class=\"block text-sm font-medium text-gray-700 mb-2\">Description</label>\n              <textarea v-model=\"form.description\" rows=\"3\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Décrivez votre club, ses valeurs et ses services...\"></textarea>\n            </div>\n          </div>\n\n          <!-- Adresse -->\n          <div class=\"border-b border-gray-200 pb-6\">\n            <h2 class=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <span class=\"text-xl mr-2\">📍</span>\n              Adresse\n            </h2>\n\n            <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div class=\"md:col-span-2\">\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Adresse</label>\n                <input v-model=\"form.address\" type=\"text\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"123 Rue de l'Équitation\" />\n              </div>\n\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Code postal</label>\n                <input v-model=\"form.postal_code\" type=\"text\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"75001\" />\n              </div>\n\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Ville</label>\n                <input v-model=\"form.city\" type=\"text\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Paris\" />\n              </div>\n\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Pays</label>\n                <input v-model=\"form.country\" type=\"text\" class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"France\" />\n              </div>\n            </div>\n          </div>\n\n          <!-- Activités du club -->\n          <div class=\"border-b border-gray-200 pb-6\">\n            <h2 class=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <span class=\"text-xl mr-2\">🏃‍♀️</span>\n              Activités proposées\n            </h2>\n\n            <div class=\"mb-4\">\n              <p class=\"text-sm text-gray-600 mb-4\">Sélectionnez les activités que votre club propose :</p>\n              \n              <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div v-for=\"activity in availableActivities\" :key=\"activity.id\" \n                     class=\"flex items-center p-4 border rounded-lg hover:bg-gray-50 transition-colors\"\n                     :class=\"selectedActivities.includes(activity.id) ? 'border-blue-500 bg-blue-50' : 'border-gray-200'\">\n                  <input :id=\"'activity-' + activity.id\" \n                         v-model=\"selectedActivities\" \n                         :value=\"activity.id\" \n                         type=\"checkbox\" \n                         class=\"h-4 w-4 text-blue-500 focus:ring-blue-500 border-gray-300 rounded\">\n                  <label :for=\"'activity-' + activity.id\" class=\"ml-3 flex items-center cursor-pointer\">\n                    <span class=\"text-2xl mr-2\">{{ activity.icon }}</span>\n                    <div>\n                      <div class=\"font-medium text-gray-900\">{{ activity.name }}</div>\n                      <div class=\"text-sm text-gray-500\">{{ activity.description }}</div>\n                    </div>\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <!-- Spécialités par activité -->\n            <div v-if=\"selectedActivities.length > 0\" class=\"mt-6\">\n              <div class=\"flex items-center justify-between mb-3\">\n                <h3 class=\"text-md font-medium text-gray-900\">Spécialités par activité</h3>\n                <button\n                  v-if=\"!showAddSpecialtyForm\"\n                  @click=\"showAddSpecialtyForm = true\"\n                  class=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2 text-sm\"\n                >\n                  <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                  </svg>\n                  <span>Ajouter une spécialité</span>\n                </button>\n              </div>\n              \n              <!-- Formulaire d'ajout de spécialité -->\n              <AddCustomSpecialtyForm\n                v-if=\"showAddSpecialtyForm\"\n                :available-activities=\"availableActivities\"\n                @cancel=\"showAddSpecialtyForm = false\"\n                @success=\"handleAddSpecialtySuccess\"\n              />\n\n              <div v-for=\"activityId in selectedActivities\" :key=\"activityId\" class=\"mb-4\">\n                <div class=\"bg-gray-50 p-4 rounded-lg\">\n                  <h4 class=\"font-medium text-gray-900 mb-2 flex items-center\">\n                    <span class=\"text-lg mr-2\">{{ getActivityById(activityId)?.icon }}</span>\n                    {{ getActivityById(activityId)?.name }}\n                  </h4>\n                  \n                  <div class=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n                    <label v-for=\"discipline in getDisciplinesByActivity(activityId)\" :key=\"discipline.id\"\n                           class=\"flex items-center p-2 text-sm\">\n                      <input :id=\"'discipline-' + discipline.id\" \n                             v-model=\"selectedDisciplines\" \n                             :value=\"discipline.id\" \n                             type=\"checkbox\" \n                             class=\"h-3 w-3 text-blue-500 focus:ring-blue-500 border-gray-300 rounded mr-2\">\n                      <span class=\"text-gray-700\">{{ discipline.name }}</span>\n                    </label>\n                    \n                    <!-- Spécialités personnalisées pour cette activité -->\n                    <template v-for=\"customSpecialty in getCustomSpecialtiesByActivity(activityId)\" :key=\"'custom-' + customSpecialty.id\">\n                      <!-- Affiche le formulaire de modification si on est en mode édition pour CETTE spécialité -->\n                      <div v-if=\"editingSpecialtyId === customSpecialty.id\" class=\"col-span-2 md:col-span-3\">\n                        <EditCustomSpecialtyForm\n                          :specialty=\"customSpecialty\"\n                          :available-activities=\"availableActivities\"\n                          @cancel=\"editingSpecialtyId = null\"\n                          @success=\"handleEditSpecialtySuccess\"\n                        />\n                      </div>\n\n                      <!-- Affiche la spécialité normalement sinon -->\n                      <div v-else\n                           :class=\"[\n                             'flex items-center justify-between p-2 text-sm rounded border',\n                             customSpecialty.is_active ? 'bg-blue-50 border-blue-200' : 'bg-gray-100 border-gray-200 opacity-60'\n                           ]\">\n                        <div class=\"flex items-center\">\n                          <input :id=\"'custom-specialty-' + customSpecialty.id\" \n                                 v-model=\"selectedCustomSpecialties\" \n                                 :value=\"customSpecialty.id\" \n                                 type=\"checkbox\" \n                                 class=\"h-3 w-3 text-blue-500 focus:ring-blue-500 border-gray-300 rounded mr-2\">\n                          <span class=\"font-medium\" :class=\"[customSpecialty.is_active ? 'text-gray-700' : 'text-gray-500 line-through']\">\n                            {{ customSpecialty.name }}\n                          </span>\n                          <span class=\"text-xs text-blue-600 ml-1\">(personnalisée)</span>\n                        </div>\n                        <div class=\"flex items-center space-x-2\">\n                          <button\n                            type=\"button\"\n                            @click=\"editingSpecialtyId = customSpecialty.id\"\n                            class=\"p-1 text-gray-500 hover:text-blue-700 hover:bg-blue-100 rounded\"\n                            title=\"Modifier\"\n                          >\n                            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path></svg>\n                          </button>\n                          <button\n                            type=\"button\"\n                            @click=\"toggleCustomSpecialty(customSpecialty.id)\"\n                            :class=\"[\n                              'px-2 py-1 text-xs rounded transition-colors',\n                              customSpecialty.is_active \n                                ? 'bg-red-100 text-red-700 hover:bg-red-200' \n                                : 'bg-green-100 text-green-700 hover:bg-green-200'\n                            ]\"\n                            :title=\"customSpecialty.is_active ? 'Désactiver' : 'Activer'\"\n                          >\n                            {{ customSpecialty.is_active ? 'Désactiver' : 'Activer' }}\n                          </button>\n                        </div>\n                      </div>\n                    </template>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Statut du club -->\n          <div class=\"pb-6\">\n            <h2 class=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <span class=\"text-xl mr-2\">⚙️</span>\n              Paramètres\n            </h2>\n\n            <div class=\"flex items-center\">\n              <input v-model=\"form.is_active\" type=\"checkbox\" id=\"is_active\" \n                     class=\"h-4 w-4 text-blue-500 focus:ring-blue-500 border-gray-300 rounded\">\n              <label for=\"is_active\" class=\"ml-2 text-sm text-gray-700\">\n                Club actif (visible sur la plateforme)\n              </label>\n            </div>\n          </div>\n\n          <!-- Actions -->\n          <div class=\"flex justify-end space-x-4 pt-6 border-t border-gray-200\">\n            <button type=\"button\" @click=\"cancelEdit\" \n                    class=\"px-6 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\">\n              Annuler\n            </button>\n            <button type=\"submit\" :disabled=\"loading\"\n                    class=\"px-6 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 flex items-center justify-center w-48\">\n              <svg v-if=\"loading\" class=\"animate-spin h-4 w-4 text-white mr-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              <span class=\"text-center\">Enregistrer les modifications</span>\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useAuthStore } from '~/stores/auth'\nimport { useToast } from '~/composables/useToast'\nimport AddCustomSpecialtyForm from '~/components/AddCustomSpecialtyForm.vue'\nimport EditCustomSpecialtyForm from '~/components/EditCustomSpecialtyForm.vue'\n\nconst authStore = useAuthStore()\nconst loading = ref(false)\nconst toast = useToast()\n\n// Données du formulaire\nconst form = ref({\n  name: '',\n  email: '',\n  phone: '',\n  website: '',\n  description: '',\n  address: '',\n  city: '',\n  postal_code: '',\n  country: '',\n  is_active: true\n})\n\n// Activités et spécialités\nconst availableActivities = ref([])\nconst availableDisciplines = ref([])\nconst selectedActivities = ref([])\nconst selectedDisciplines = ref([])\nconst customSpecialties = ref([])\nconst selectedCustomSpecialties = ref([])\nconst showAddSpecialtyForm = ref(false)\nconst editingSpecialtyId = ref(null)\n\n// Charger les données\nconst loadClubData = async () => {\n  try {\n    const config = useRuntimeConfig()\n    const response = await $fetch(`${config.public.apiBase}/club/profile-test`)\n    \n    if (response.club) {\n      const club = response.club\n      form.value = {\n        name: club.name || '',\n        email: club.email || '',\n        phone: club.phone || '',\n        website: club.website || '',\n        description: club.description || '',\n        address: club.address || '',\n        city: club.city || '',\n        postal_code: club.postal_code || '',\n        country: club.country || '',\n        is_active: club.is_active !== false\n      }\n      \n      // Charger les activités sélectionnées\n      if (club.activity_types) {\n        selectedActivities.value = club.activity_types.map(activity => activity.id)\n      }\n      \n      // Charger les disciplines sélectionnées\n      if (club.disciplines) {\n        selectedDisciplines.value = club.disciplines.map(discipline => discipline.id)\n      }\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement du profil:', error)\n  }\n}\n\n// Charger les activités disponibles\nconst loadActivities = async () => {\n  try {\n    const config = useRuntimeConfig()\n    const response = await $fetch(`${config.public.apiBase}/activity-types`)\n    availableActivities.value = response.data || []\n  } catch (error) {\n    console.error('Erreur lors du chargement des activités:', error)\n  }\n}\n\n// Charger les disciplines disponibles\nconst loadDisciplines = async () => {\n  try {\n    const config = useRuntimeConfig()\n    const response = await $fetch(`${config.public.apiBase}/disciplines`)\n    availableDisciplines.value = response.data || []\n  } catch (error) {\n    console.error('Erreur lors du chargement des disciplines:', error)\n  }\n}\n\n// Méthodes utilitaires\nconst getActivityById = (id) => {\n  return availableActivities.value.find(activity => activity.id === id)\n}\n\nconst getDisciplinesByActivity = (activityId) => {\n  return availableDisciplines.value.filter(discipline => discipline.activity_type_id === activityId)\n}\n\nconst getCustomSpecialtiesByActivity = (activityId) => {\n  // Affiche toutes les spécialités, actives ou non\n  return customSpecialties.value.filter(specialty => specialty.activity_type_id === activityId)\n}\n\n// Charger les spécialités personnalisées\nconst loadCustomSpecialties = async () => {\n  try {\n    const config = useRuntimeConfig()\n    const response = await $fetch(`${config.public.apiBase}/club/custom-specialties`)\n    \n    if (response.success) {\n      customSpecialties.value = response.data\n    }\n  } catch (error) {\n    console.error('Erreur lors du chargement des spécialités personnalisées:', error)\n  }\n}\n\n// Désactiver une spécialité personnalisée\nconst toggleCustomSpecialty = async (specialtyId) => {\n  try {\n    const specialty = customSpecialties.value.find(s => s.id === specialtyId)\n    if (!specialty) return\n\n    const config = useRuntimeConfig()\n    const tokenCookie = useCookie('auth-token')\n    \n    await $fetch(`${config.public.apiBase}/club/custom-specialty/${specialtyId}/toggle`, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': `Bearer ${tokenCookie.value}`,\n        'Content-Type': 'application/json'\n      }\n    })\n\n    // Mettre à jour localement\n    specialty.is_active = !specialty.is_active\n    \n    toast.success(\n      specialty.is_active ? 'Spécialité activée' : 'Spécialité désactivée', \n      'Modification réussie'\n    )\n  } catch (error) {\n    console.error('Erreur lors de la modification de la spécialité:', error)\n    toast.error('Erreur lors de la modification', 'Échec')\n  }\n}\n\n// Actions\nconst updateClub = async () => {\n  loading.value = true\n  try {\n    const config = useRuntimeConfig()\n    const tokenCookie = useCookie('auth-token')\n    \n    const updateData = {\n      ...form.value,\n      activity_types: selectedActivities.value,\n      disciplines: selectedDisciplines.value\n    }\n    \n    await $fetch(`${config.public.apiBase}/club/profile-test`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${tokenCookie.value}`,\n        'Content-Type': 'application/json'\n      },\n      body: updateData\n    })\n    \n    // Afficher le message de succès\n    toast.success('Profil du club mis à jour avec succès', 'Sauvegarde réussie')\n    \n    // Rediriger vers le dashboard après un court délai\n    setTimeout(async () => {\n      await navigateTo('/club/dashboard')\n    }, 1500)\n  } catch (error) {\n    console.error('Erreur lors de la mise à jour du club:', error)\n    toast.error('Erreur lors de la mise à jour du profil', 'Échec de la sauvegarde')\n  } finally {\n    loading.value = false\n  }\n}\n\nconst cancelEdit = () => {\n  navigateTo('/club/dashboard')\n}\n\nconst handleAddSpecialtySuccess = (newSpecialty) => {\n  loadCustomSpecialties()\n  showAddSpecialtyForm.value = false\n}\n\nconst handleEditSpecialtySuccess = (updatedSpecialty) => {\n  loadCustomSpecialties()\n  editingSpecialtyId.value = null\n}\n\n// Initialisation\nonMounted(async () => {\n  await Promise.all([\n    loadClubData(),\n    loadActivities(),\n    loadDisciplines(),\n    loadCustomSpecialties()\n  ])\n})\n\nuseHead({\n  title: 'Profil du Club | activibe',\n  meta: [\n    { name: 'description', content: 'Gérez les informations et activités de votre club sur activibe' }\n  ]\n})\n</script>\n"],"names":["_ssrRenderAttrs","_mergeProps","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrLooseEqual","_ssrRenderList","_ssrInterpolate","_ssrRenderAttr","_ssrRenderClass"],"mappings":"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"}