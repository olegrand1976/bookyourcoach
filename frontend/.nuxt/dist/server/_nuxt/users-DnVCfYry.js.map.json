{"file":"users-DnVCfYry.js","mappings":"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","names":["_ssrRenderAttrs","_mergeProps","_ssrRenderAttr","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrLooseEqual","_ssrInterpolate","_ssrRenderList","_ssrRenderClass"],"sources":["../../../../pages/admin/users.vue"],"sourcesContent":["<template>\n    <div class=\"min-h-screen bg-gray-50\">\n        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n            <!-- Header -->\n            <div class=\"mb-8\">\n                <div class=\"flex items-center justify-between\">\n                    <div>\n                        <h1 class=\"text-3xl font-bold text-grayconst createUser = async () => {\n    try {\n        const { $api } = useNuxtApp()\n        await $api.post('/admin/users', userForm.value)\n\n        closeModal()\n        await loadUsers()\n        alert('Utilisateur créé avec succès!')\n    } catch (error) {\n        console.error('Erreur lors de la création:', error)\n        alert('Erreur lors de la création de l\\'utilisateur')\n    }\n}center\">\n                            <EquestrianIcon icon=\"helmet\" class=\"mr-3 text-primary-600\" :size=\"32\" />\n                            Gestion des Utilisateurs\n                        </h1>\n                        <p class=\"mt-2 text-gray-600\">Gérez tous les utilisateurs de la plateforme</p>\n                    </div>\n                    <button @click=\"showCreateModal = true\" class=\"btn-primary flex items-center\">\n                        <EquestrianIcon icon=\"horseshoe\" class=\"mr-2\" :size=\"16\" />\n                        Nouvel utilisateur\n                    </button>\n                </div>\n            </div>\n\n            <!-- Filters -->\n            <div class=\"bg-white rounded-lg shadow p-6 mb-6\">\n                <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                    <div>\n                        <label class=\"block text-sm font-medium text-gray-700 mb-1\">Rechercher</label>\n                        <input v-model=\"filters.search\" type=\"text\" placeholder=\"Nom ou email...\" class=\"input-field\">\n                    </div>\n                    <div>\n                        <label class=\"block text-sm font-medium text-gray-700 mb-1\">Rôle</label>\n                        <select v-model=\"filters.role\" class=\"input-field\">\n                            <option value=\"\">Tous les rôles</option>\n                            <option value=\"admin\">Administrateur</option>\n                            <option value=\"teacher\">Enseignant</option>\n                            <option value=\"student\">Élève</option>\n                        </select>\n                    </div>\n                    <div>\n                        <label class=\"block text-sm font-medium text-gray-700 mb-1\">Statut</label>\n                        <select v-model=\"filters.status\" class=\"input-field\">\n                            <option value=\"\">Tous les statuts</option>\n                            <option value=\"active\">Actif</option>\n                            <option value=\"inactive\">Inactif</option>\n                        </select>\n                    </div>\n                    <div class=\"flex items-end\">\n                        <button @click=\"loadUsers\" class=\"btn-outline w-full\">\n                            Filtrer\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Users Table -->\n            <div class=\"bg-white rounded-lg shadow overflow-hidden\">\n                <div class=\"px-6 py-4 border-b border-gray-200\">\n                    <h2 class=\"text-lg font-semibold text-gray-900\">\n                        Liste des utilisateurs ({{ users.length }})\n                    </h2>\n                </div>\n\n                <div v-if=\"loading\" class=\"p-8 text-center\">\n                    <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto\"></div>\n                    <p class=\"mt-2 text-gray-500\">Chargement...</p>\n                </div>\n\n                <div v-else class=\"overflow-x-auto\">\n                    <table class=\"min-w-full divide-y divide-gray-200\">\n                        <thead class=\"bg-gray-50\">\n                            <tr>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Utilisateur\n                                </th>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Rôle\n                                </th>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Statut\n                                </th>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Inscription\n                                </th>\n                                <th\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                    Actions\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"bg-white divide-y divide-gray-200\">\n                            <tr v-for=\"user in users\" :key=\"user.id\" class=\"hover:bg-gray-50\">\n                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                    <div class=\"flex items-center\">\n                                        <div class=\"flex-shrink-0 h-10 w-10\">\n                                            <div\n                                                class=\"h-10 w-10 rounded-full bg-primary-100 flex items-center justify-center\">\n                                                <span class=\"text-sm font-medium text-primary-600\">\n                                                    {{ user.name.charAt(0).toUpperCase() }}\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div class=\"ml-4\">\n                                            <div class=\"text-sm font-medium text-gray-900\">{{ user.name }}</div>\n                                            <div class=\"text-sm text-gray-500\">{{ user.email }}</div>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                    <span :class=\"getRoleClass(user.role)\"\n                                        class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\">\n                                        {{ getRoleLabel(user.role) }}\n                                    </span>\n                                </td>\n                                <td class=\"px-6 py-4 whitespace-nowrap\">\n                                    <span\n                                        :class=\"user.is_active ? 'text-green-800 bg-green-100' : 'text-red-800 bg-red-100'\"\n                                        class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\">\n                                        {{ user.is_active ? 'Actif' : 'Inactif' }}\n                                    </span>\n                                </td>\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                    {{ formatDate(user.created_at) }}\n                                </td>\n                                <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                                    <div class=\"flex space-x-2\">\n                                        <button @click=\"editUser(user)\" class=\"text-indigo-600 hover:text-indigo-900\">\n                                            Modifier\n                                        </button>\n                                        <button @click=\"toggleUserStatus(user)\"\n                                            :class=\"user.is_active ? 'text-red-600 hover:text-red-900' : 'text-green-600 hover:text-green-900'\">\n                                            {{ user.is_active ? 'Désactiver' : 'Activer' }}\n                                        </button>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <!-- Pagination -->\n                <div class=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\n                    <div class=\"flex-1 flex justify-between sm:hidden\">\n                        <button :disabled=\"currentPage <= 1\" @click=\"changePage(currentPage - 1)\"\n                            class=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                            Précédent\n                        </button>\n                        <button :disabled=\"currentPage >= totalPages\" @click=\"changePage(currentPage + 1)\"\n                            class=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                            Suivant\n                        </button>\n                    </div>\n                    <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n                        <div>\n                            <p class=\"text-sm text-gray-700\">\n                                Affichage de <span class=\"font-medium\">{{ (currentPage - 1) * perPage + 1 }}</span>\n                                à <span class=\"font-medium\">{{ Math.min(currentPage * perPage, totalUsers) }}</span>\n                                sur <span class=\"font-medium\">{{ totalUsers }}</span> résultats\n                            </p>\n                        </div>\n                        <div>\n                            <nav class=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\">\n                                <button v-for=\"page in visiblePages\" :key=\"page\" @click=\"changePage(page)\"\n                                    :class=\"page === currentPage ? 'bg-primary-50 border-primary-500 text-primary-600' : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50'\"\n                                    class=\"relative inline-flex items-center px-4 py-2 border text-sm font-medium\">\n                                    {{ page }}\n                                </button>\n                            </nav>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Create/Edit User Modal -->\n        <div v-if=\"showCreateModal || showEditModal\"\n            class=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n            <div class=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n                <div class=\"mt-3\">\n                    <h3 class=\"text-lg font-medium text-gray-900 mb-4\">\n                        {{ showEditModal ? 'Modifier l\\'utilisateur' : 'Créer un nouvel utilisateur' }}\n                    </h3>\n                    <form @submit.prevent=\"showEditModal ? updateUser() : createUser()\" class=\"space-y-4\">\n                        <div>\n                            <label class=\"block text-sm font-medium text-gray-700\">Nom</label>\n                            <input v-model=\"userForm.name\" type=\"text\" class=\"input-field\" required>\n                        </div>\n                        <div>\n                            <label class=\"block text-sm font-medium text-gray-700\">Email</label>\n                            <input v-model=\"userForm.email\" type=\"email\" class=\"input-field\" required>\n                        </div>\n                        <div>\n                            <label class=\"block text-sm font-medium text-gray-700\">Rôle</label>\n                            <select v-model=\"userForm.role\" class=\"input-field\" required>\n                                <option value=\"student\">Élève</option>\n                                <option value=\"teacher\">Enseignant</option>\n                                <option value=\"admin\">Administrateur</option>\n                            </select>\n                        </div>\n                        <div v-if=\"!showEditModal\">\n                            <label class=\"block text-sm font-medium text-gray-700\">Mot de passe</label>\n                            <input v-model=\"userForm.password\" type=\"password\" class=\"input-field\" required>\n                        </div>\n                        <div v-if=\"!showEditModal\">\n                            <label class=\"block text-sm font-medium text-gray-700\">Confirmer le mot de passe</label>\n                            <input v-model=\"userForm.password_confirmation\" type=\"password\" class=\"input-field\"\n                                required>\n                        </div>\n                        <div class=\"flex justify-end space-x-3\">\n                            <button type=\"button\" @click=\"closeModal\" class=\"btn-outline\">Annuler</button>\n                            <button type=\"submit\" class=\"btn-primary\">\n                                {{ showEditModal ? 'Modifier' : 'Créer' }}\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed, watch } from 'vue'\n\ndefinePageMeta({\n    middleware: 'auth-admin'\n})\n\n// Reactive data\nconst loading = ref(true)\nconst showCreateModal = ref(false)\nconst showEditModal = ref(false)\nconst users = ref([])\nconst currentPage = ref(1)\nconst perPage = ref(10)\nconst totalUsers = ref(0)\nconst totalPages = ref(0)\n\n// Filters\nconst filters = ref({\n    search: '',\n    role: '',\n    status: ''\n})\n\n// Form\nconst userForm = ref({\n    id: null,\n    name: '',\n    email: '',\n    role: 'student',\n    password: '',\n    password_confirmation: ''\n})\n\n// Computed\nconst visiblePages = computed(() => {\n    const pages = []\n    const start = Math.max(1, currentPage.value - 2)\n    const end = Math.min(totalPages.value, currentPage.value + 2)\n\n    for (let i = start; i <= end; i++) {\n        pages.push(i)\n    }\n    return pages\n})\n\n// Methods\nconst getRoleClass = (role) => {\n    const classes = {\n        admin: 'bg-red-100 text-red-800',\n        teacher: 'bg-green-100 text-green-800',\n        student: 'bg-blue-100 text-blue-800'\n    }\n    return classes[role] || 'bg-gray-100 text-gray-800'\n}\n\nconst getRoleLabel = (role) => {\n    const labels = {\n        admin: 'Admin',\n        teacher: 'Enseignant',\n        student: 'Élève'\n    }\n    return labels[role] || role\n}\n\nconst formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('fr-FR')\n}\n\nconst loadUsers = async () => {\n    loading.value = true\n    try {\n        const { $api } = useNuxtApp()\n\n        // Construire les paramètres en filtrant les valeurs vides\n        const params = new URLSearchParams({\n            page: currentPage.value,\n            per_page: perPage.value\n        })\n\n        // Ajouter seulement les filtres non vides\n        if (filters.value.search && filters.value.search.trim()) {\n            params.append('search', filters.value.search.trim())\n        }\n        if (filters.value.role && filters.value.role.trim()) {\n            params.append('role', filters.value.role.trim())\n        }\n        if (filters.value.status && filters.value.status.trim()) {\n            params.append('status', filters.value.status.trim())\n        }\n\n        console.log('Paramètres envoyés:', params.toString())\n        const response = await $api.get(`/admin/users?${params}`)\n\n        // Debug: afficher la réponse complète\n        console.log('Response complète:', response)\n        console.log('Response.data:', response.data)\n\n        // Accès aux données selon la structure de la réponse\n        const responseData = response.data || response\n\n        if (responseData.success && responseData.data) {\n            users.value = responseData.data\n            totalUsers.value = responseData.data.length\n            totalPages.value = Math.ceil(totalUsers.value / perPage.value)\n            console.log('Utilisateurs chargés:', users.value.length)\n        } else if (Array.isArray(responseData)) {\n            // Cas où la réponse est directement un tableau\n            users.value = responseData\n            totalUsers.value = responseData.length\n            totalPages.value = Math.ceil(totalUsers.value / perPage.value)\n            console.log('Utilisateurs chargés (tableau direct):', users.value.length)\n        } else {\n            console.warn('Structure de réponse inattendue:', responseData)\n            users.value = []\n            totalUsers.value = 0\n            totalPages.value = 0\n        }\n    } catch (error) {\n        console.error('Erreur lors du chargement des utilisateurs:', error)\n        console.error('Détails de l\\'erreur:', error.response?.data)\n        // Données de fallback en cas d'erreur\n        users.value = []\n        totalUsers.value = 0\n        totalPages.value = 0\n    } finally {\n        loading.value = false\n    }\n}\n\nconst changePage = (page) => {\n    if (page >= 1 && page <= totalPages.value) {\n        currentPage.value = page\n        loadUsers()\n    }\n}\n\nconst createUser = async () => {\n    try {\n        const { $api } = useNuxtApp()\n        await $api.post('/admin/users', {\n            ...userForm.value,\n            password_confirmation: userForm.value.password\n        })\n\n        closeModal()\n        await loadUsers()\n        alert('Utilisateur créé avec succès!')\n    } catch (error) {\n        console.error('Erreur lors de la création:', error)\n        alert('Erreur lors de la création de l\\'utilisateur')\n    }\n}\n\nconst editUser = (user) => {\n    userForm.value = {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        password: ''\n    }\n    showEditModal.value = true\n}\n\nconst updateUser = async () => {\n    try {\n        const { $api } = useNuxtApp()\n        await $api.put(`/admin/users/${userForm.value.id}`, userForm.value)\n\n        closeModal()\n        await loadUsers()\n        alert('Utilisateur modifié avec succès!')\n    } catch (error) {\n        console.error('Erreur lors de la modification:', error)\n        alert('Erreur lors de la modification de l\\'utilisateur')\n    }\n}\n\nconst toggleUserStatus = async (user) => {\n    try {\n        const { $api } = useNuxtApp()\n        await $api.patch(`/admin/users/${user.id}/toggle-status`)\n\n        user.is_active = !user.is_active\n        alert(`Utilisateur ${user.is_active ? 'activé' : 'désactivé'} avec succès!`)\n    } catch (error) {\n        console.error('Erreur lors du changement de statut:', error)\n        alert('Erreur lors du changement de statut')\n    }\n}\n\nconst closeModal = () => {\n    showCreateModal.value = false\n    showEditModal.value = false\n    userForm.value = {\n        id: null,\n        name: '',\n        email: '',\n        role: 'student',\n        password: '',\n        password_confirmation: ''\n    }\n}\n\n// Watch filters to reload data\nwatch(filters, () => {\n    currentPage.value = 1\n    loadUsers()\n}, { deep: true })\n\n// Lifecycle\nonMounted(() => {\n    loadUsers()\n})\n</script>\n"],"version":3}